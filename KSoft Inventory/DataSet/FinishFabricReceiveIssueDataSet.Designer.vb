'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("FinishFabricReceiveIssueDataSet"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class FinishFabricReceiveIssueDataSet
    Inherits Global.System.Data.DataSet
    
    Private tableFinishFabricReceiveIssue As FinishFabricReceiveIssueDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("FinishFabricReceiveIssue")) Is Nothing) Then
                MyBase.Tables.Add(New FinishFabricReceiveIssueDataTable(ds.Tables("FinishFabricReceiveIssue")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property FinishFabricReceiveIssue() As FinishFabricReceiveIssueDataTable
        Get
            Return Me.tableFinishFabricReceiveIssue
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As FinishFabricReceiveIssueDataSet = CType(MyBase.Clone,FinishFabricReceiveIssueDataSet)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("FinishFabricReceiveIssue")) Is Nothing) Then
                MyBase.Tables.Add(New FinishFabricReceiveIssueDataTable(ds.Tables("FinishFabricReceiveIssue")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableFinishFabricReceiveIssue = CType(MyBase.Tables("FinishFabricReceiveIssue"),FinishFabricReceiveIssueDataTable)
        If (initTable = true) Then
            If (Not (Me.tableFinishFabricReceiveIssue) Is Nothing) Then
                Me.tableFinishFabricReceiveIssue.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "FinishFabricReceiveIssueDataSet"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/FinishFabricReceiveIssueDataSet.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableFinishFabricReceiveIssue = New FinishFabricReceiveIssueDataTable()
        MyBase.Tables.Add(Me.tableFinishFabricReceiveIssue)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeFinishFabricReceiveIssue() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As FinishFabricReceiveIssueDataSet = New FinishFabricReceiveIssueDataSet()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub FinishFabricReceiveIssueRowChangeEventHandler(ByVal sender As Object, ByVal e As FinishFabricReceiveIssueRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class FinishFabricReceiveIssueDataTable
        Inherits Global.System.Data.TypedTableBase(Of FinishFabricReceiveIssueRow)
        
        Private columnFFReceiveIssueId As Global.System.Data.DataColumn
        
        Private columnChallanNo As Global.System.Data.DataColumn
        
        Private columnChallanDate As Global.System.Data.DataColumn
        
        Private columnReceiveQuantity As Global.System.Data.DataColumn
        
        Private columnIssueQuantity As Global.System.Data.DataColumn
        
        Private columnBatchNo As Global.System.Data.DataColumn
        
        Private columnRemarks As Global.System.Data.DataColumn
        
        Private columnSupplierId As Global.System.Data.DataColumn
        
        Private columnIssueReceiveTypeId As Global.System.Data.DataColumn
        
        Private columnLocationReference As Global.System.Data.DataColumn
        
        Private columnIsImported As Global.System.Data.DataColumn
        
        Private columnLCNo As Global.System.Data.DataColumn
        
        Private columnLCDate As Global.System.Data.DataColumn
        
        Private columnBranchId As Global.System.Data.DataColumn
        
        Private columnRollQuantity As Global.System.Data.DataColumn
        
        Private columnGatePassNo As Global.System.Data.DataColumn
        
        Private columnVehicleNo As Global.System.Data.DataColumn
        
        Private columnFinishFabricBookingDetailsId As Global.System.Data.DataColumn
        
        Private columnBatchInformationId As Global.System.Data.DataColumn
        
        Private columnDyeingDate As Global.System.Data.DataColumn
        
        Private columnCompanyId As Global.System.Data.DataColumn
        
        Private columnIssueQuantity_Cutting As Global.System.Data.DataColumn
        
        Private columnUnitId As Global.System.Data.DataColumn
        
        Private columnReceiveQuantity_Yrds As Global.System.Data.DataColumn
        
        Private columnReceiveQuantity_Pcs As Global.System.Data.DataColumn
        
        Private columnIssueQuantity_Yrds As Global.System.Data.DataColumn
        
        Private columnIssueQuantity_Pcs As Global.System.Data.DataColumn
        
        Private columnIssueQuantity_Cutting_Yrds As Global.System.Data.DataColumn
        
        Private columnIssueQuantity_Cutting_Pcs As Global.System.Data.DataColumn
        
        Private columnRollQuantity_Issue As Global.System.Data.DataColumn
        
        Private columnIsGMTStore As Global.System.Data.DataColumn
        
        Private columnGMTPartGroup As Global.System.Data.DataColumn
        
        Private columnIsClose As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "FinishFabricReceiveIssue"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FFReceiveIssueIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFFReceiveIssueId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ChallanNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnChallanNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ChallanDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnChallanDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ReceiveQuantityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReceiveQuantity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IssueQuantityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIssueQuantity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BatchNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBatchNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RemarksColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRemarks
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SupplierIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSupplierId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IssueReceiveTypeIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIssueReceiveTypeId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LocationReferenceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLocationReference
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IsImportedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIsImported
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LCNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLCNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LCDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLCDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BranchIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBranchId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RollQuantityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRollQuantity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GatePassNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGatePassNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VehicleNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVehicleNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FinishFabricBookingDetailsIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFinishFabricBookingDetailsId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BatchInformationIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBatchInformationId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DyeingDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDyeingDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CompanyIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCompanyId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IssueQuantity_CuttingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIssueQuantity_Cutting
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UnitIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUnitId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ReceiveQuantity_YrdsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReceiveQuantity_Yrds
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ReceiveQuantity_PcsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReceiveQuantity_Pcs
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IssueQuantity_YrdsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIssueQuantity_Yrds
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IssueQuantity_PcsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIssueQuantity_Pcs
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IssueQuantity_Cutting_YrdsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIssueQuantity_Cutting_Yrds
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IssueQuantity_Cutting_PcsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIssueQuantity_Cutting_Pcs
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RollQuantity_IssueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRollQuantity_Issue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IsGMTStoreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIsGMTStore
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GMTPartGroupColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGMTPartGroup
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IsCloseColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIsClose
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As FinishFabricReceiveIssueRow
            Get
                Return CType(Me.Rows(index),FinishFabricReceiveIssueRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FinishFabricReceiveIssueRowChanging As FinishFabricReceiveIssueRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FinishFabricReceiveIssueRowChanged As FinishFabricReceiveIssueRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FinishFabricReceiveIssueRowDeleting As FinishFabricReceiveIssueRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FinishFabricReceiveIssueRowDeleted As FinishFabricReceiveIssueRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddFinishFabricReceiveIssueRow(ByVal row As FinishFabricReceiveIssueRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddFinishFabricReceiveIssueRow( _
                    ByVal ChallanNo As String,  _
                    ByVal ChallanDate As Date,  _
                    ByVal ReceiveQuantity As Decimal,  _
                    ByVal IssueQuantity As Decimal,  _
                    ByVal BatchNo As String,  _
                    ByVal Remarks As String,  _
                    ByVal SupplierId As Long,  _
                    ByVal IssueReceiveTypeId As String,  _
                    ByVal LocationReference As String,  _
                    ByVal IsImported As Boolean,  _
                    ByVal LCNo As String,  _
                    ByVal LCDate As Date,  _
                    ByVal BranchId As Long,  _
                    ByVal RollQuantity As Integer,  _
                    ByVal GatePassNo As String,  _
                    ByVal VehicleNo As String,  _
                    ByVal FinishFabricBookingDetailsId As Long,  _
                    ByVal BatchInformationId As Long,  _
                    ByVal DyeingDate As Date,  _
                    ByVal CompanyId As Long,  _
                    ByVal IssueQuantity_Cutting As Decimal,  _
                    ByVal UnitId As Long,  _
                    ByVal ReceiveQuantity_Yrds As Decimal,  _
                    ByVal ReceiveQuantity_Pcs As Decimal,  _
                    ByVal IssueQuantity_Yrds As Decimal,  _
                    ByVal IssueQuantity_Pcs As Decimal,  _
                    ByVal IssueQuantity_Cutting_Yrds As Decimal,  _
                    ByVal IssueQuantity_Cutting_Pcs As Decimal,  _
                    ByVal RollQuantity_Issue As Integer,  _
                    ByVal IsGMTStore As Boolean,  _
                    ByVal GMTPartGroup As String,  _
                    ByVal IsClose As Boolean) As FinishFabricReceiveIssueRow
            Dim rowFinishFabricReceiveIssueRow As FinishFabricReceiveIssueRow = CType(Me.NewRow,FinishFabricReceiveIssueRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, ChallanNo, ChallanDate, ReceiveQuantity, IssueQuantity, BatchNo, Remarks, SupplierId, IssueReceiveTypeId, LocationReference, IsImported, LCNo, LCDate, BranchId, RollQuantity, GatePassNo, VehicleNo, FinishFabricBookingDetailsId, BatchInformationId, DyeingDate, CompanyId, IssueQuantity_Cutting, UnitId, ReceiveQuantity_Yrds, ReceiveQuantity_Pcs, IssueQuantity_Yrds, IssueQuantity_Pcs, IssueQuantity_Cutting_Yrds, IssueQuantity_Cutting_Pcs, RollQuantity_Issue, IsGMTStore, GMTPartGroup, IsClose}
            rowFinishFabricReceiveIssueRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowFinishFabricReceiveIssueRow)
            Return rowFinishFabricReceiveIssueRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByFFReceiveIssueId(ByVal FFReceiveIssueId As Long) As FinishFabricReceiveIssueRow
            Return CType(Me.Rows.Find(New Object() {FFReceiveIssueId}),FinishFabricReceiveIssueRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As FinishFabricReceiveIssueDataTable = CType(MyBase.Clone,FinishFabricReceiveIssueDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New FinishFabricReceiveIssueDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnFFReceiveIssueId = MyBase.Columns("FFReceiveIssueId")
            Me.columnChallanNo = MyBase.Columns("ChallanNo")
            Me.columnChallanDate = MyBase.Columns("ChallanDate")
            Me.columnReceiveQuantity = MyBase.Columns("ReceiveQuantity")
            Me.columnIssueQuantity = MyBase.Columns("IssueQuantity")
            Me.columnBatchNo = MyBase.Columns("BatchNo")
            Me.columnRemarks = MyBase.Columns("Remarks")
            Me.columnSupplierId = MyBase.Columns("SupplierId")
            Me.columnIssueReceiveTypeId = MyBase.Columns("IssueReceiveTypeId")
            Me.columnLocationReference = MyBase.Columns("LocationReference")
            Me.columnIsImported = MyBase.Columns("IsImported")
            Me.columnLCNo = MyBase.Columns("LCNo")
            Me.columnLCDate = MyBase.Columns("LCDate")
            Me.columnBranchId = MyBase.Columns("BranchId")
            Me.columnRollQuantity = MyBase.Columns("RollQuantity")
            Me.columnGatePassNo = MyBase.Columns("GatePassNo")
            Me.columnVehicleNo = MyBase.Columns("VehicleNo")
            Me.columnFinishFabricBookingDetailsId = MyBase.Columns("FinishFabricBookingDetailsId")
            Me.columnBatchInformationId = MyBase.Columns("BatchInformationId")
            Me.columnDyeingDate = MyBase.Columns("DyeingDate")
            Me.columnCompanyId = MyBase.Columns("CompanyId")
            Me.columnIssueQuantity_Cutting = MyBase.Columns("IssueQuantity_Cutting")
            Me.columnUnitId = MyBase.Columns("UnitId")
            Me.columnReceiveQuantity_Yrds = MyBase.Columns("ReceiveQuantity_Yrds")
            Me.columnReceiveQuantity_Pcs = MyBase.Columns("ReceiveQuantity_Pcs")
            Me.columnIssueQuantity_Yrds = MyBase.Columns("IssueQuantity_Yrds")
            Me.columnIssueQuantity_Pcs = MyBase.Columns("IssueQuantity_Pcs")
            Me.columnIssueQuantity_Cutting_Yrds = MyBase.Columns("IssueQuantity_Cutting_Yrds")
            Me.columnIssueQuantity_Cutting_Pcs = MyBase.Columns("IssueQuantity_Cutting_Pcs")
            Me.columnRollQuantity_Issue = MyBase.Columns("RollQuantity_Issue")
            Me.columnIsGMTStore = MyBase.Columns("IsGMTStore")
            Me.columnGMTPartGroup = MyBase.Columns("GMTPartGroup")
            Me.columnIsClose = MyBase.Columns("IsClose")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnFFReceiveIssueId = New Global.System.Data.DataColumn("FFReceiveIssueId", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFFReceiveIssueId)
            Me.columnChallanNo = New Global.System.Data.DataColumn("ChallanNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnChallanNo)
            Me.columnChallanDate = New Global.System.Data.DataColumn("ChallanDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnChallanDate)
            Me.columnReceiveQuantity = New Global.System.Data.DataColumn("ReceiveQuantity", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReceiveQuantity)
            Me.columnIssueQuantity = New Global.System.Data.DataColumn("IssueQuantity", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIssueQuantity)
            Me.columnBatchNo = New Global.System.Data.DataColumn("BatchNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBatchNo)
            Me.columnRemarks = New Global.System.Data.DataColumn("Remarks", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRemarks)
            Me.columnSupplierId = New Global.System.Data.DataColumn("SupplierId", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSupplierId)
            Me.columnIssueReceiveTypeId = New Global.System.Data.DataColumn("IssueReceiveTypeId", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIssueReceiveTypeId)
            Me.columnLocationReference = New Global.System.Data.DataColumn("LocationReference", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLocationReference)
            Me.columnIsImported = New Global.System.Data.DataColumn("IsImported", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIsImported)
            Me.columnLCNo = New Global.System.Data.DataColumn("LCNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLCNo)
            Me.columnLCDate = New Global.System.Data.DataColumn("LCDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLCDate)
            Me.columnBranchId = New Global.System.Data.DataColumn("BranchId", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBranchId)
            Me.columnRollQuantity = New Global.System.Data.DataColumn("RollQuantity", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRollQuantity)
            Me.columnGatePassNo = New Global.System.Data.DataColumn("GatePassNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGatePassNo)
            Me.columnVehicleNo = New Global.System.Data.DataColumn("VehicleNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVehicleNo)
            Me.columnFinishFabricBookingDetailsId = New Global.System.Data.DataColumn("FinishFabricBookingDetailsId", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFinishFabricBookingDetailsId)
            Me.columnBatchInformationId = New Global.System.Data.DataColumn("BatchInformationId", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBatchInformationId)
            Me.columnDyeingDate = New Global.System.Data.DataColumn("DyeingDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDyeingDate)
            Me.columnCompanyId = New Global.System.Data.DataColumn("CompanyId", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCompanyId)
            Me.columnIssueQuantity_Cutting = New Global.System.Data.DataColumn("IssueQuantity_Cutting", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIssueQuantity_Cutting)
            Me.columnUnitId = New Global.System.Data.DataColumn("UnitId", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUnitId)
            Me.columnReceiveQuantity_Yrds = New Global.System.Data.DataColumn("ReceiveQuantity_Yrds", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReceiveQuantity_Yrds)
            Me.columnReceiveQuantity_Pcs = New Global.System.Data.DataColumn("ReceiveQuantity_Pcs", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReceiveQuantity_Pcs)
            Me.columnIssueQuantity_Yrds = New Global.System.Data.DataColumn("IssueQuantity_Yrds", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIssueQuantity_Yrds)
            Me.columnIssueQuantity_Pcs = New Global.System.Data.DataColumn("IssueQuantity_Pcs", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIssueQuantity_Pcs)
            Me.columnIssueQuantity_Cutting_Yrds = New Global.System.Data.DataColumn("IssueQuantity_Cutting_Yrds", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIssueQuantity_Cutting_Yrds)
            Me.columnIssueQuantity_Cutting_Pcs = New Global.System.Data.DataColumn("IssueQuantity_Cutting_Pcs", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIssueQuantity_Cutting_Pcs)
            Me.columnRollQuantity_Issue = New Global.System.Data.DataColumn("RollQuantity_Issue", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRollQuantity_Issue)
            Me.columnIsGMTStore = New Global.System.Data.DataColumn("IsGMTStore", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIsGMTStore)
            Me.columnGMTPartGroup = New Global.System.Data.DataColumn("GMTPartGroup", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGMTPartGroup)
            Me.columnIsClose = New Global.System.Data.DataColumn("IsClose", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIsClose)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnFFReceiveIssueId}, true))
            Me.columnFFReceiveIssueId.AutoIncrement = true
            Me.columnFFReceiveIssueId.AutoIncrementSeed = -1
            Me.columnFFReceiveIssueId.AutoIncrementStep = -1
            Me.columnFFReceiveIssueId.AllowDBNull = false
            Me.columnFFReceiveIssueId.ReadOnly = true
            Me.columnFFReceiveIssueId.Unique = true
            Me.columnChallanNo.MaxLength = 50
            Me.columnReceiveQuantity.DefaultValue = CType(0D,Decimal)
            Me.columnIssueQuantity.DefaultValue = CType(0D,Decimal)
            Me.columnBatchNo.MaxLength = 200
            Me.columnRemarks.MaxLength = 200
            Me.columnIssueReceiveTypeId.AllowDBNull = false
            Me.columnIssueReceiveTypeId.MaxLength = 50
            Me.columnLocationReference.MaxLength = 50
            Me.columnLCNo.MaxLength = 50
            Me.columnGatePassNo.MaxLength = 50
            Me.columnVehicleNo.MaxLength = 50
            Me.columnReceiveQuantity_Yrds.DefaultValue = CType(0D,Decimal)
            Me.columnReceiveQuantity_Pcs.DefaultValue = CType(0D,Decimal)
            Me.columnIssueQuantity_Yrds.DefaultValue = CType(0D,Decimal)
            Me.columnIssueQuantity_Pcs.DefaultValue = CType(0D,Decimal)
            Me.columnIssueQuantity_Cutting_Yrds.DefaultValue = CType(0D,Decimal)
            Me.columnIssueQuantity_Cutting_Pcs.DefaultValue = CType(0D,Decimal)
            Me.columnRollQuantity_Issue.DefaultValue = CType(0,Integer)
            Me.columnGMTPartGroup.MaxLength = 50
            Me.columnIsClose.DefaultValue = CType(false,Boolean)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewFinishFabricReceiveIssueRow() As FinishFabricReceiveIssueRow
            Return CType(Me.NewRow,FinishFabricReceiveIssueRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New FinishFabricReceiveIssueRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(FinishFabricReceiveIssueRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.FinishFabricReceiveIssueRowChangedEvent) Is Nothing) Then
                RaiseEvent FinishFabricReceiveIssueRowChanged(Me, New FinishFabricReceiveIssueRowChangeEvent(CType(e.Row,FinishFabricReceiveIssueRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.FinishFabricReceiveIssueRowChangingEvent) Is Nothing) Then
                RaiseEvent FinishFabricReceiveIssueRowChanging(Me, New FinishFabricReceiveIssueRowChangeEvent(CType(e.Row,FinishFabricReceiveIssueRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.FinishFabricReceiveIssueRowDeletedEvent) Is Nothing) Then
                RaiseEvent FinishFabricReceiveIssueRowDeleted(Me, New FinishFabricReceiveIssueRowChangeEvent(CType(e.Row,FinishFabricReceiveIssueRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.FinishFabricReceiveIssueRowDeletingEvent) Is Nothing) Then
                RaiseEvent FinishFabricReceiveIssueRowDeleting(Me, New FinishFabricReceiveIssueRowChangeEvent(CType(e.Row,FinishFabricReceiveIssueRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveFinishFabricReceiveIssueRow(ByVal row As FinishFabricReceiveIssueRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As FinishFabricReceiveIssueDataSet = New FinishFabricReceiveIssueDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "FinishFabricReceiveIssueDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class FinishFabricReceiveIssueRow
        Inherits Global.System.Data.DataRow
        
        Private tableFinishFabricReceiveIssue As FinishFabricReceiveIssueDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableFinishFabricReceiveIssue = CType(Me.Table,FinishFabricReceiveIssueDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FFReceiveIssueId() As Long
            Get
                Return CType(Me(Me.tableFinishFabricReceiveIssue.FFReceiveIssueIdColumn),Long)
            End Get
            Set
                Me(Me.tableFinishFabricReceiveIssue.FFReceiveIssueIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ChallanNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableFinishFabricReceiveIssue.ChallanNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ChallanNo' in table 'FinishFabricReceiveIssue' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFinishFabricReceiveIssue.ChallanNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ChallanDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableFinishFabricReceiveIssue.ChallanDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ChallanDate' in table 'FinishFabricReceiveIssue' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableFinishFabricReceiveIssue.ChallanDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ReceiveQuantity() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableFinishFabricReceiveIssue.ReceiveQuantityColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ReceiveQuantity' in table 'FinishFabricReceiveIssue' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFinishFabricReceiveIssue.ReceiveQuantityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IssueQuantity() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableFinishFabricReceiveIssue.IssueQuantityColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IssueQuantity' in table 'FinishFabricReceiveIssue' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableFinishFabricReceiveIssue.IssueQuantityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BatchNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableFinishFabricReceiveIssue.BatchNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BatchNo' in table 'FinishFabricReceiveIssue' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFinishFabricReceiveIssue.BatchNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Remarks() As String
            Get
                Try 
                    Return CType(Me(Me.tableFinishFabricReceiveIssue.RemarksColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Remarks' in table 'FinishFabricReceiveIssue' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFinishFabricReceiveIssue.RemarksColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SupplierId() As Long
            Get
                Try 
                    Return CType(Me(Me.tableFinishFabricReceiveIssue.SupplierIdColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SupplierId' in table 'FinishFabricReceiveIssue' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFinishFabricReceiveIssue.SupplierIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IssueReceiveTypeId() As String
            Get
                Return CType(Me(Me.tableFinishFabricReceiveIssue.IssueReceiveTypeIdColumn),String)
            End Get
            Set
                Me(Me.tableFinishFabricReceiveIssue.IssueReceiveTypeIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LocationReference() As String
            Get
                Try 
                    Return CType(Me(Me.tableFinishFabricReceiveIssue.LocationReferenceColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LocationReference' in table 'FinishFabricReceiveIssue' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFinishFabricReceiveIssue.LocationReferenceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IsImported() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableFinishFabricReceiveIssue.IsImportedColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IsImported' in table 'FinishFabricReceiveIssue' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFinishFabricReceiveIssue.IsImportedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LCNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableFinishFabricReceiveIssue.LCNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LCNo' in table 'FinishFabricReceiveIssue' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFinishFabricReceiveIssue.LCNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LCDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableFinishFabricReceiveIssue.LCDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LCDate' in table 'FinishFabricReceiveIssue' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFinishFabricReceiveIssue.LCDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BranchId() As Long
            Get
                Try 
                    Return CType(Me(Me.tableFinishFabricReceiveIssue.BranchIdColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BranchId' in table 'FinishFabricReceiveIssue' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFinishFabricReceiveIssue.BranchIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RollQuantity() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableFinishFabricReceiveIssue.RollQuantityColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RollQuantity' in table 'FinishFabricReceiveIssue' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableFinishFabricReceiveIssue.RollQuantityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GatePassNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableFinishFabricReceiveIssue.GatePassNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GatePassNo' in table 'FinishFabricReceiveIssue' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFinishFabricReceiveIssue.GatePassNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VehicleNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableFinishFabricReceiveIssue.VehicleNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VehicleNo' in table 'FinishFabricReceiveIssue' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFinishFabricReceiveIssue.VehicleNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FinishFabricBookingDetailsId() As Long
            Get
                Try 
                    Return CType(Me(Me.tableFinishFabricReceiveIssue.FinishFabricBookingDetailsIdColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FinishFabricBookingDetailsId' in table 'FinishFabricReceive"& _ 
                            "Issue' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFinishFabricReceiveIssue.FinishFabricBookingDetailsIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BatchInformationId() As Long
            Get
                Try 
                    Return CType(Me(Me.tableFinishFabricReceiveIssue.BatchInformationIdColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BatchInformationId' in table 'FinishFabricReceiveIssue' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFinishFabricReceiveIssue.BatchInformationIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DyeingDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableFinishFabricReceiveIssue.DyeingDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DyeingDate' in table 'FinishFabricReceiveIssue' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFinishFabricReceiveIssue.DyeingDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CompanyId() As Long
            Get
                Try 
                    Return CType(Me(Me.tableFinishFabricReceiveIssue.CompanyIdColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CompanyId' in table 'FinishFabricReceiveIssue' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFinishFabricReceiveIssue.CompanyIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IssueQuantity_Cutting() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableFinishFabricReceiveIssue.IssueQuantity_CuttingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IssueQuantity_Cutting' in table 'FinishFabricReceiveIssue' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFinishFabricReceiveIssue.IssueQuantity_CuttingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UnitId() As Long
            Get
                Try 
                    Return CType(Me(Me.tableFinishFabricReceiveIssue.UnitIdColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UnitId' in table 'FinishFabricReceiveIssue' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFinishFabricReceiveIssue.UnitIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ReceiveQuantity_Yrds() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableFinishFabricReceiveIssue.ReceiveQuantity_YrdsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ReceiveQuantity_Yrds' in table 'FinishFabricReceiveIssue' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFinishFabricReceiveIssue.ReceiveQuantity_YrdsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ReceiveQuantity_Pcs() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableFinishFabricReceiveIssue.ReceiveQuantity_PcsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ReceiveQuantity_Pcs' in table 'FinishFabricReceiveIssue' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFinishFabricReceiveIssue.ReceiveQuantity_PcsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IssueQuantity_Yrds() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableFinishFabricReceiveIssue.IssueQuantity_YrdsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IssueQuantity_Yrds' in table 'FinishFabricReceiveIssue' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFinishFabricReceiveIssue.IssueQuantity_YrdsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IssueQuantity_Pcs() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableFinishFabricReceiveIssue.IssueQuantity_PcsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IssueQuantity_Pcs' in table 'FinishFabricReceiveIssue' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFinishFabricReceiveIssue.IssueQuantity_PcsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IssueQuantity_Cutting_Yrds() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableFinishFabricReceiveIssue.IssueQuantity_Cutting_YrdsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IssueQuantity_Cutting_Yrds' in table 'FinishFabricReceiveIs"& _ 
                            "sue' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFinishFabricReceiveIssue.IssueQuantity_Cutting_YrdsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IssueQuantity_Cutting_Pcs() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableFinishFabricReceiveIssue.IssueQuantity_Cutting_PcsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IssueQuantity_Cutting_Pcs' in table 'FinishFabricReceiveIss"& _ 
                            "ue' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFinishFabricReceiveIssue.IssueQuantity_Cutting_PcsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RollQuantity_Issue() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableFinishFabricReceiveIssue.RollQuantity_IssueColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RollQuantity_Issue' in table 'FinishFabricReceiveIssue' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFinishFabricReceiveIssue.RollQuantity_IssueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IsGMTStore() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableFinishFabricReceiveIssue.IsGMTStoreColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IsGMTStore' in table 'FinishFabricReceiveIssue' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFinishFabricReceiveIssue.IsGMTStoreColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GMTPartGroup() As String
            Get
                Try 
                    Return CType(Me(Me.tableFinishFabricReceiveIssue.GMTPartGroupColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GMTPartGroup' in table 'FinishFabricReceiveIssue' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableFinishFabricReceiveIssue.GMTPartGroupColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IsClose() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableFinishFabricReceiveIssue.IsCloseColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IsClose' in table 'FinishFabricReceiveIssue' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFinishFabricReceiveIssue.IsCloseColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsChallanNoNull() As Boolean
            Return Me.IsNull(Me.tableFinishFabricReceiveIssue.ChallanNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetChallanNoNull()
            Me(Me.tableFinishFabricReceiveIssue.ChallanNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsChallanDateNull() As Boolean
            Return Me.IsNull(Me.tableFinishFabricReceiveIssue.ChallanDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetChallanDateNull()
            Me(Me.tableFinishFabricReceiveIssue.ChallanDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsReceiveQuantityNull() As Boolean
            Return Me.IsNull(Me.tableFinishFabricReceiveIssue.ReceiveQuantityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetReceiveQuantityNull()
            Me(Me.tableFinishFabricReceiveIssue.ReceiveQuantityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIssueQuantityNull() As Boolean
            Return Me.IsNull(Me.tableFinishFabricReceiveIssue.IssueQuantityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIssueQuantityNull()
            Me(Me.tableFinishFabricReceiveIssue.IssueQuantityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBatchNoNull() As Boolean
            Return Me.IsNull(Me.tableFinishFabricReceiveIssue.BatchNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBatchNoNull()
            Me(Me.tableFinishFabricReceiveIssue.BatchNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRemarksNull() As Boolean
            Return Me.IsNull(Me.tableFinishFabricReceiveIssue.RemarksColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRemarksNull()
            Me(Me.tableFinishFabricReceiveIssue.RemarksColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSupplierIdNull() As Boolean
            Return Me.IsNull(Me.tableFinishFabricReceiveIssue.SupplierIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSupplierIdNull()
            Me(Me.tableFinishFabricReceiveIssue.SupplierIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLocationReferenceNull() As Boolean
            Return Me.IsNull(Me.tableFinishFabricReceiveIssue.LocationReferenceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLocationReferenceNull()
            Me(Me.tableFinishFabricReceiveIssue.LocationReferenceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIsImportedNull() As Boolean
            Return Me.IsNull(Me.tableFinishFabricReceiveIssue.IsImportedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIsImportedNull()
            Me(Me.tableFinishFabricReceiveIssue.IsImportedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLCNoNull() As Boolean
            Return Me.IsNull(Me.tableFinishFabricReceiveIssue.LCNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLCNoNull()
            Me(Me.tableFinishFabricReceiveIssue.LCNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLCDateNull() As Boolean
            Return Me.IsNull(Me.tableFinishFabricReceiveIssue.LCDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLCDateNull()
            Me(Me.tableFinishFabricReceiveIssue.LCDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBranchIdNull() As Boolean
            Return Me.IsNull(Me.tableFinishFabricReceiveIssue.BranchIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBranchIdNull()
            Me(Me.tableFinishFabricReceiveIssue.BranchIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRollQuantityNull() As Boolean
            Return Me.IsNull(Me.tableFinishFabricReceiveIssue.RollQuantityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRollQuantityNull()
            Me(Me.tableFinishFabricReceiveIssue.RollQuantityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGatePassNoNull() As Boolean
            Return Me.IsNull(Me.tableFinishFabricReceiveIssue.GatePassNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGatePassNoNull()
            Me(Me.tableFinishFabricReceiveIssue.GatePassNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVehicleNoNull() As Boolean
            Return Me.IsNull(Me.tableFinishFabricReceiveIssue.VehicleNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVehicleNoNull()
            Me(Me.tableFinishFabricReceiveIssue.VehicleNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFinishFabricBookingDetailsIdNull() As Boolean
            Return Me.IsNull(Me.tableFinishFabricReceiveIssue.FinishFabricBookingDetailsIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFinishFabricBookingDetailsIdNull()
            Me(Me.tableFinishFabricReceiveIssue.FinishFabricBookingDetailsIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBatchInformationIdNull() As Boolean
            Return Me.IsNull(Me.tableFinishFabricReceiveIssue.BatchInformationIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBatchInformationIdNull()
            Me(Me.tableFinishFabricReceiveIssue.BatchInformationIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDyeingDateNull() As Boolean
            Return Me.IsNull(Me.tableFinishFabricReceiveIssue.DyeingDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDyeingDateNull()
            Me(Me.tableFinishFabricReceiveIssue.DyeingDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCompanyIdNull() As Boolean
            Return Me.IsNull(Me.tableFinishFabricReceiveIssue.CompanyIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCompanyIdNull()
            Me(Me.tableFinishFabricReceiveIssue.CompanyIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIssueQuantity_CuttingNull() As Boolean
            Return Me.IsNull(Me.tableFinishFabricReceiveIssue.IssueQuantity_CuttingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIssueQuantity_CuttingNull()
            Me(Me.tableFinishFabricReceiveIssue.IssueQuantity_CuttingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUnitIdNull() As Boolean
            Return Me.IsNull(Me.tableFinishFabricReceiveIssue.UnitIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUnitIdNull()
            Me(Me.tableFinishFabricReceiveIssue.UnitIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsReceiveQuantity_YrdsNull() As Boolean
            Return Me.IsNull(Me.tableFinishFabricReceiveIssue.ReceiveQuantity_YrdsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetReceiveQuantity_YrdsNull()
            Me(Me.tableFinishFabricReceiveIssue.ReceiveQuantity_YrdsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsReceiveQuantity_PcsNull() As Boolean
            Return Me.IsNull(Me.tableFinishFabricReceiveIssue.ReceiveQuantity_PcsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetReceiveQuantity_PcsNull()
            Me(Me.tableFinishFabricReceiveIssue.ReceiveQuantity_PcsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIssueQuantity_YrdsNull() As Boolean
            Return Me.IsNull(Me.tableFinishFabricReceiveIssue.IssueQuantity_YrdsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIssueQuantity_YrdsNull()
            Me(Me.tableFinishFabricReceiveIssue.IssueQuantity_YrdsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIssueQuantity_PcsNull() As Boolean
            Return Me.IsNull(Me.tableFinishFabricReceiveIssue.IssueQuantity_PcsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIssueQuantity_PcsNull()
            Me(Me.tableFinishFabricReceiveIssue.IssueQuantity_PcsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIssueQuantity_Cutting_YrdsNull() As Boolean
            Return Me.IsNull(Me.tableFinishFabricReceiveIssue.IssueQuantity_Cutting_YrdsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIssueQuantity_Cutting_YrdsNull()
            Me(Me.tableFinishFabricReceiveIssue.IssueQuantity_Cutting_YrdsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIssueQuantity_Cutting_PcsNull() As Boolean
            Return Me.IsNull(Me.tableFinishFabricReceiveIssue.IssueQuantity_Cutting_PcsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIssueQuantity_Cutting_PcsNull()
            Me(Me.tableFinishFabricReceiveIssue.IssueQuantity_Cutting_PcsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRollQuantity_IssueNull() As Boolean
            Return Me.IsNull(Me.tableFinishFabricReceiveIssue.RollQuantity_IssueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRollQuantity_IssueNull()
            Me(Me.tableFinishFabricReceiveIssue.RollQuantity_IssueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIsGMTStoreNull() As Boolean
            Return Me.IsNull(Me.tableFinishFabricReceiveIssue.IsGMTStoreColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIsGMTStoreNull()
            Me(Me.tableFinishFabricReceiveIssue.IsGMTStoreColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGMTPartGroupNull() As Boolean
            Return Me.IsNull(Me.tableFinishFabricReceiveIssue.GMTPartGroupColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGMTPartGroupNull()
            Me(Me.tableFinishFabricReceiveIssue.GMTPartGroupColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIsCloseNull() As Boolean
            Return Me.IsNull(Me.tableFinishFabricReceiveIssue.IsCloseColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIsCloseNull()
            Me(Me.tableFinishFabricReceiveIssue.IsCloseColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class FinishFabricReceiveIssueRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As FinishFabricReceiveIssueRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As FinishFabricReceiveIssueRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As FinishFabricReceiveIssueRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace FinishFabricReceiveIssueDataSetTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class FinishFabricReceiveIssueTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "FinishFabricReceiveIssue"
            tableMapping.ColumnMappings.Add("FFReceiveIssueId", "FFReceiveIssueId")
            tableMapping.ColumnMappings.Add("ChallanNo", "ChallanNo")
            tableMapping.ColumnMappings.Add("ChallanDate", "ChallanDate")
            tableMapping.ColumnMappings.Add("ReceiveQuantity", "ReceiveQuantity")
            tableMapping.ColumnMappings.Add("IssueQuantity", "IssueQuantity")
            tableMapping.ColumnMappings.Add("BatchNo", "BatchNo")
            tableMapping.ColumnMappings.Add("Remarks", "Remarks")
            tableMapping.ColumnMappings.Add("SupplierId", "SupplierId")
            tableMapping.ColumnMappings.Add("IssueReceiveTypeId", "IssueReceiveTypeId")
            tableMapping.ColumnMappings.Add("LocationReference", "LocationReference")
            tableMapping.ColumnMappings.Add("IsImported", "IsImported")
            tableMapping.ColumnMappings.Add("LCNo", "LCNo")
            tableMapping.ColumnMappings.Add("LCDate", "LCDate")
            tableMapping.ColumnMappings.Add("BranchId", "BranchId")
            tableMapping.ColumnMappings.Add("RollQuantity", "RollQuantity")
            tableMapping.ColumnMappings.Add("GatePassNo", "GatePassNo")
            tableMapping.ColumnMappings.Add("VehicleNo", "VehicleNo")
            tableMapping.ColumnMappings.Add("FinishFabricBookingDetailsId", "FinishFabricBookingDetailsId")
            tableMapping.ColumnMappings.Add("BatchInformationId", "BatchInformationId")
            tableMapping.ColumnMappings.Add("DyeingDate", "DyeingDate")
            tableMapping.ColumnMappings.Add("CompanyId", "CompanyId")
            tableMapping.ColumnMappings.Add("IssueQuantity_Cutting", "IssueQuantity_Cutting")
            tableMapping.ColumnMappings.Add("UnitId", "UnitId")
            tableMapping.ColumnMappings.Add("ReceiveQuantity_Yrds", "ReceiveQuantity_Yrds")
            tableMapping.ColumnMappings.Add("ReceiveQuantity_Pcs", "ReceiveQuantity_Pcs")
            tableMapping.ColumnMappings.Add("IssueQuantity_Yrds", "IssueQuantity_Yrds")
            tableMapping.ColumnMappings.Add("IssueQuantity_Pcs", "IssueQuantity_Pcs")
            tableMapping.ColumnMappings.Add("IssueQuantity_Cutting_Yrds", "IssueQuantity_Cutting_Yrds")
            tableMapping.ColumnMappings.Add("IssueQuantity_Cutting_Pcs", "IssueQuantity_Cutting_Pcs")
            tableMapping.ColumnMappings.Add("RollQuantity_Issue", "RollQuantity_Issue")
            tableMapping.ColumnMappings.Add("IsGMTStore", "IsGMTStore")
            tableMapping.ColumnMappings.Add("GMTPartGroup", "GMTPartGroup")
            tableMapping.ColumnMappings.Add("IsClose", "IsClose")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [FinishFabricReceiveIssue] WHERE (([FFReceiveIssueId] = @Original_FFR"& _ 
                "eceiveIssueId) AND ((@IsNull_ChallanNo = 1 AND [ChallanNo] IS NULL) OR ([Challan"& _ 
                "No] = @Original_ChallanNo)) AND ((@IsNull_ChallanDate = 1 AND [ChallanDate] IS N"& _ 
                "ULL) OR ([ChallanDate] = @Original_ChallanDate)) AND ((@IsNull_SupplierId = 1 AN"& _ 
                "D [SupplierId] IS NULL) OR ([SupplierId] = @Original_SupplierId)) AND ((@IsNull_"& _ 
                "ReceiveQuantity = 1 AND [ReceiveQuantity] IS NULL) OR ([ReceiveQuantity] = @Orig"& _ 
                "inal_ReceiveQuantity)) AND ((@IsNull_IssueQuantity = 1 AND [IssueQuantity] IS NU"& _ 
                "LL) OR ([IssueQuantity] = @Original_IssueQuantity)) AND ([IssueReceiveTypeId] = "& _ 
                "@Original_IssueReceiveTypeId) AND ((@IsNull_BatchNo = 1 AND [BatchNo] IS NULL) O"& _ 
                "R ([BatchNo] = @Original_BatchNo)) AND ((@IsNull_LocationReference = 1 AND [Loca"& _ 
                "tionReference] IS NULL) OR ([LocationReference] = @Original_LocationReference)) "& _ 
                "AND ((@IsNull_Remarks = 1 AND [Remarks] IS NULL) OR ([Remarks] = @Original_Remar"& _ 
                "ks)) AND ((@IsNull_IsImported = 1 AND [IsImported] IS NULL) OR ([IsImported] = @"& _ 
                "Original_IsImported)) AND ((@IsNull_LCNo = 1 AND [LCNo] IS NULL) OR ([LCNo] = @O"& _ 
                "riginal_LCNo)) AND ((@IsNull_LCDate = 1 AND [LCDate] IS NULL) OR ([LCDate] = @Or"& _ 
                "iginal_LCDate)) AND ((@IsNull_BranchId = 1 AND [BranchId] IS NULL) OR ([BranchId"& _ 
                "] = @Original_BranchId)) AND ((@IsNull_RollQuantity = 1 AND [RollQuantity] IS NU"& _ 
                "LL) OR ([RollQuantity] = @Original_RollQuantity)) AND ((@IsNull_GatePassNo = 1 A"& _ 
                "ND [GatePassNo] IS NULL) OR ([GatePassNo] = @Original_GatePassNo)) AND ((@IsNull"& _ 
                "_VehicleNo = 1 AND [VehicleNo] IS NULL) OR ([VehicleNo] = @Original_VehicleNo)) "& _ 
                "AND ((@IsNull_FinishFabricBookingDetailsId = 1 AND [FinishFabricBookingDetailsId"& _ 
                "] IS NULL) OR ([FinishFabricBookingDetailsId] = @Original_FinishFabricBookingDet"& _ 
                "ailsId)) AND ((@IsNull_BatchInformationId = 1 AND [BatchInformationId] IS NULL) "& _ 
                "OR ([BatchInformationId] = @Original_BatchInformationId)) AND ((@IsNull_DyeingDa"& _ 
                "te = 1 AND [DyeingDate] IS NULL) OR ([DyeingDate] = @Original_DyeingDate)) AND ("& _ 
                "(@IsNull_CompanyId = 1 AND [CompanyId] IS NULL) OR ([CompanyId] = @Original_Comp"& _ 
                "anyId)) AND ((@IsNull_IssueQuantity_Cutting = 1 AND [IssueQuantity_Cutting] IS N"& _ 
                "ULL) OR ([IssueQuantity_Cutting] = @Original_IssueQuantity_Cutting)) AND ((@IsNu"& _ 
                "ll_UnitId = 1 AND [UnitId] IS NULL) OR ([UnitId] = @Original_UnitId)) AND ((@IsN"& _ 
                "ull_ReceiveQuantity_Yrds = 1 AND [ReceiveQuantity_Yrds] IS NULL) OR ([ReceiveQua"& _ 
                "ntity_Yrds] = @Original_ReceiveQuantity_Yrds)) AND ((@IsNull_ReceiveQuantity_Pcs"& _ 
                " = 1 AND [ReceiveQuantity_Pcs] IS NULL) OR ([ReceiveQuantity_Pcs] = @Original_Re"& _ 
                "ceiveQuantity_Pcs)) AND ((@IsNull_IssueQuantity_Yrds = 1 AND [IssueQuantity_Yrds"& _ 
                "] IS NULL) OR ([IssueQuantity_Yrds] = @Original_IssueQuantity_Yrds)) AND ((@IsNu"& _ 
                "ll_IssueQuantity_Pcs = 1 AND [IssueQuantity_Pcs] IS NULL) OR ([IssueQuantity_Pcs"& _ 
                "] = @Original_IssueQuantity_Pcs)) AND ((@IsNull_IssueQuantity_Cutting_Yrds = 1 A"& _ 
                "ND [IssueQuantity_Cutting_Yrds] IS NULL) OR ([IssueQuantity_Cutting_Yrds] = @Ori"& _ 
                "ginal_IssueQuantity_Cutting_Yrds)) AND ((@IsNull_IssueQuantity_Cutting_Pcs = 1 A"& _ 
                "ND [IssueQuantity_Cutting_Pcs] IS NULL) OR ([IssueQuantity_Cutting_Pcs] = @Origi"& _ 
                "nal_IssueQuantity_Cutting_Pcs)) AND ((@IsNull_RollQuantity_Issue = 1 AND [RollQu"& _ 
                "antity_Issue] IS NULL) OR ([RollQuantity_Issue] = @Original_RollQuantity_Issue))"& _ 
                " AND ((@IsNull_IsGMTStore = 1 AND [IsGMTStore] IS NULL) OR ([IsGMTStore] = @Orig"& _ 
                "inal_IsGMTStore)) AND ((@IsNull_GMTPartGroup = 1 AND [GMTPartGroup] IS NULL) OR "& _ 
                "([GMTPartGroup] = @Original_GMTPartGroup)) AND ((@IsNull_IsClose = 1 AND [IsClos"& _ 
                "e] IS NULL) OR ([IsClose] = @Original_IsClose)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FFReceiveIssueId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FFReceiveIssueId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ChallanNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChallanNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ChallanNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChallanNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ChallanDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChallanDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ChallanDate", Global.System.Data.SqlDbType.SmallDateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChallanDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SupplierId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SupplierId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SupplierId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SupplierId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ReceiveQuantity", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceiveQuantity", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ReceiveQuantity", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "ReceiveQuantity", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IssueQuantity", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IssueQuantity", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IssueQuantity", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "IssueQuantity", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IssueReceiveTypeId", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IssueReceiveTypeId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BatchNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BatchNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BatchNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BatchNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LocationReference", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LocationReference", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LocationReference", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LocationReference", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Remarks", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remarks", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Remarks", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remarks", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IsImported", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsImported", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IsImported", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsImported", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LCNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LCNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LCNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LCNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LCDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LCDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LCDate", Global.System.Data.SqlDbType.SmallDateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LCDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BranchId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BranchId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BranchId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BranchId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RollQuantity", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RollQuantity", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RollQuantity", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RollQuantity", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GatePassNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GatePassNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GatePassNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GatePassNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VehicleNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VehicleNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VehicleNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VehicleNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FinishFabricBookingDetailsId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FinishFabricBookingDetailsId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FinishFabricBookingDetailsId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FinishFabricBookingDetailsId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BatchInformationId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BatchInformationId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BatchInformationId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BatchInformationId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DyeingDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DyeingDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DyeingDate", Global.System.Data.SqlDbType.SmallDateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DyeingDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CompanyId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompanyId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CompanyId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompanyId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IssueQuantity_Cutting", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IssueQuantity_Cutting", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IssueQuantity_Cutting", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "IssueQuantity_Cutting", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_UnitId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UnitId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UnitId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UnitId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ReceiveQuantity_Yrds", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceiveQuantity_Yrds", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ReceiveQuantity_Yrds", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "ReceiveQuantity_Yrds", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ReceiveQuantity_Pcs", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceiveQuantity_Pcs", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ReceiveQuantity_Pcs", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "ReceiveQuantity_Pcs", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IssueQuantity_Yrds", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IssueQuantity_Yrds", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IssueQuantity_Yrds", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "IssueQuantity_Yrds", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IssueQuantity_Pcs", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IssueQuantity_Pcs", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IssueQuantity_Pcs", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "IssueQuantity_Pcs", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IssueQuantity_Cutting_Yrds", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IssueQuantity_Cutting_Yrds", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IssueQuantity_Cutting_Yrds", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "IssueQuantity_Cutting_Yrds", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IssueQuantity_Cutting_Pcs", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IssueQuantity_Cutting_Pcs", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IssueQuantity_Cutting_Pcs", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "IssueQuantity_Cutting_Pcs", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RollQuantity_Issue", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RollQuantity_Issue", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RollQuantity_Issue", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RollQuantity_Issue", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IsGMTStore", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsGMTStore", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IsGMTStore", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsGMTStore", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GMTPartGroup", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GMTPartGroup", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GMTPartGroup", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GMTPartGroup", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IsClose", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsClose", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IsClose", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsClose", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [FinishFabricReceiveIssue] ([ChallanNo], [ChallanDate], [SupplierId],"& _ 
                " [ReceiveQuantity], [IssueQuantity], [IssueReceiveTypeId], [BatchNo], [LocationR"& _ 
                "eference], [Remarks], [IsImported], [LCNo], [LCDate], [BranchId], [RollQuantity]"& _ 
                ", [GatePassNo], [VehicleNo], [FinishFabricBookingDetailsId], [BatchInformationId"& _ 
                "], [DyeingDate], [CompanyId], [IssueQuantity_Cutting], [UnitId], [ReceiveQuantit"& _ 
                "y_Yrds], [ReceiveQuantity_Pcs], [IssueQuantity_Yrds], [IssueQuantity_Pcs], [Issu"& _ 
                "eQuantity_Cutting_Yrds], [IssueQuantity_Cutting_Pcs], [RollQuantity_Issue], [IsG"& _ 
                "MTStore], [GMTPartGroup], [IsClose]) VALUES (@ChallanNo, @ChallanDate, @Supplier"& _ 
                "Id, @ReceiveQuantity, @IssueQuantity, @IssueReceiveTypeId, @BatchNo, @LocationRe"& _ 
                "ference, @Remarks, @IsImported, @LCNo, @LCDate, @BranchId, @RollQuantity, @GateP"& _ 
                "assNo, @VehicleNo, @FinishFabricBookingDetailsId, @BatchInformationId, @DyeingDa"& _ 
                "te, @CompanyId, @IssueQuantity_Cutting, @UnitId, @ReceiveQuantity_Yrds, @Receive"& _ 
                "Quantity_Pcs, @IssueQuantity_Yrds, @IssueQuantity_Pcs, @IssueQuantity_Cutting_Yr"& _ 
                "ds, @IssueQuantity_Cutting_Pcs, @RollQuantity_Issue, @IsGMTStore, @GMTPartGroup,"& _ 
                " @IsClose);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT FFReceiveIssueId, ChallanNo, ChallanDate, SupplierId, Receiv"& _ 
                "eQuantity, IssueQuantity, IssueReceiveTypeId, BatchNo, LocationReference, Remark"& _ 
                "s, IsImported, LCNo, LCDate, BranchId, RollQuantity, GatePassNo, VehicleNo, Fini"& _ 
                "shFabricBookingDetailsId, BatchInformationId, DyeingDate, CompanyId, IssueQuanti"& _ 
                "ty_Cutting, UnitId, ReceiveQuantity_Yrds, ReceiveQuantity_Pcs, IssueQuantity_Yrd"& _ 
                "s, IssueQuantity_Pcs, IssueQuantity_Cutting_Yrds, IssueQuantity_Cutting_Pcs, Rol"& _ 
                "lQuantity_Issue, IsGMTStore, GMTPartGroup, IsClose FROM FinishFabricReceiveIssue"& _ 
                " WHERE (FFReceiveIssueId = SCOPE_IDENTITY()) ORDER BY FFReceiveIssueId"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ChallanNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChallanNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ChallanDate", Global.System.Data.SqlDbType.SmallDateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChallanDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SupplierId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SupplierId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ReceiveQuantity", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "ReceiveQuantity", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IssueQuantity", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "IssueQuantity", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IssueReceiveTypeId", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IssueReceiveTypeId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BatchNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BatchNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LocationReference", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LocationReference", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Remarks", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remarks", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsImported", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsImported", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LCNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LCNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LCDate", Global.System.Data.SqlDbType.SmallDateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LCDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BranchId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BranchId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RollQuantity", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RollQuantity", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GatePassNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GatePassNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VehicleNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VehicleNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FinishFabricBookingDetailsId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FinishFabricBookingDetailsId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BatchInformationId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BatchInformationId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DyeingDate", Global.System.Data.SqlDbType.SmallDateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DyeingDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CompanyId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompanyId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IssueQuantity_Cutting", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "IssueQuantity_Cutting", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UnitId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UnitId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ReceiveQuantity_Yrds", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "ReceiveQuantity_Yrds", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ReceiveQuantity_Pcs", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "ReceiveQuantity_Pcs", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IssueQuantity_Yrds", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "IssueQuantity_Yrds", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IssueQuantity_Pcs", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "IssueQuantity_Pcs", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IssueQuantity_Cutting_Yrds", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "IssueQuantity_Cutting_Yrds", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IssueQuantity_Cutting_Pcs", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "IssueQuantity_Cutting_Pcs", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RollQuantity_Issue", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RollQuantity_Issue", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsGMTStore", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsGMTStore", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GMTPartGroup", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GMTPartGroup", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsClose", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsClose", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [FinishFabricReceiveIssue] SET [ChallanNo] = @ChallanNo, [ChallanDate] = @"& _ 
                "ChallanDate, [SupplierId] = @SupplierId, [ReceiveQuantity] = @ReceiveQuantity, ["& _ 
                "IssueQuantity] = @IssueQuantity, [IssueReceiveTypeId] = @IssueReceiveTypeId, [Ba"& _ 
                "tchNo] = @BatchNo, [LocationReference] = @LocationReference, [Remarks] = @Remark"& _ 
                "s, [IsImported] = @IsImported, [LCNo] = @LCNo, [LCDate] = @LCDate, [BranchId] = "& _ 
                "@BranchId, [RollQuantity] = @RollQuantity, [GatePassNo] = @GatePassNo, [VehicleN"& _ 
                "o] = @VehicleNo, [FinishFabricBookingDetailsId] = @FinishFabricBookingDetailsId,"& _ 
                " [BatchInformationId] = @BatchInformationId, [DyeingDate] = @DyeingDate, [Compan"& _ 
                "yId] = @CompanyId, [IssueQuantity_Cutting] = @IssueQuantity_Cutting, [UnitId] = "& _ 
                "@UnitId, [ReceiveQuantity_Yrds] = @ReceiveQuantity_Yrds, [ReceiveQuantity_Pcs] ="& _ 
                " @ReceiveQuantity_Pcs, [IssueQuantity_Yrds] = @IssueQuantity_Yrds, [IssueQuantit"& _ 
                "y_Pcs] = @IssueQuantity_Pcs, [IssueQuantity_Cutting_Yrds] = @IssueQuantity_Cutti"& _ 
                "ng_Yrds, [IssueQuantity_Cutting_Pcs] = @IssueQuantity_Cutting_Pcs, [RollQuantity"& _ 
                "_Issue] = @RollQuantity_Issue, [IsGMTStore] = @IsGMTStore, [GMTPartGroup] = @GMT"& _ 
                "PartGroup, [IsClose] = @IsClose WHERE (([FFReceiveIssueId] = @Original_FFReceive"& _ 
                "IssueId) AND ((@IsNull_ChallanNo = 1 AND [ChallanNo] IS NULL) OR ([ChallanNo] = "& _ 
                "@Original_ChallanNo)) AND ((@IsNull_ChallanDate = 1 AND [ChallanDate] IS NULL) O"& _ 
                "R ([ChallanDate] = @Original_ChallanDate)) AND ((@IsNull_SupplierId = 1 AND [Sup"& _ 
                "plierId] IS NULL) OR ([SupplierId] = @Original_SupplierId)) AND ((@IsNull_Receiv"& _ 
                "eQuantity = 1 AND [ReceiveQuantity] IS NULL) OR ([ReceiveQuantity] = @Original_R"& _ 
                "eceiveQuantity)) AND ((@IsNull_IssueQuantity = 1 AND [IssueQuantity] IS NULL) OR"& _ 
                " ([IssueQuantity] = @Original_IssueQuantity)) AND ([IssueReceiveTypeId] = @Origi"& _ 
                "nal_IssueReceiveTypeId) AND ((@IsNull_BatchNo = 1 AND [BatchNo] IS NULL) OR ([Ba"& _ 
                "tchNo] = @Original_BatchNo)) AND ((@IsNull_LocationReference = 1 AND [LocationRe"& _ 
                "ference] IS NULL) OR ([LocationReference] = @Original_LocationReference)) AND (("& _ 
                "@IsNull_Remarks = 1 AND [Remarks] IS NULL) OR ([Remarks] = @Original_Remarks)) A"& _ 
                "ND ((@IsNull_IsImported = 1 AND [IsImported] IS NULL) OR ([IsImported] = @Origin"& _ 
                "al_IsImported)) AND ((@IsNull_LCNo = 1 AND [LCNo] IS NULL) OR ([LCNo] = @Origina"& _ 
                "l_LCNo)) AND ((@IsNull_LCDate = 1 AND [LCDate] IS NULL) OR ([LCDate] = @Original"& _ 
                "_LCDate)) AND ((@IsNull_BranchId = 1 AND [BranchId] IS NULL) OR ([BranchId] = @O"& _ 
                "riginal_BranchId)) AND ((@IsNull_RollQuantity = 1 AND [RollQuantity] IS NULL) OR"& _ 
                " ([RollQuantity] = @Original_RollQuantity)) AND ((@IsNull_GatePassNo = 1 AND [Ga"& _ 
                "tePassNo] IS NULL) OR ([GatePassNo] = @Original_GatePassNo)) AND ((@IsNull_Vehic"& _ 
                "leNo = 1 AND [VehicleNo] IS NULL) OR ([VehicleNo] = @Original_VehicleNo)) AND (("& _ 
                "@IsNull_FinishFabricBookingDetailsId = 1 AND [FinishFabricBookingDetailsId] IS N"& _ 
                "ULL) OR ([FinishFabricBookingDetailsId] = @Original_FinishFabricBookingDetailsId"& _ 
                ")) AND ((@IsNull_BatchInformationId = 1 AND [BatchInformationId] IS NULL) OR ([B"& _ 
                "atchInformationId] = @Original_BatchInformationId)) AND ((@IsNull_DyeingDate = 1"& _ 
                " AND [DyeingDate] IS NULL) OR ([DyeingDate] = @Original_DyeingDate)) AND ((@IsNu"& _ 
                "ll_CompanyId = 1 AND [CompanyId] IS NULL) OR ([CompanyId] = @Original_CompanyId)"& _ 
                ") AND ((@IsNull_IssueQuantity_Cutting = 1 AND [IssueQuantity_Cutting] IS NULL) O"& _ 
                "R ([IssueQuantity_Cutting] = @Original_IssueQuantity_Cutting)) AND ((@IsNull_Uni"& _ 
                "tId = 1 AND [UnitId] IS NULL) OR ([UnitId] = @Original_UnitId)) AND ((@IsNull_Re"& _ 
                "ceiveQuantity_Yrds = 1 AND [ReceiveQuantity_Yrds] IS NULL) OR ([ReceiveQuantity_"& _ 
                "Yrds] = @Original_ReceiveQuantity_Yrds)) AND ((@IsNull_ReceiveQuantity_Pcs = 1 A"& _ 
                "ND [ReceiveQuantity_Pcs] IS NULL) OR ([ReceiveQuantity_Pcs] = @Original_ReceiveQ"& _ 
                "uantity_Pcs)) AND ((@IsNull_IssueQuantity_Yrds = 1 AND [IssueQuantity_Yrds] IS N"& _ 
                "ULL) OR ([IssueQuantity_Yrds] = @Original_IssueQuantity_Yrds)) AND ((@IsNull_Iss"& _ 
                "ueQuantity_Pcs = 1 AND [IssueQuantity_Pcs] IS NULL) OR ([IssueQuantity_Pcs] = @O"& _ 
                "riginal_IssueQuantity_Pcs)) AND ((@IsNull_IssueQuantity_Cutting_Yrds = 1 AND [Is"& _ 
                "sueQuantity_Cutting_Yrds] IS NULL) OR ([IssueQuantity_Cutting_Yrds] = @Original_"& _ 
                "IssueQuantity_Cutting_Yrds)) AND ((@IsNull_IssueQuantity_Cutting_Pcs = 1 AND [Is"& _ 
                "sueQuantity_Cutting_Pcs] IS NULL) OR ([IssueQuantity_Cutting_Pcs] = @Original_Is"& _ 
                "sueQuantity_Cutting_Pcs)) AND ((@IsNull_RollQuantity_Issue = 1 AND [RollQuantity"& _ 
                "_Issue] IS NULL) OR ([RollQuantity_Issue] = @Original_RollQuantity_Issue)) AND ("& _ 
                "(@IsNull_IsGMTStore = 1 AND [IsGMTStore] IS NULL) OR ([IsGMTStore] = @Original_I"& _ 
                "sGMTStore)) AND ((@IsNull_GMTPartGroup = 1 AND [GMTPartGroup] IS NULL) OR ([GMTP"& _ 
                "artGroup] = @Original_GMTPartGroup)) AND ((@IsNull_IsClose = 1 AND [IsClose] IS "& _ 
                "NULL) OR ([IsClose] = @Original_IsClose)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT FFReceiveIssueId, ChallanNo,"& _ 
                " ChallanDate, SupplierId, ReceiveQuantity, IssueQuantity, IssueReceiveTypeId, Ba"& _ 
                "tchNo, LocationReference, Remarks, IsImported, LCNo, LCDate, BranchId, RollQuant"& _ 
                "ity, GatePassNo, VehicleNo, FinishFabricBookingDetailsId, BatchInformationId, Dy"& _ 
                "eingDate, CompanyId, IssueQuantity_Cutting, UnitId, ReceiveQuantity_Yrds, Receiv"& _ 
                "eQuantity_Pcs, IssueQuantity_Yrds, IssueQuantity_Pcs, IssueQuantity_Cutting_Yrds"& _ 
                ", IssueQuantity_Cutting_Pcs, RollQuantity_Issue, IsGMTStore, GMTPartGroup, IsClo"& _ 
                "se FROM FinishFabricReceiveIssue WHERE (FFReceiveIssueId = @FFReceiveIssueId) OR"& _ 
                "DER BY FFReceiveIssueId"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ChallanNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChallanNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ChallanDate", Global.System.Data.SqlDbType.SmallDateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChallanDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SupplierId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SupplierId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ReceiveQuantity", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "ReceiveQuantity", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IssueQuantity", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "IssueQuantity", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IssueReceiveTypeId", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IssueReceiveTypeId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BatchNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BatchNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LocationReference", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LocationReference", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Remarks", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remarks", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsImported", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsImported", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LCNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LCNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LCDate", Global.System.Data.SqlDbType.SmallDateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LCDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BranchId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BranchId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RollQuantity", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RollQuantity", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GatePassNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GatePassNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VehicleNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VehicleNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FinishFabricBookingDetailsId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FinishFabricBookingDetailsId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BatchInformationId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BatchInformationId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DyeingDate", Global.System.Data.SqlDbType.SmallDateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DyeingDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CompanyId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompanyId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IssueQuantity_Cutting", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "IssueQuantity_Cutting", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UnitId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UnitId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ReceiveQuantity_Yrds", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "ReceiveQuantity_Yrds", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ReceiveQuantity_Pcs", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "ReceiveQuantity_Pcs", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IssueQuantity_Yrds", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "IssueQuantity_Yrds", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IssueQuantity_Pcs", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "IssueQuantity_Pcs", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IssueQuantity_Cutting_Yrds", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "IssueQuantity_Cutting_Yrds", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IssueQuantity_Cutting_Pcs", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "IssueQuantity_Cutting_Pcs", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RollQuantity_Issue", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RollQuantity_Issue", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsGMTStore", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsGMTStore", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GMTPartGroup", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GMTPartGroup", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsClose", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsClose", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FFReceiveIssueId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FFReceiveIssueId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ChallanNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChallanNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ChallanNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChallanNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ChallanDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChallanDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ChallanDate", Global.System.Data.SqlDbType.SmallDateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChallanDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SupplierId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SupplierId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SupplierId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SupplierId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ReceiveQuantity", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceiveQuantity", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ReceiveQuantity", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "ReceiveQuantity", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IssueQuantity", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IssueQuantity", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IssueQuantity", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "IssueQuantity", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IssueReceiveTypeId", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IssueReceiveTypeId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BatchNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BatchNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BatchNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BatchNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LocationReference", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LocationReference", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LocationReference", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LocationReference", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Remarks", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remarks", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Remarks", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remarks", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IsImported", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsImported", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IsImported", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsImported", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LCNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LCNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LCNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LCNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LCDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LCDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LCDate", Global.System.Data.SqlDbType.SmallDateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LCDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BranchId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BranchId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BranchId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BranchId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RollQuantity", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RollQuantity", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RollQuantity", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RollQuantity", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GatePassNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GatePassNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GatePassNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GatePassNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VehicleNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VehicleNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VehicleNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VehicleNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FinishFabricBookingDetailsId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FinishFabricBookingDetailsId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FinishFabricBookingDetailsId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FinishFabricBookingDetailsId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BatchInformationId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BatchInformationId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BatchInformationId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BatchInformationId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DyeingDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DyeingDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DyeingDate", Global.System.Data.SqlDbType.SmallDateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DyeingDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CompanyId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompanyId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CompanyId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompanyId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IssueQuantity_Cutting", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IssueQuantity_Cutting", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IssueQuantity_Cutting", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "IssueQuantity_Cutting", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_UnitId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UnitId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UnitId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UnitId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ReceiveQuantity_Yrds", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceiveQuantity_Yrds", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ReceiveQuantity_Yrds", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "ReceiveQuantity_Yrds", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ReceiveQuantity_Pcs", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceiveQuantity_Pcs", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ReceiveQuantity_Pcs", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "ReceiveQuantity_Pcs", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IssueQuantity_Yrds", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IssueQuantity_Yrds", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IssueQuantity_Yrds", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "IssueQuantity_Yrds", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IssueQuantity_Pcs", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IssueQuantity_Pcs", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IssueQuantity_Pcs", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "IssueQuantity_Pcs", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IssueQuantity_Cutting_Yrds", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IssueQuantity_Cutting_Yrds", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IssueQuantity_Cutting_Yrds", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "IssueQuantity_Cutting_Yrds", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IssueQuantity_Cutting_Pcs", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IssueQuantity_Cutting_Pcs", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IssueQuantity_Cutting_Pcs", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "IssueQuantity_Cutting_Pcs", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RollQuantity_Issue", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RollQuantity_Issue", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RollQuantity_Issue", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RollQuantity_Issue", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IsGMTStore", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsGMTStore", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IsGMTStore", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsGMTStore", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GMTPartGroup", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GMTPartGroup", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GMTPartGroup", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GMTPartGroup", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IsClose", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsClose", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IsClose", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsClose", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FFReceiveIssueId", Global.System.Data.SqlDbType.BigInt, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FFReceiveIssueId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.KSoft_Inventory.My.MySettings.Default.KSoft_InventoryConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(3) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        FFReceiveIssueId, ChallanNo, ChallanDate, SupplierId, ReceiveQuanti"& _ 
                "ty, IssueQuantity, IssueReceiveTypeId, BatchNo, LocationReference, Remarks, IsIm"& _ 
                "ported, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         LCNo, LCDate, BranchId, RollQuantity, GatePas"& _ 
                "sNo, VehicleNo, FinishFabricBookingDetailsId, BatchInformationId, DyeingDate, Co"& _ 
                "mpanyId, IssueQuantity_Cutting, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         UnitId, ReceiveQuanti"& _ 
                "ty_Yrds, ReceiveQuantity_Pcs, IssueQuantity_Yrds, IssueQuantity_Pcs, IssueQuanti"& _ 
                "ty_Cutting_Yrds, IssueQuantity_Cutting_Pcs, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         RollQuant"& _ 
                "ity_Issue, IsGMTStore, GMTPartGroup, IsClose"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            FinishFabricReceiv"& _ 
                "eIssue"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (IsGMTStore = @IsGMTStore)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY FFReceiveIssueId"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsGMTStore", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "IsGMTStore", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT BatchInformationId, BatchNo, BranchId, ChallanDate, ChallanNo, CompanyId, "& _ 
                "DyeingDate, FFReceiveIssueId, FinishFabricBookingDetailsId, GMTPartGroup, GatePa"& _ 
                "ssNo, IsClose, IsGMTStore, IsImported, IssueQuantity, IssueQuantity_Cutting, Iss"& _ 
                "ueQuantity_Cutting_Pcs, IssueQuantity_Cutting_Yrds, IssueQuantity_Pcs, IssueQuan"& _ 
                "tity_Yrds, IssueReceiveTypeId, LCDate, LCNo, LocationReference, ReceiveQuantity,"& _ 
                " ReceiveQuantity_Pcs, ReceiveQuantity_Yrds, Remarks, RollQuantity, RollQuantity_"& _ 
                "Issue, SupplierId, UnitId, VehicleNo FROM FinishFabricReceiveIssue WHERE (Challa"& _ 
                "nDate = @ChallanDate) AND (BranchId = @BranchId)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ChallanDate", Global.System.Data.SqlDbType.SmallDateTime, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "ChallanDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BranchId", Global.System.Data.SqlDbType.[Char], 10, Global.System.Data.ParameterDirection.Input, 0, 0, "BranchId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT        FFReceiveIssueId, ChallanNo, ChallanDate, SupplierId, ReceiveQuanti"& _ 
                "ty, IssueQuantity, IssueReceiveTypeId, BatchNo, LocationReference, Remarks, IsIm"& _ 
                "ported, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         LCNo, LCDate, BranchId, RollQuantity, GatePas"& _ 
                "sNo, VehicleNo, FinishFabricBookingDetailsId, BatchInformationId, DyeingDate, Co"& _ 
                "mpanyId, IssueQuantity_Cutting, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         UnitId, ReceiveQuanti"& _ 
                "ty_Yrds, ReceiveQuantity_Pcs, IssueQuantity_Yrds, IssueQuantity_Pcs, IssueQuanti"& _ 
                "ty_Cutting_Yrds, IssueQuantity_Cutting_Pcs, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         RollQuant"& _ 
                "ity_Issue, IsGMTStore, GMTPartGroup, IsClose"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            FinishFabricReceiv"& _ 
                "eIssue"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (IsGMTStore = @IsGMTStore) AND (ChallanDate = @ChallanDate)"& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY FFReceiveIssueId"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsGMTStore", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "IsGMTStore", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ChallanDate", Global.System.Data.SqlDbType.SmallDateTime, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "ChallanDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "SELECT        FFReceiveIssueId, ChallanNo, ChallanDate, SupplierId, ReceiveQuanti"& _ 
                "ty, IssueQuantity, IssueReceiveTypeId, BatchNo, LocationReference, Remarks, IsIm"& _ 
                "ported, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         LCNo, LCDate, BranchId, RollQuantity, GatePas"& _ 
                "sNo, VehicleNo, FinishFabricBookingDetailsId, BatchInformationId, DyeingDate, Co"& _ 
                "mpanyId, IssueQuantity_Cutting, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         UnitId, ReceiveQuanti"& _ 
                "ty_Yrds, ReceiveQuantity_Pcs, IssueQuantity_Yrds, IssueQuantity_Pcs, IssueQuanti"& _ 
                "ty_Cutting_Yrds, IssueQuantity_Cutting_Pcs, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         RollQuant"& _ 
                "ity_Issue, IsGMTStore, GMTPartGroup, IsClose"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            FinishFabricReceiv"& _ 
                "eIssue"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (IsGMTStore = @IsGMTStore) AND (FinishFabricBookingDetailsI"& _ 
                "d IN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                             (SELECT        FinishFabricBookingDetailsId"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "                               FROM            FinishFabricBookingDetails"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"     "& _ 
                "                          WHERE        (FinishFabricBookingId =@FinishFabricBook"& _ 
                "ingId)))"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY FFReceiveIssueId"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsGMTStore", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "IsGMTStore", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FinishFabricBookingId", Global.System.Data.SqlDbType.BigInt, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As FinishFabricReceiveIssueDataSet.FinishFabricReceiveIssueDataTable, ByVal IsGMTStore As Global.System.Nullable(Of Boolean)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (IsGMTStore.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(IsGMTStore.Value,Boolean)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal IsGMTStore As Global.System.Nullable(Of Boolean)) As FinishFabricReceiveIssueDataSet.FinishFabricReceiveIssueDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (IsGMTStore.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(IsGMTStore.Value,Boolean)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As FinishFabricReceiveIssueDataSet.FinishFabricReceiveIssueDataTable = New FinishFabricReceiveIssueDataSet.FinishFabricReceiveIssueDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByBranchAndChallanDate(ByVal dataTable As FinishFabricReceiveIssueDataSet.FinishFabricReceiveIssueDataTable, ByVal ChallanDate As Global.System.Nullable(Of Date), ByVal BranchId As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (ChallanDate.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(ChallanDate.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (BranchId Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(BranchId,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByBranchAndChallanDate(ByVal ChallanDate As Global.System.Nullable(Of Date), ByVal BranchId As String) As FinishFabricReceiveIssueDataSet.FinishFabricReceiveIssueDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (ChallanDate.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(ChallanDate.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (BranchId Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(BranchId,String)
            End If
            Dim dataTable As FinishFabricReceiveIssueDataSet.FinishFabricReceiveIssueDataTable = New FinishFabricReceiveIssueDataSet.FinishFabricReceiveIssueDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByChallanDate(ByVal dataTable As FinishFabricReceiveIssueDataSet.FinishFabricReceiveIssueDataTable, ByVal IsGMTStore As Global.System.Nullable(Of Boolean), ByVal ChallanDate As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (IsGMTStore.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(IsGMTStore.Value,Boolean)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (ChallanDate.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(ChallanDate.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByChallanDate(ByVal IsGMTStore As Global.System.Nullable(Of Boolean), ByVal ChallanDate As Global.System.Nullable(Of Date)) As FinishFabricReceiveIssueDataSet.FinishFabricReceiveIssueDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (IsGMTStore.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(IsGMTStore.Value,Boolean)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (ChallanDate.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(ChallanDate.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As FinishFabricReceiveIssueDataSet.FinishFabricReceiveIssueDataTable = New FinishFabricReceiveIssueDataSet.FinishFabricReceiveIssueDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByProgramNo(ByVal dataTable As FinishFabricReceiveIssueDataSet.FinishFabricReceiveIssueDataTable, ByVal IsGMTStore As Global.System.Nullable(Of Boolean), ByVal FinishFabricBookingId As Global.System.Nullable(Of Long)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            If (IsGMTStore.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(IsGMTStore.Value,Boolean)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (FinishFabricBookingId.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FinishFabricBookingId.Value,Long)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByProgramNo(ByVal IsGMTStore As Global.System.Nullable(Of Boolean), ByVal FinishFabricBookingId As Global.System.Nullable(Of Long)) As FinishFabricReceiveIssueDataSet.FinishFabricReceiveIssueDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            If (IsGMTStore.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(IsGMTStore.Value,Boolean)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (FinishFabricBookingId.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FinishFabricBookingId.Value,Long)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As FinishFabricReceiveIssueDataSet.FinishFabricReceiveIssueDataTable = New FinishFabricReceiveIssueDataSet.FinishFabricReceiveIssueDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As FinishFabricReceiveIssueDataSet.FinishFabricReceiveIssueDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As FinishFabricReceiveIssueDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "FinishFabricReceiveIssue")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_FFReceiveIssueId As Long,  _
                    ByVal Original_ChallanNo As String,  _
                    ByVal Original_ChallanDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_SupplierId As Global.System.Nullable(Of Long),  _
                    ByVal Original_ReceiveQuantity As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_IssueQuantity As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_IssueReceiveTypeId As String,  _
                    ByVal Original_BatchNo As String,  _
                    ByVal Original_LocationReference As String,  _
                    ByVal Original_Remarks As String,  _
                    ByVal Original_IsImported As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_LCNo As String,  _
                    ByVal Original_LCDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_BranchId As Global.System.Nullable(Of Long),  _
                    ByVal Original_RollQuantity As Global.System.Nullable(Of Integer),  _
                    ByVal Original_GatePassNo As String,  _
                    ByVal Original_VehicleNo As String,  _
                    ByVal Original_FinishFabricBookingDetailsId As Global.System.Nullable(Of Long),  _
                    ByVal Original_BatchInformationId As Global.System.Nullable(Of Long),  _
                    ByVal Original_DyeingDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_CompanyId As Global.System.Nullable(Of Long),  _
                    ByVal Original_IssueQuantity_Cutting As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_UnitId As Global.System.Nullable(Of Long),  _
                    ByVal Original_ReceiveQuantity_Yrds As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_ReceiveQuantity_Pcs As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_IssueQuantity_Yrds As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_IssueQuantity_Pcs As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_IssueQuantity_Cutting_Yrds As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_IssueQuantity_Cutting_Pcs As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_RollQuantity_Issue As Global.System.Nullable(Of Integer),  _
                    ByVal Original_IsGMTStore As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_GMTPartGroup As String,  _
                    ByVal Original_IsClose As Global.System.Nullable(Of Boolean)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_FFReceiveIssueId,Long)
            If (Original_ChallanNo Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_ChallanNo,String)
            End If
            If (Original_ChallanDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_ChallanDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Original_SupplierId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_SupplierId.Value,Long)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_ReceiveQuantity.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_ReceiveQuantity.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Original_IssueQuantity.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_IssueQuantity.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Original_IssueReceiveTypeId Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_IssueReceiveTypeId")
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_IssueReceiveTypeId,String)
            End If
            If (Original_BatchNo Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(Original_BatchNo,String)
            End If
            If (Original_LocationReference Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(Original_LocationReference,String)
            End If
            If (Original_Remarks Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(Original_Remarks,String)
            End If
            If (Original_IsImported.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(Original_IsImported.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (Original_LCNo Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(Original_LCNo,String)
            End If
            If (Original_LCDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(Original_LCDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (Original_BranchId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(Original_BranchId.Value,Long)
            Else
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (Original_RollQuantity.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(Original_RollQuantity.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (Original_GatePassNo Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(Original_GatePassNo,String)
            End If
            If (Original_VehicleNo Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(Original_VehicleNo,String)
            End If
            If (Original_FinishFabricBookingDetailsId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(Original_FinishFabricBookingDetailsId.Value,Long)
            Else
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (Original_BatchInformationId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(Original_BatchInformationId.Value,Long)
            Else
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (Original_DyeingDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(Original_DyeingDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(37).Value = Global.System.DBNull.Value
            End If
            If (Original_CompanyId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(Original_CompanyId.Value,Long)
            Else
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (Original_IssueQuantity_Cutting.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(Original_IssueQuantity_Cutting.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (Original_UnitId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(Original_UnitId.Value,Long)
            Else
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (Original_ReceiveQuantity_Yrds.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(Original_ReceiveQuantity_Yrds.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (Original_ReceiveQuantity_Pcs.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(Original_ReceiveQuantity_Pcs.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(47).Value = Global.System.DBNull.Value
            End If
            If (Original_IssueQuantity_Yrds.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(Original_IssueQuantity_Yrds.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(49).Value = Global.System.DBNull.Value
            End If
            If (Original_IssueQuantity_Pcs.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(Original_IssueQuantity_Pcs.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(51).Value = Global.System.DBNull.Value
            End If
            If (Original_IssueQuantity_Cutting_Yrds.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(Original_IssueQuantity_Cutting_Yrds.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(53).Value = Global.System.DBNull.Value
            End If
            If (Original_IssueQuantity_Cutting_Pcs.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(Original_IssueQuantity_Cutting_Pcs.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(55).Value = Global.System.DBNull.Value
            End If
            If (Original_RollQuantity_Issue.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(Original_RollQuantity_Issue.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(57).Value = Global.System.DBNull.Value
            End If
            If (Original_IsGMTStore.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(Original_IsGMTStore.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(59).Value = Global.System.DBNull.Value
            End If
            If (Original_GMTPartGroup Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(61).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(Original_GMTPartGroup,String)
            End If
            If (Original_IsClose.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(62).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(63).Value = CType(Original_IsClose.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(62).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(63).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal ChallanNo As String,  _
                    ByVal ChallanDate As Global.System.Nullable(Of Date),  _
                    ByVal SupplierId As Global.System.Nullable(Of Long),  _
                    ByVal ReceiveQuantity As Global.System.Nullable(Of Decimal),  _
                    ByVal IssueQuantity As Global.System.Nullable(Of Decimal),  _
                    ByVal IssueReceiveTypeId As String,  _
                    ByVal BatchNo As String,  _
                    ByVal LocationReference As String,  _
                    ByVal Remarks As String,  _
                    ByVal IsImported As Global.System.Nullable(Of Boolean),  _
                    ByVal LCNo As String,  _
                    ByVal LCDate As Global.System.Nullable(Of Date),  _
                    ByVal BranchId As Global.System.Nullable(Of Long),  _
                    ByVal RollQuantity As Global.System.Nullable(Of Integer),  _
                    ByVal GatePassNo As String,  _
                    ByVal VehicleNo As String,  _
                    ByVal FinishFabricBookingDetailsId As Global.System.Nullable(Of Long),  _
                    ByVal BatchInformationId As Global.System.Nullable(Of Long),  _
                    ByVal DyeingDate As Global.System.Nullable(Of Date),  _
                    ByVal CompanyId As Global.System.Nullable(Of Long),  _
                    ByVal IssueQuantity_Cutting As Global.System.Nullable(Of Decimal),  _
                    ByVal UnitId As Global.System.Nullable(Of Long),  _
                    ByVal ReceiveQuantity_Yrds As Global.System.Nullable(Of Decimal),  _
                    ByVal ReceiveQuantity_Pcs As Global.System.Nullable(Of Decimal),  _
                    ByVal IssueQuantity_Yrds As Global.System.Nullable(Of Decimal),  _
                    ByVal IssueQuantity_Pcs As Global.System.Nullable(Of Decimal),  _
                    ByVal IssueQuantity_Cutting_Yrds As Global.System.Nullable(Of Decimal),  _
                    ByVal IssueQuantity_Cutting_Pcs As Global.System.Nullable(Of Decimal),  _
                    ByVal RollQuantity_Issue As Global.System.Nullable(Of Integer),  _
                    ByVal IsGMTStore As Global.System.Nullable(Of Boolean),  _
                    ByVal GMTPartGroup As String,  _
                    ByVal IsClose As Global.System.Nullable(Of Boolean)) As Integer
            If (ChallanNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(ChallanNo,String)
            End If
            If (ChallanDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(ChallanDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (SupplierId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(SupplierId.Value,Long)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (ReceiveQuantity.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(ReceiveQuantity.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (IssueQuantity.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(IssueQuantity.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (IssueReceiveTypeId Is Nothing) Then
                Throw New Global.System.ArgumentNullException("IssueReceiveTypeId")
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(IssueReceiveTypeId,String)
            End If
            If (BatchNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(BatchNo,String)
            End If
            If (LocationReference Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(LocationReference,String)
            End If
            If (Remarks Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(Remarks,String)
            End If
            If (IsImported.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(IsImported.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (LCNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(LCNo,String)
            End If
            If (LCDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(LCDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (BranchId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(BranchId.Value,Long)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (RollQuantity.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(RollQuantity.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (GatePassNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(GatePassNo,String)
            End If
            If (VehicleNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(VehicleNo,String)
            End If
            If (FinishFabricBookingDetailsId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(FinishFabricBookingDetailsId.Value,Long)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (BatchInformationId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(BatchInformationId.Value,Long)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (DyeingDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(DyeingDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (CompanyId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(CompanyId.Value,Long)
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (IssueQuantity_Cutting.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(IssueQuantity_Cutting.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (UnitId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(UnitId.Value,Long)
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (ReceiveQuantity_Yrds.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(ReceiveQuantity_Yrds.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (ReceiveQuantity_Pcs.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(ReceiveQuantity_Pcs.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (IssueQuantity_Yrds.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(IssueQuantity_Yrds.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (IssueQuantity_Pcs.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(IssueQuantity_Pcs.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (IssueQuantity_Cutting_Yrds.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(IssueQuantity_Cutting_Yrds.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (IssueQuantity_Cutting_Pcs.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(IssueQuantity_Cutting_Pcs.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (RollQuantity_Issue.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(RollQuantity_Issue.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (IsGMTStore.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(IsGMTStore.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (GMTPartGroup Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(GMTPartGroup,String)
            End If
            If (IsClose.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(IsClose.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal ChallanNo As String,  _
                    ByVal ChallanDate As Global.System.Nullable(Of Date),  _
                    ByVal SupplierId As Global.System.Nullable(Of Long),  _
                    ByVal ReceiveQuantity As Global.System.Nullable(Of Decimal),  _
                    ByVal IssueQuantity As Global.System.Nullable(Of Decimal),  _
                    ByVal IssueReceiveTypeId As String,  _
                    ByVal BatchNo As String,  _
                    ByVal LocationReference As String,  _
                    ByVal Remarks As String,  _
                    ByVal IsImported As Global.System.Nullable(Of Boolean),  _
                    ByVal LCNo As String,  _
                    ByVal LCDate As Global.System.Nullable(Of Date),  _
                    ByVal BranchId As Global.System.Nullable(Of Long),  _
                    ByVal RollQuantity As Global.System.Nullable(Of Integer),  _
                    ByVal GatePassNo As String,  _
                    ByVal VehicleNo As String,  _
                    ByVal FinishFabricBookingDetailsId As Global.System.Nullable(Of Long),  _
                    ByVal BatchInformationId As Global.System.Nullable(Of Long),  _
                    ByVal DyeingDate As Global.System.Nullable(Of Date),  _
                    ByVal CompanyId As Global.System.Nullable(Of Long),  _
                    ByVal IssueQuantity_Cutting As Global.System.Nullable(Of Decimal),  _
                    ByVal UnitId As Global.System.Nullable(Of Long),  _
                    ByVal ReceiveQuantity_Yrds As Global.System.Nullable(Of Decimal),  _
                    ByVal ReceiveQuantity_Pcs As Global.System.Nullable(Of Decimal),  _
                    ByVal IssueQuantity_Yrds As Global.System.Nullable(Of Decimal),  _
                    ByVal IssueQuantity_Pcs As Global.System.Nullable(Of Decimal),  _
                    ByVal IssueQuantity_Cutting_Yrds As Global.System.Nullable(Of Decimal),  _
                    ByVal IssueQuantity_Cutting_Pcs As Global.System.Nullable(Of Decimal),  _
                    ByVal RollQuantity_Issue As Global.System.Nullable(Of Integer),  _
                    ByVal IsGMTStore As Global.System.Nullable(Of Boolean),  _
                    ByVal GMTPartGroup As String,  _
                    ByVal IsClose As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_FFReceiveIssueId As Long,  _
                    ByVal Original_ChallanNo As String,  _
                    ByVal Original_ChallanDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_SupplierId As Global.System.Nullable(Of Long),  _
                    ByVal Original_ReceiveQuantity As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_IssueQuantity As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_IssueReceiveTypeId As String,  _
                    ByVal Original_BatchNo As String,  _
                    ByVal Original_LocationReference As String,  _
                    ByVal Original_Remarks As String,  _
                    ByVal Original_IsImported As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_LCNo As String,  _
                    ByVal Original_LCDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_BranchId As Global.System.Nullable(Of Long),  _
                    ByVal Original_RollQuantity As Global.System.Nullable(Of Integer),  _
                    ByVal Original_GatePassNo As String,  _
                    ByVal Original_VehicleNo As String,  _
                    ByVal Original_FinishFabricBookingDetailsId As Global.System.Nullable(Of Long),  _
                    ByVal Original_BatchInformationId As Global.System.Nullable(Of Long),  _
                    ByVal Original_DyeingDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_CompanyId As Global.System.Nullable(Of Long),  _
                    ByVal Original_IssueQuantity_Cutting As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_UnitId As Global.System.Nullable(Of Long),  _
                    ByVal Original_ReceiveQuantity_Yrds As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_ReceiveQuantity_Pcs As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_IssueQuantity_Yrds As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_IssueQuantity_Pcs As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_IssueQuantity_Cutting_Yrds As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_IssueQuantity_Cutting_Pcs As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_RollQuantity_Issue As Global.System.Nullable(Of Integer),  _
                    ByVal Original_IsGMTStore As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_GMTPartGroup As String,  _
                    ByVal Original_IsClose As Global.System.Nullable(Of Boolean),  _
                    ByVal FFReceiveIssueId As Long) As Integer
            If (ChallanNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(ChallanNo,String)
            End If
            If (ChallanDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(ChallanDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (SupplierId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(SupplierId.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (ReceiveQuantity.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(ReceiveQuantity.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (IssueQuantity.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(IssueQuantity.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (IssueReceiveTypeId Is Nothing) Then
                Throw New Global.System.ArgumentNullException("IssueReceiveTypeId")
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(IssueReceiveTypeId,String)
            End If
            If (BatchNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(BatchNo,String)
            End If
            If (LocationReference Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(LocationReference,String)
            End If
            If (Remarks Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Remarks,String)
            End If
            If (IsImported.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(IsImported.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (LCNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(LCNo,String)
            End If
            If (LCDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(LCDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (BranchId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(BranchId.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (RollQuantity.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(RollQuantity.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (GatePassNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(GatePassNo,String)
            End If
            If (VehicleNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(VehicleNo,String)
            End If
            If (FinishFabricBookingDetailsId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(FinishFabricBookingDetailsId.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (BatchInformationId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(BatchInformationId.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (DyeingDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(DyeingDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (CompanyId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(CompanyId.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (IssueQuantity_Cutting.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(IssueQuantity_Cutting.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (UnitId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(UnitId.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (ReceiveQuantity_Yrds.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(ReceiveQuantity_Yrds.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (ReceiveQuantity_Pcs.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(ReceiveQuantity_Pcs.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (IssueQuantity_Yrds.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(IssueQuantity_Yrds.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (IssueQuantity_Pcs.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(IssueQuantity_Pcs.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (IssueQuantity_Cutting_Yrds.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(IssueQuantity_Cutting_Yrds.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (IssueQuantity_Cutting_Pcs.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(IssueQuantity_Cutting_Pcs.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (RollQuantity_Issue.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(RollQuantity_Issue.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (IsGMTStore.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(IsGMTStore.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (GMTPartGroup Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(GMTPartGroup,String)
            End If
            If (IsClose.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(IsClose.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(32).Value = CType(Original_FFReceiveIssueId,Long)
            If (Original_ChallanNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(Original_ChallanNo,String)
            End If
            If (Original_ChallanDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(Original_ChallanDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (Original_SupplierId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(Original_SupplierId.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (Original_ReceiveQuantity.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(Original_ReceiveQuantity.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (Original_IssueQuantity.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(Original_IssueQuantity.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (Original_IssueReceiveTypeId Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_IssueReceiveTypeId")
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(Original_IssueReceiveTypeId,String)
            End If
            If (Original_BatchNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(Original_BatchNo,String)
            End If
            If (Original_LocationReference Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(Original_LocationReference,String)
            End If
            If (Original_Remarks Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(49).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(Original_Remarks,String)
            End If
            If (Original_IsImported.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(Original_IsImported.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(51).Value = Global.System.DBNull.Value
            End If
            If (Original_LCNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(Original_LCNo,String)
            End If
            If (Original_LCDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(Original_LCDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(55).Value = Global.System.DBNull.Value
            End If
            If (Original_BranchId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(Original_BranchId.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(57).Value = Global.System.DBNull.Value
            End If
            If (Original_RollQuantity.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(Original_RollQuantity.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(59).Value = Global.System.DBNull.Value
            End If
            If (Original_GatePassNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(61).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(Original_GatePassNo,String)
            End If
            If (Original_VehicleNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(63).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(Original_VehicleNo,String)
            End If
            If (Original_FinishFabricBookingDetailsId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(Original_FinishFabricBookingDetailsId.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(65).Value = Global.System.DBNull.Value
            End If
            If (Original_BatchInformationId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(Original_BatchInformationId.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(67).Value = Global.System.DBNull.Value
            End If
            If (Original_DyeingDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(Original_DyeingDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(69).Value = Global.System.DBNull.Value
            End If
            If (Original_CompanyId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(Original_CompanyId.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(71).Value = Global.System.DBNull.Value
            End If
            If (Original_IssueQuantity_Cutting.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(Original_IssueQuantity_Cutting.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(73).Value = Global.System.DBNull.Value
            End If
            If (Original_UnitId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(Original_UnitId.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(75).Value = Global.System.DBNull.Value
            End If
            If (Original_ReceiveQuantity_Yrds.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(Original_ReceiveQuantity_Yrds.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(77).Value = Global.System.DBNull.Value
            End If
            If (Original_ReceiveQuantity_Pcs.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(Original_ReceiveQuantity_Pcs.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(79).Value = Global.System.DBNull.Value
            End If
            If (Original_IssueQuantity_Yrds.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(Original_IssueQuantity_Yrds.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(81).Value = Global.System.DBNull.Value
            End If
            If (Original_IssueQuantity_Pcs.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(Original_IssueQuantity_Pcs.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(83).Value = Global.System.DBNull.Value
            End If
            If (Original_IssueQuantity_Cutting_Yrds.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(Original_IssueQuantity_Cutting_Yrds.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(85).Value = Global.System.DBNull.Value
            End If
            If (Original_IssueQuantity_Cutting_Pcs.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(Original_IssueQuantity_Cutting_Pcs.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(87).Value = Global.System.DBNull.Value
            End If
            If (Original_RollQuantity_Issue.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(Original_RollQuantity_Issue.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(89).Value = Global.System.DBNull.Value
            End If
            If (Original_IsGMTStore.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(Original_IsGMTStore.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(91).Value = Global.System.DBNull.Value
            End If
            If (Original_GMTPartGroup Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(93).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(Original_GMTPartGroup,String)
            End If
            If (Original_IsClose.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(94).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(95).Value = CType(Original_IsClose.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(94).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(95).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(96).Value = CType(FFReceiveIssueId,Long)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal ChallanNo As String,  _
                    ByVal ChallanDate As Global.System.Nullable(Of Date),  _
                    ByVal SupplierId As Global.System.Nullable(Of Long),  _
                    ByVal ReceiveQuantity As Global.System.Nullable(Of Decimal),  _
                    ByVal IssueQuantity As Global.System.Nullable(Of Decimal),  _
                    ByVal IssueReceiveTypeId As String,  _
                    ByVal BatchNo As String,  _
                    ByVal LocationReference As String,  _
                    ByVal Remarks As String,  _
                    ByVal IsImported As Global.System.Nullable(Of Boolean),  _
                    ByVal LCNo As String,  _
                    ByVal LCDate As Global.System.Nullable(Of Date),  _
                    ByVal BranchId As Global.System.Nullable(Of Long),  _
                    ByVal RollQuantity As Global.System.Nullable(Of Integer),  _
                    ByVal GatePassNo As String,  _
                    ByVal VehicleNo As String,  _
                    ByVal FinishFabricBookingDetailsId As Global.System.Nullable(Of Long),  _
                    ByVal BatchInformationId As Global.System.Nullable(Of Long),  _
                    ByVal DyeingDate As Global.System.Nullable(Of Date),  _
                    ByVal CompanyId As Global.System.Nullable(Of Long),  _
                    ByVal IssueQuantity_Cutting As Global.System.Nullable(Of Decimal),  _
                    ByVal UnitId As Global.System.Nullable(Of Long),  _
                    ByVal ReceiveQuantity_Yrds As Global.System.Nullable(Of Decimal),  _
                    ByVal ReceiveQuantity_Pcs As Global.System.Nullable(Of Decimal),  _
                    ByVal IssueQuantity_Yrds As Global.System.Nullable(Of Decimal),  _
                    ByVal IssueQuantity_Pcs As Global.System.Nullable(Of Decimal),  _
                    ByVal IssueQuantity_Cutting_Yrds As Global.System.Nullable(Of Decimal),  _
                    ByVal IssueQuantity_Cutting_Pcs As Global.System.Nullable(Of Decimal),  _
                    ByVal RollQuantity_Issue As Global.System.Nullable(Of Integer),  _
                    ByVal IsGMTStore As Global.System.Nullable(Of Boolean),  _
                    ByVal GMTPartGroup As String,  _
                    ByVal IsClose As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_FFReceiveIssueId As Long,  _
                    ByVal Original_ChallanNo As String,  _
                    ByVal Original_ChallanDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_SupplierId As Global.System.Nullable(Of Long),  _
                    ByVal Original_ReceiveQuantity As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_IssueQuantity As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_IssueReceiveTypeId As String,  _
                    ByVal Original_BatchNo As String,  _
                    ByVal Original_LocationReference As String,  _
                    ByVal Original_Remarks As String,  _
                    ByVal Original_IsImported As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_LCNo As String,  _
                    ByVal Original_LCDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_BranchId As Global.System.Nullable(Of Long),  _
                    ByVal Original_RollQuantity As Global.System.Nullable(Of Integer),  _
                    ByVal Original_GatePassNo As String,  _
                    ByVal Original_VehicleNo As String,  _
                    ByVal Original_FinishFabricBookingDetailsId As Global.System.Nullable(Of Long),  _
                    ByVal Original_BatchInformationId As Global.System.Nullable(Of Long),  _
                    ByVal Original_DyeingDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_CompanyId As Global.System.Nullable(Of Long),  _
                    ByVal Original_IssueQuantity_Cutting As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_UnitId As Global.System.Nullable(Of Long),  _
                    ByVal Original_ReceiveQuantity_Yrds As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_ReceiveQuantity_Pcs As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_IssueQuantity_Yrds As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_IssueQuantity_Pcs As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_IssueQuantity_Cutting_Yrds As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_IssueQuantity_Cutting_Pcs As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_RollQuantity_Issue As Global.System.Nullable(Of Integer),  _
                    ByVal Original_IsGMTStore As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_GMTPartGroup As String,  _
                    ByVal Original_IsClose As Global.System.Nullable(Of Boolean)) As Integer
            Return Me.Update(ChallanNo, ChallanDate, SupplierId, ReceiveQuantity, IssueQuantity, IssueReceiveTypeId, BatchNo, LocationReference, Remarks, IsImported, LCNo, LCDate, BranchId, RollQuantity, GatePassNo, VehicleNo, FinishFabricBookingDetailsId, BatchInformationId, DyeingDate, CompanyId, IssueQuantity_Cutting, UnitId, ReceiveQuantity_Yrds, ReceiveQuantity_Pcs, IssueQuantity_Yrds, IssueQuantity_Pcs, IssueQuantity_Cutting_Yrds, IssueQuantity_Cutting_Pcs, RollQuantity_Issue, IsGMTStore, GMTPartGroup, IsClose, Original_FFReceiveIssueId, Original_ChallanNo, Original_ChallanDate, Original_SupplierId, Original_ReceiveQuantity, Original_IssueQuantity, Original_IssueReceiveTypeId, Original_BatchNo, Original_LocationReference, Original_Remarks, Original_IsImported, Original_LCNo, Original_LCDate, Original_BranchId, Original_RollQuantity, Original_GatePassNo, Original_VehicleNo, Original_FinishFabricBookingDetailsId, Original_BatchInformationId, Original_DyeingDate, Original_CompanyId, Original_IssueQuantity_Cutting, Original_UnitId, Original_ReceiveQuantity_Yrds, Original_ReceiveQuantity_Pcs, Original_IssueQuantity_Yrds, Original_IssueQuantity_Pcs, Original_IssueQuantity_Cutting_Yrds, Original_IssueQuantity_Cutting_Pcs, Original_RollQuantity_Issue, Original_IsGMTStore, Original_GMTPartGroup, Original_IsClose, Original_FFReceiveIssueId)
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _finishFabricReceiveIssueTableAdapter As FinishFabricReceiveIssueTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property FinishFabricReceiveIssueTableAdapter() As FinishFabricReceiveIssueTableAdapter
            Get
                Return Me._finishFabricReceiveIssueTableAdapter
            End Get
            Set
                Me._finishFabricReceiveIssueTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._finishFabricReceiveIssueTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._finishFabricReceiveIssueTableAdapter.Connection) Is Nothing)) Then
                    Return Me._finishFabricReceiveIssueTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._finishFabricReceiveIssueTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As FinishFabricReceiveIssueDataSet, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._finishFabricReceiveIssueTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.FinishFabricReceiveIssue.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._finishFabricReceiveIssueTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As FinishFabricReceiveIssueDataSet, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._finishFabricReceiveIssueTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.FinishFabricReceiveIssue.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._finishFabricReceiveIssueTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As FinishFabricReceiveIssueDataSet, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._finishFabricReceiveIssueTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.FinishFabricReceiveIssue.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._finishFabricReceiveIssueTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As FinishFabricReceiveIssueDataSet) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._finishFabricReceiveIssueTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._finishFabricReceiveIssueTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._finishFabricReceiveIssueTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._finishFabricReceiveIssueTableAdapter, Me._finishFabricReceiveIssueTableAdapter.Connection)
                    Me._finishFabricReceiveIssueTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._finishFabricReceiveIssueTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._finishFabricReceiveIssueTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._finishFabricReceiveIssueTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._finishFabricReceiveIssueTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._finishFabricReceiveIssueTableAdapter) Is Nothing) Then
                    Me._finishFabricReceiveIssueTableAdapter.Connection = CType(revertConnections(Me._finishFabricReceiveIssueTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._finishFabricReceiveIssueTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
