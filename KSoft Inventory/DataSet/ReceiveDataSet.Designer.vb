'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("ReceiveDataSet"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class ReceiveDataSet
    Inherits Global.System.Data.DataSet
    
    Private tableReceive As ReceiveDataTable
    
    Private tableTotalReceiveQuantity As TotalReceiveQuantityDataTable
    
    Private tableMRNOLookUp As MRNOLookUpDataTable
    
    Private tableReceivedMRNoLookup As ReceivedMRNoLookupDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
        Me.InitExpressions
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.ExcludeSchema) Then
                Me.InitExpressions
            End If
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("Receive")) Is Nothing) Then
                MyBase.Tables.Add(New ReceiveDataTable(ds.Tables("Receive")))
            End If
            If (Not (ds.Tables("TotalReceiveQuantity")) Is Nothing) Then
                MyBase.Tables.Add(New TotalReceiveQuantityDataTable(ds.Tables("TotalReceiveQuantity")))
            End If
            If (Not (ds.Tables("MRNOLookUp")) Is Nothing) Then
                MyBase.Tables.Add(New MRNOLookUpDataTable(ds.Tables("MRNOLookUp")))
            End If
            If (Not (ds.Tables("ReceivedMRNoLookup")) Is Nothing) Then
                MyBase.Tables.Add(New ReceivedMRNoLookupDataTable(ds.Tables("ReceivedMRNoLookup")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            Me.InitExpressions
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Receive() As ReceiveDataTable
        Get
            Return Me.tableReceive
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TotalReceiveQuantity() As TotalReceiveQuantityDataTable
        Get
            Return Me.tableTotalReceiveQuantity
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property MRNOLookUp() As MRNOLookUpDataTable
        Get
            Return Me.tableMRNOLookUp
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ReceivedMRNoLookup() As ReceivedMRNoLookupDataTable
        Get
            Return Me.tableReceivedMRNoLookup
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As ReceiveDataSet = CType(MyBase.Clone,ReceiveDataSet)
        cln.InitVars
        cln.InitExpressions
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("Receive")) Is Nothing) Then
                MyBase.Tables.Add(New ReceiveDataTable(ds.Tables("Receive")))
            End If
            If (Not (ds.Tables("TotalReceiveQuantity")) Is Nothing) Then
                MyBase.Tables.Add(New TotalReceiveQuantityDataTable(ds.Tables("TotalReceiveQuantity")))
            End If
            If (Not (ds.Tables("MRNOLookUp")) Is Nothing) Then
                MyBase.Tables.Add(New MRNOLookUpDataTable(ds.Tables("MRNOLookUp")))
            End If
            If (Not (ds.Tables("ReceivedMRNoLookup")) Is Nothing) Then
                MyBase.Tables.Add(New ReceivedMRNoLookupDataTable(ds.Tables("ReceivedMRNoLookup")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableReceive = CType(MyBase.Tables("Receive"),ReceiveDataTable)
        If (initTable = true) Then
            If (Not (Me.tableReceive) Is Nothing) Then
                Me.tableReceive.InitVars
            End If
        End If
        Me.tableTotalReceiveQuantity = CType(MyBase.Tables("TotalReceiveQuantity"),TotalReceiveQuantityDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTotalReceiveQuantity) Is Nothing) Then
                Me.tableTotalReceiveQuantity.InitVars
            End If
        End If
        Me.tableMRNOLookUp = CType(MyBase.Tables("MRNOLookUp"),MRNOLookUpDataTable)
        If (initTable = true) Then
            If (Not (Me.tableMRNOLookUp) Is Nothing) Then
                Me.tableMRNOLookUp.InitVars
            End If
        End If
        Me.tableReceivedMRNoLookup = CType(MyBase.Tables("ReceivedMRNoLookup"),ReceivedMRNoLookupDataTable)
        If (initTable = true) Then
            If (Not (Me.tableReceivedMRNoLookup) Is Nothing) Then
                Me.tableReceivedMRNoLookup.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "ReceiveDataSet"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/ReceiveDataSet.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableReceive = New ReceiveDataTable()
        MyBase.Tables.Add(Me.tableReceive)
        Me.tableTotalReceiveQuantity = New TotalReceiveQuantityDataTable()
        MyBase.Tables.Add(Me.tableTotalReceiveQuantity)
        Me.tableMRNOLookUp = New MRNOLookUpDataTable(false)
        MyBase.Tables.Add(Me.tableMRNOLookUp)
        Me.tableReceivedMRNoLookup = New ReceivedMRNoLookupDataTable()
        MyBase.Tables.Add(Me.tableReceivedMRNoLookup)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializeReceive() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializeTotalReceiveQuantity() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializeMRNOLookUp() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializeReceivedMRNoLookup() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As ReceiveDataSet = New ReceiveDataSet()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Sub InitExpressions()
        Me.MRNOLookUp.DetailsColumn.Expression = "ReceiveId + '/' + ISNULL(ChallanNo,'N/A')"
    End Sub
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub ReceiveRowChangeEventHandler(ByVal sender As Object, ByVal e As ReceiveRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub TotalReceiveQuantityRowChangeEventHandler(ByVal sender As Object, ByVal e As TotalReceiveQuantityRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub MRNOLookUpRowChangeEventHandler(ByVal sender As Object, ByVal e As MRNOLookUpRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub ReceivedMRNoLookupRowChangeEventHandler(ByVal sender As Object, ByVal e As ReceivedMRNoLookupRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ReceiveDataTable
        Inherits Global.System.Data.TypedTableBase(Of ReceiveRow)
        
        Private columnReceiveId As Global.System.Data.DataColumn
        
        Private columnReceiveDate As Global.System.Data.DataColumn
        
        Private columnChallanNo As Global.System.Data.DataColumn
        
        Private columnReceiveQuantity As Global.System.Data.DataColumn
        
        Private columnBranchId As Global.System.Data.DataColumn
        
        Private columnRemarks As Global.System.Data.DataColumn
        
        Private columnDepartmentId As Global.System.Data.DataColumn
        
        Private columnProgramNo As Global.System.Data.DataColumn
        
        Private columnBookingDetailsId As Global.System.Data.DataColumn
        
        Private columnLCNo As Global.System.Data.DataColumn
        
        Private columnLCDate As Global.System.Data.DataColumn
        
        Private columnSupplierId As Global.System.Data.DataColumn
        
        Private columnImported As Global.System.Data.DataColumn
        
        Private columnIssueReceiveTypeId As Global.System.Data.DataColumn
        
        Private columnItemId As Global.System.Data.DataColumn
        
        Private columnYarnLotNo As Global.System.Data.DataColumn
        
        Private columnAllocation As Global.System.Data.DataColumn
        
        Private columnBrandId As Global.System.Data.DataColumn
        
        Private columnRequisitionId As Global.System.Data.DataColumn
        
        Private columnCompanyId As Global.System.Data.DataColumn
        
        Private columnLocationId As Global.System.Data.DataColumn
        
        Private columnPINO As Global.System.Data.DataColumn
        
        Private columnForShade As Global.System.Data.DataColumn
        
        Private columnPIDate As Global.System.Data.DataColumn
        
        Private columnUserId As Global.System.Data.DataColumn
        
        Private columnModifiedOn As Global.System.Data.DataColumn
        
        Private columnPIId As Global.System.Data.DataColumn
        
        Private columnLCId As Global.System.Data.DataColumn
        
        Private columnIsAlreadyIssued As Global.System.Data.DataColumn
        
        Private columnMasterReceiveId As Global.System.Data.DataColumn
        
        Private columnFinishFabricBookingId As Global.System.Data.DataColumn
        
        Private columnKnittingOrderId As Global.System.Data.DataColumn
        
        Private columnMRRNo As Global.System.Data.DataColumn
        
        Private columnYDOrderId As Global.System.Data.DataColumn
        
        Private columnYDOrderDetailsId As Global.System.Data.DataColumn
        
        Private columnQtyPerPacket As Global.System.Data.DataColumn
        
        Private columnPacketQuantity As Global.System.Data.DataColumn
        
        Private columnMRRDate As Global.System.Data.DataColumn
        
        Private columnReference As Global.System.Data.DataColumn
        
        Private columnTestStatus As Global.System.Data.DataColumn
        
        Private columnTestComments As Global.System.Data.DataColumn
        
        Private columnPrice As Global.System.Data.DataColumn
        
        Private columnDollarValue As Global.System.Data.DataColumn
        
        Private columnManufactureDate As Global.System.Data.DataColumn
        
        Private columnExpiryDate As Global.System.Data.DataColumn
        
        Private columnIsLeftOver As Global.System.Data.DataColumn
        
        Private columnIsOrganic As Global.System.Data.DataColumn
        
        Private columnLeftOverQuantity As Global.System.Data.DataColumn
        
        Private columnTransBookingDetailsId As Global.System.Data.DataColumn
        
        Private columnLotNoWOLC As Global.System.Data.DataColumn
        
        Private columnActReceiveQuantity As Global.System.Data.DataColumn
        
        Private columnActUnitId As Global.System.Data.DataColumn
        
        Private columnUnitId As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Receive"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ReceiveIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReceiveId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ReceiveDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReceiveDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ChallanNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnChallanNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ReceiveQuantityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReceiveQuantity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BranchIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBranchId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property RemarksColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRemarks
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property DepartmentIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDepartmentId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ProgramNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProgramNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BookingDetailsIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBookingDetailsId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property LCNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLCNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property LCDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLCDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SupplierIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSupplierId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ImportedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnImported
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property IssueReceiveTypeIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIssueReceiveTypeId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ItemIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItemId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property YarnLotNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnYarnLotNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property AllocationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAllocation
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BrandIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBrandId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property RequisitionIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRequisitionId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CompanyIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCompanyId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property LocationIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLocationId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PINOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPINO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ForShadeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnForShade
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PIDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPIDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property UserIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUserId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ModifiedOnColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnModifiedOn
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PIIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPIId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property LCIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLCId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property IsAlreadyIssuedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIsAlreadyIssued
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property MasterReceiveIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMasterReceiveId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property FinishFabricBookingIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFinishFabricBookingId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property KnittingOrderIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKnittingOrderId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property MRRNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMRRNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property YDOrderIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnYDOrderId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property YDOrderDetailsIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnYDOrderDetailsId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property QtyPerPacketColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQtyPerPacket
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PacketQuantityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPacketQuantity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property MRRDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMRRDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ReferenceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReference
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TestStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTestStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TestCommentsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTestComments
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PriceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrice
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property DollarValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDollarValue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ManufactureDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnManufactureDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ExpiryDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExpiryDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property IsLeftOverColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIsLeftOver
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property IsOrganicColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIsOrganic
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property LeftOverQuantityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLeftOverQuantity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TransBookingDetailsIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTransBookingDetailsId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property LotNoWOLCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLotNoWOLC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ActReceiveQuantityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnActReceiveQuantity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ActUnitIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnActUnitId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property UnitIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUnitId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ReceiveRow
            Get
                Return CType(Me.Rows(index),ReceiveRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event ReceiveRowChanging As ReceiveRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event ReceiveRowChanged As ReceiveRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event ReceiveRowDeleting As ReceiveRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event ReceiveRowDeleted As ReceiveRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub AddReceiveRow(ByVal row As ReceiveRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function AddReceiveRow( _
                    ByVal ReceiveDate As Date,  _
                    ByVal ChallanNo As String,  _
                    ByVal ReceiveQuantity As Decimal,  _
                    ByVal BranchId As Long,  _
                    ByVal Remarks As String,  _
                    ByVal DepartmentId As Long,  _
                    ByVal ProgramNo As String,  _
                    ByVal BookingDetailsId As Long,  _
                    ByVal LCNo As String,  _
                    ByVal LCDate As Date,  _
                    ByVal SupplierId As Long,  _
                    ByVal Imported As Boolean,  _
                    ByVal IssueReceiveTypeId As Long,  _
                    ByVal ItemId As Long,  _
                    ByVal YarnLotNo As String,  _
                    ByVal Allocation As String,  _
                    ByVal BrandId As Long,  _
                    ByVal RequisitionId As Long,  _
                    ByVal CompanyId As Long,  _
                    ByVal LocationId As Long,  _
                    ByVal PINO As String,  _
                    ByVal ForShade As String,  _
                    ByVal PIDate As Date,  _
                    ByVal UserId As Long,  _
                    ByVal ModifiedOn As Date,  _
                    ByVal PIId As Long,  _
                    ByVal LCId As Long,  _
                    ByVal IsAlreadyIssued As Boolean,  _
                    ByVal MasterReceiveId As Long,  _
                    ByVal FinishFabricBookingId As Long,  _
                    ByVal KnittingOrderId As Long,  _
                    ByVal MRRNo As Integer,  _
                    ByVal YDOrderId As Long,  _
                    ByVal YDOrderDetailsId As Long,  _
                    ByVal QtyPerPacket As Decimal,  _
                    ByVal PacketQuantity As Decimal,  _
                    ByVal MRRDate As Date,  _
                    ByVal Reference As String,  _
                    ByVal TestStatus As String,  _
                    ByVal TestComments As String,  _
                    ByVal Price As Decimal,  _
                    ByVal DollarValue As Decimal,  _
                    ByVal ManufactureDate As Date,  _
                    ByVal ExpiryDate As Date,  _
                    ByVal IsLeftOver As Boolean,  _
                    ByVal IsOrganic As Boolean,  _
                    ByVal LeftOverQuantity As Decimal,  _
                    ByVal TransBookingDetailsId As Long,  _
                    ByVal LotNoWOLC As String,  _
                    ByVal ActReceiveQuantity As Decimal,  _
                    ByVal ActUnitId As Long,  _
                    ByVal UnitId As String) As ReceiveRow
            Dim rowReceiveRow As ReceiveRow = CType(Me.NewRow,ReceiveRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, ReceiveDate, ChallanNo, ReceiveQuantity, BranchId, Remarks, DepartmentId, ProgramNo, BookingDetailsId, LCNo, LCDate, SupplierId, Imported, IssueReceiveTypeId, ItemId, YarnLotNo, Allocation, BrandId, RequisitionId, CompanyId, LocationId, PINO, ForShade, PIDate, UserId, ModifiedOn, PIId, LCId, IsAlreadyIssued, MasterReceiveId, FinishFabricBookingId, KnittingOrderId, MRRNo, YDOrderId, YDOrderDetailsId, QtyPerPacket, PacketQuantity, MRRDate, Reference, TestStatus, TestComments, Price, DollarValue, ManufactureDate, ExpiryDate, IsLeftOver, IsOrganic, LeftOverQuantity, TransBookingDetailsId, LotNoWOLC, ActReceiveQuantity, ActUnitId, UnitId}
            rowReceiveRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowReceiveRow)
            Return rowReceiveRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function FindByReceiveId(ByVal ReceiveId As Long) As ReceiveRow
            Return CType(Me.Rows.Find(New Object() {ReceiveId}),ReceiveRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ReceiveDataTable = CType(MyBase.Clone,ReceiveDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ReceiveDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnReceiveId = MyBase.Columns("ReceiveId")
            Me.columnReceiveDate = MyBase.Columns("ReceiveDate")
            Me.columnChallanNo = MyBase.Columns("ChallanNo")
            Me.columnReceiveQuantity = MyBase.Columns("ReceiveQuantity")
            Me.columnBranchId = MyBase.Columns("BranchId")
            Me.columnRemarks = MyBase.Columns("Remarks")
            Me.columnDepartmentId = MyBase.Columns("DepartmentId")
            Me.columnProgramNo = MyBase.Columns("ProgramNo")
            Me.columnBookingDetailsId = MyBase.Columns("BookingDetailsId")
            Me.columnLCNo = MyBase.Columns("LCNo")
            Me.columnLCDate = MyBase.Columns("LCDate")
            Me.columnSupplierId = MyBase.Columns("SupplierId")
            Me.columnImported = MyBase.Columns("Imported")
            Me.columnIssueReceiveTypeId = MyBase.Columns("IssueReceiveTypeId")
            Me.columnItemId = MyBase.Columns("ItemId")
            Me.columnYarnLotNo = MyBase.Columns("YarnLotNo")
            Me.columnAllocation = MyBase.Columns("Allocation")
            Me.columnBrandId = MyBase.Columns("BrandId")
            Me.columnRequisitionId = MyBase.Columns("RequisitionId")
            Me.columnCompanyId = MyBase.Columns("CompanyId")
            Me.columnLocationId = MyBase.Columns("LocationId")
            Me.columnPINO = MyBase.Columns("PINO")
            Me.columnForShade = MyBase.Columns("ForShade")
            Me.columnPIDate = MyBase.Columns("PIDate")
            Me.columnUserId = MyBase.Columns("UserId")
            Me.columnModifiedOn = MyBase.Columns("ModifiedOn")
            Me.columnPIId = MyBase.Columns("PIId")
            Me.columnLCId = MyBase.Columns("LCId")
            Me.columnIsAlreadyIssued = MyBase.Columns("IsAlreadyIssued")
            Me.columnMasterReceiveId = MyBase.Columns("MasterReceiveId")
            Me.columnFinishFabricBookingId = MyBase.Columns("FinishFabricBookingId")
            Me.columnKnittingOrderId = MyBase.Columns("KnittingOrderId")
            Me.columnMRRNo = MyBase.Columns("MRRNo")
            Me.columnYDOrderId = MyBase.Columns("YDOrderId")
            Me.columnYDOrderDetailsId = MyBase.Columns("YDOrderDetailsId")
            Me.columnQtyPerPacket = MyBase.Columns("QtyPerPacket")
            Me.columnPacketQuantity = MyBase.Columns("PacketQuantity")
            Me.columnMRRDate = MyBase.Columns("MRRDate")
            Me.columnReference = MyBase.Columns("Reference")
            Me.columnTestStatus = MyBase.Columns("TestStatus")
            Me.columnTestComments = MyBase.Columns("TestComments")
            Me.columnPrice = MyBase.Columns("Price")
            Me.columnDollarValue = MyBase.Columns("DollarValue")
            Me.columnManufactureDate = MyBase.Columns("ManufactureDate")
            Me.columnExpiryDate = MyBase.Columns("ExpiryDate")
            Me.columnIsLeftOver = MyBase.Columns("IsLeftOver")
            Me.columnIsOrganic = MyBase.Columns("IsOrganic")
            Me.columnLeftOverQuantity = MyBase.Columns("LeftOverQuantity")
            Me.columnTransBookingDetailsId = MyBase.Columns("TransBookingDetailsId")
            Me.columnLotNoWOLC = MyBase.Columns("LotNoWOLC")
            Me.columnActReceiveQuantity = MyBase.Columns("ActReceiveQuantity")
            Me.columnActUnitId = MyBase.Columns("ActUnitId")
            Me.columnUnitId = MyBase.Columns("UnitId")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnReceiveId = New Global.System.Data.DataColumn("ReceiveId", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReceiveId)
            Me.columnReceiveDate = New Global.System.Data.DataColumn("ReceiveDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReceiveDate)
            Me.columnChallanNo = New Global.System.Data.DataColumn("ChallanNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnChallanNo)
            Me.columnReceiveQuantity = New Global.System.Data.DataColumn("ReceiveQuantity", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReceiveQuantity)
            Me.columnBranchId = New Global.System.Data.DataColumn("BranchId", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBranchId)
            Me.columnRemarks = New Global.System.Data.DataColumn("Remarks", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRemarks)
            Me.columnDepartmentId = New Global.System.Data.DataColumn("DepartmentId", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDepartmentId)
            Me.columnProgramNo = New Global.System.Data.DataColumn("ProgramNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProgramNo)
            Me.columnBookingDetailsId = New Global.System.Data.DataColumn("BookingDetailsId", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBookingDetailsId)
            Me.columnLCNo = New Global.System.Data.DataColumn("LCNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLCNo)
            Me.columnLCDate = New Global.System.Data.DataColumn("LCDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLCDate)
            Me.columnSupplierId = New Global.System.Data.DataColumn("SupplierId", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSupplierId)
            Me.columnImported = New Global.System.Data.DataColumn("Imported", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnImported)
            Me.columnIssueReceiveTypeId = New Global.System.Data.DataColumn("IssueReceiveTypeId", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIssueReceiveTypeId)
            Me.columnItemId = New Global.System.Data.DataColumn("ItemId", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItemId)
            Me.columnYarnLotNo = New Global.System.Data.DataColumn("YarnLotNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnYarnLotNo)
            Me.columnAllocation = New Global.System.Data.DataColumn("Allocation", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAllocation)
            Me.columnBrandId = New Global.System.Data.DataColumn("BrandId", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBrandId)
            Me.columnRequisitionId = New Global.System.Data.DataColumn("RequisitionId", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRequisitionId)
            Me.columnCompanyId = New Global.System.Data.DataColumn("CompanyId", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCompanyId)
            Me.columnLocationId = New Global.System.Data.DataColumn("LocationId", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLocationId)
            Me.columnPINO = New Global.System.Data.DataColumn("PINO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPINO)
            Me.columnForShade = New Global.System.Data.DataColumn("ForShade", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnForShade)
            Me.columnPIDate = New Global.System.Data.DataColumn("PIDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPIDate)
            Me.columnUserId = New Global.System.Data.DataColumn("UserId", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUserId)
            Me.columnModifiedOn = New Global.System.Data.DataColumn("ModifiedOn", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnModifiedOn)
            Me.columnPIId = New Global.System.Data.DataColumn("PIId", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPIId)
            Me.columnLCId = New Global.System.Data.DataColumn("LCId", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLCId)
            Me.columnIsAlreadyIssued = New Global.System.Data.DataColumn("IsAlreadyIssued", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIsAlreadyIssued)
            Me.columnMasterReceiveId = New Global.System.Data.DataColumn("MasterReceiveId", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMasterReceiveId)
            Me.columnFinishFabricBookingId = New Global.System.Data.DataColumn("FinishFabricBookingId", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFinishFabricBookingId)
            Me.columnKnittingOrderId = New Global.System.Data.DataColumn("KnittingOrderId", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKnittingOrderId)
            Me.columnMRRNo = New Global.System.Data.DataColumn("MRRNo", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMRRNo)
            Me.columnYDOrderId = New Global.System.Data.DataColumn("YDOrderId", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnYDOrderId)
            Me.columnYDOrderDetailsId = New Global.System.Data.DataColumn("YDOrderDetailsId", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnYDOrderDetailsId)
            Me.columnQtyPerPacket = New Global.System.Data.DataColumn("QtyPerPacket", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQtyPerPacket)
            Me.columnPacketQuantity = New Global.System.Data.DataColumn("PacketQuantity", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPacketQuantity)
            Me.columnMRRDate = New Global.System.Data.DataColumn("MRRDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMRRDate)
            Me.columnReference = New Global.System.Data.DataColumn("Reference", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReference)
            Me.columnTestStatus = New Global.System.Data.DataColumn("TestStatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTestStatus)
            Me.columnTestComments = New Global.System.Data.DataColumn("TestComments", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTestComments)
            Me.columnPrice = New Global.System.Data.DataColumn("Price", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrice)
            Me.columnDollarValue = New Global.System.Data.DataColumn("DollarValue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDollarValue)
            Me.columnManufactureDate = New Global.System.Data.DataColumn("ManufactureDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnManufactureDate)
            Me.columnExpiryDate = New Global.System.Data.DataColumn("ExpiryDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpiryDate)
            Me.columnIsLeftOver = New Global.System.Data.DataColumn("IsLeftOver", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIsLeftOver)
            Me.columnIsOrganic = New Global.System.Data.DataColumn("IsOrganic", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIsOrganic)
            Me.columnLeftOverQuantity = New Global.System.Data.DataColumn("LeftOverQuantity", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLeftOverQuantity)
            Me.columnTransBookingDetailsId = New Global.System.Data.DataColumn("TransBookingDetailsId", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTransBookingDetailsId)
            Me.columnLotNoWOLC = New Global.System.Data.DataColumn("LotNoWOLC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLotNoWOLC)
            Me.columnActReceiveQuantity = New Global.System.Data.DataColumn("ActReceiveQuantity", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnActReceiveQuantity)
            Me.columnActUnitId = New Global.System.Data.DataColumn("ActUnitId", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnActUnitId)
            Me.columnUnitId = New Global.System.Data.DataColumn("UnitId", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUnitId)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnReceiveId}, true))
            Me.columnReceiveId.AutoIncrement = true
            Me.columnReceiveId.AutoIncrementSeed = -1
            Me.columnReceiveId.AutoIncrementStep = -1
            Me.columnReceiveId.AllowDBNull = false
            Me.columnReceiveId.ReadOnly = true
            Me.columnReceiveId.Unique = true
            Me.columnReceiveDate.AllowDBNull = false
            Me.columnChallanNo.MaxLength = 50
            Me.columnReceiveQuantity.DefaultValue = CType(0D,Decimal)
            Me.columnRemarks.MaxLength = 100
            Me.columnDepartmentId.AllowDBNull = false
            Me.columnProgramNo.MaxLength = 50
            Me.columnLCNo.MaxLength = 50
            Me.columnImported.DefaultValue = CType(false,Boolean)
            Me.columnIssueReceiveTypeId.AllowDBNull = false
            Me.columnIssueReceiveTypeId.DefaultValue = CType(1,Long)
            Me.columnItemId.AllowDBNull = false
            Me.columnYarnLotNo.MaxLength = 50
            Me.columnAllocation.MaxLength = 50
            Me.columnPINO.MaxLength = 50
            Me.columnForShade.MaxLength = 50
            Me.columnIsAlreadyIssued.AllowDBNull = false
            Me.columnIsAlreadyIssued.DefaultValue = CType(false,Boolean)
            Me.columnReference.MaxLength = 50
            Me.columnTestStatus.MaxLength = 50
            Me.columnTestComments.MaxLength = 20
            Me.columnLotNoWOLC.MaxLength = 50
            Me.columnUnitId.MaxLength = 10
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function NewReceiveRow() As ReceiveRow
            Return CType(Me.NewRow,ReceiveRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ReceiveRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ReceiveRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ReceiveRowChangedEvent) Is Nothing) Then
                RaiseEvent ReceiveRowChanged(Me, New ReceiveRowChangeEvent(CType(e.Row,ReceiveRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ReceiveRowChangingEvent) Is Nothing) Then
                RaiseEvent ReceiveRowChanging(Me, New ReceiveRowChangeEvent(CType(e.Row,ReceiveRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ReceiveRowDeletedEvent) Is Nothing) Then
                RaiseEvent ReceiveRowDeleted(Me, New ReceiveRowChangeEvent(CType(e.Row,ReceiveRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ReceiveRowDeletingEvent) Is Nothing) Then
                RaiseEvent ReceiveRowDeleting(Me, New ReceiveRowChangeEvent(CType(e.Row,ReceiveRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub RemoveReceiveRow(ByVal row As ReceiveRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ReceiveDataSet = New ReceiveDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ReceiveDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TotalReceiveQuantityDataTable
        Inherits Global.System.Data.TypedTableBase(Of TotalReceiveQuantityRow)
        
        Private columnTotalReceiveQuantity As Global.System.Data.DataColumn
        
        Private columnBookingDetailsId As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "TotalReceiveQuantity"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TotalReceiveQuantityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalReceiveQuantity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BookingDetailsIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBookingDetailsId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TotalReceiveQuantityRow
            Get
                Return CType(Me.Rows(index),TotalReceiveQuantityRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event TotalReceiveQuantityRowChanging As TotalReceiveQuantityRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event TotalReceiveQuantityRowChanged As TotalReceiveQuantityRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event TotalReceiveQuantityRowDeleting As TotalReceiveQuantityRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event TotalReceiveQuantityRowDeleted As TotalReceiveQuantityRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub AddTotalReceiveQuantityRow(ByVal row As TotalReceiveQuantityRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function AddTotalReceiveQuantityRow(ByVal TotalReceiveQuantity As Decimal, ByVal BookingDetailsId As Long) As TotalReceiveQuantityRow
            Dim rowTotalReceiveQuantityRow As TotalReceiveQuantityRow = CType(Me.NewRow,TotalReceiveQuantityRow)
            Dim columnValuesArray() As Object = New Object() {TotalReceiveQuantity, BookingDetailsId}
            rowTotalReceiveQuantityRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTotalReceiveQuantityRow)
            Return rowTotalReceiveQuantityRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TotalReceiveQuantityDataTable = CType(MyBase.Clone,TotalReceiveQuantityDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TotalReceiveQuantityDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnTotalReceiveQuantity = MyBase.Columns("TotalReceiveQuantity")
            Me.columnBookingDetailsId = MyBase.Columns("BookingDetailsId")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnTotalReceiveQuantity = New Global.System.Data.DataColumn("TotalReceiveQuantity", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalReceiveQuantity)
            Me.columnBookingDetailsId = New Global.System.Data.DataColumn("BookingDetailsId", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBookingDetailsId)
            Me.columnTotalReceiveQuantity.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function NewTotalReceiveQuantityRow() As TotalReceiveQuantityRow
            Return CType(Me.NewRow,TotalReceiveQuantityRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TotalReceiveQuantityRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TotalReceiveQuantityRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TotalReceiveQuantityRowChangedEvent) Is Nothing) Then
                RaiseEvent TotalReceiveQuantityRowChanged(Me, New TotalReceiveQuantityRowChangeEvent(CType(e.Row,TotalReceiveQuantityRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TotalReceiveQuantityRowChangingEvent) Is Nothing) Then
                RaiseEvent TotalReceiveQuantityRowChanging(Me, New TotalReceiveQuantityRowChangeEvent(CType(e.Row,TotalReceiveQuantityRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TotalReceiveQuantityRowDeletedEvent) Is Nothing) Then
                RaiseEvent TotalReceiveQuantityRowDeleted(Me, New TotalReceiveQuantityRowChangeEvent(CType(e.Row,TotalReceiveQuantityRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TotalReceiveQuantityRowDeletingEvent) Is Nothing) Then
                RaiseEvent TotalReceiveQuantityRowDeleting(Me, New TotalReceiveQuantityRowChangeEvent(CType(e.Row,TotalReceiveQuantityRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub RemoveTotalReceiveQuantityRow(ByVal row As TotalReceiveQuantityRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ReceiveDataSet = New ReceiveDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TotalReceiveQuantityDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class MRNOLookUpDataTable
        Inherits Global.System.Data.TypedTableBase(Of MRNOLookUpRow)
        
        Private columnReceiveId As Global.System.Data.DataColumn
        
        Private columnReceiveDate As Global.System.Data.DataColumn
        
        Private columnChallanNo As Global.System.Data.DataColumn
        
        Private columnDepartmentId As Global.System.Data.DataColumn
        
        Private columnItemId As Global.System.Data.DataColumn
        
        Private columnDetails As Global.System.Data.DataColumn
        
        Private columnIsAlreadyIssued As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            Me.New(false)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal initExpressions As Boolean)
            MyBase.New
            Me.TableName = "MRNOLookUp"
            Me.BeginInit
            Me.InitClass
            If (initExpressions = true) Then
                Me.InitExpressions
            End If
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ReceiveIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReceiveId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ReceiveDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReceiveDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ChallanNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnChallanNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property DepartmentIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDepartmentId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ItemIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItemId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property DetailsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDetails
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property IsAlreadyIssuedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIsAlreadyIssued
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As MRNOLookUpRow
            Get
                Return CType(Me.Rows(index),MRNOLookUpRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event MRNOLookUpRowChanging As MRNOLookUpRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event MRNOLookUpRowChanged As MRNOLookUpRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event MRNOLookUpRowDeleting As MRNOLookUpRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event MRNOLookUpRowDeleted As MRNOLookUpRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub AddMRNOLookUpRow(ByVal row As MRNOLookUpRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function AddMRNOLookUpRow(ByVal ReceiveDate As Date, ByVal ChallanNo As String, ByVal DepartmentId As Long, ByVal ItemId As Long, ByVal Details As String, ByVal IsAlreadyIssued As Boolean) As MRNOLookUpRow
            Dim rowMRNOLookUpRow As MRNOLookUpRow = CType(Me.NewRow,MRNOLookUpRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, ReceiveDate, ChallanNo, DepartmentId, ItemId, Details, IsAlreadyIssued}
            rowMRNOLookUpRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowMRNOLookUpRow)
            Return rowMRNOLookUpRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function AddMRNOLookUpRow(ByVal ReceiveDate As Date, ByVal ChallanNo As String, ByVal DepartmentId As Long, ByVal ItemId As Long, ByVal IsAlreadyIssued As Boolean) As MRNOLookUpRow
            Dim rowMRNOLookUpRow As MRNOLookUpRow = CType(Me.NewRow,MRNOLookUpRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, ReceiveDate, ChallanNo, DepartmentId, ItemId, Nothing, IsAlreadyIssued}
            rowMRNOLookUpRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowMRNOLookUpRow)
            Return rowMRNOLookUpRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As MRNOLookUpDataTable = CType(MyBase.Clone,MRNOLookUpDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New MRNOLookUpDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnReceiveId = MyBase.Columns("ReceiveId")
            Me.columnReceiveDate = MyBase.Columns("ReceiveDate")
            Me.columnChallanNo = MyBase.Columns("ChallanNo")
            Me.columnDepartmentId = MyBase.Columns("DepartmentId")
            Me.columnItemId = MyBase.Columns("ItemId")
            Me.columnDetails = MyBase.Columns("Details")
            Me.columnIsAlreadyIssued = MyBase.Columns("IsAlreadyIssued")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnReceiveId = New Global.System.Data.DataColumn("ReceiveId", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReceiveId)
            Me.columnReceiveDate = New Global.System.Data.DataColumn("ReceiveDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReceiveDate)
            Me.columnChallanNo = New Global.System.Data.DataColumn("ChallanNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnChallanNo)
            Me.columnDepartmentId = New Global.System.Data.DataColumn("DepartmentId", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDepartmentId)
            Me.columnItemId = New Global.System.Data.DataColumn("ItemId", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItemId)
            Me.columnDetails = New Global.System.Data.DataColumn("Details", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDetails)
            Me.columnIsAlreadyIssued = New Global.System.Data.DataColumn("IsAlreadyIssued", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIsAlreadyIssued)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnReceiveId}, false))
            Me.columnReceiveId.AutoIncrement = true
            Me.columnReceiveId.AutoIncrementSeed = -1
            Me.columnReceiveId.AutoIncrementStep = -1
            Me.columnReceiveId.AllowDBNull = false
            Me.columnReceiveId.ReadOnly = true
            Me.columnReceiveId.Unique = true
            Me.columnReceiveDate.AllowDBNull = false
            Me.columnChallanNo.MaxLength = 50
            Me.columnDepartmentId.AllowDBNull = false
            Me.columnItemId.AllowDBNull = false
            Me.columnDetails.ReadOnly = true
            Me.columnIsAlreadyIssued.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function NewMRNOLookUpRow() As MRNOLookUpRow
            Return CType(Me.NewRow,MRNOLookUpRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New MRNOLookUpRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(MRNOLookUpRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitExpressions()
            Me.DetailsColumn.Expression = "ReceiveId + '/' + ISNULL(ChallanNo,'N/A')"
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.MRNOLookUpRowChangedEvent) Is Nothing) Then
                RaiseEvent MRNOLookUpRowChanged(Me, New MRNOLookUpRowChangeEvent(CType(e.Row,MRNOLookUpRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.MRNOLookUpRowChangingEvent) Is Nothing) Then
                RaiseEvent MRNOLookUpRowChanging(Me, New MRNOLookUpRowChangeEvent(CType(e.Row,MRNOLookUpRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.MRNOLookUpRowDeletedEvent) Is Nothing) Then
                RaiseEvent MRNOLookUpRowDeleted(Me, New MRNOLookUpRowChangeEvent(CType(e.Row,MRNOLookUpRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.MRNOLookUpRowDeletingEvent) Is Nothing) Then
                RaiseEvent MRNOLookUpRowDeleting(Me, New MRNOLookUpRowChangeEvent(CType(e.Row,MRNOLookUpRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub RemoveMRNOLookUpRow(ByVal row As MRNOLookUpRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ReceiveDataSet = New ReceiveDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "MRNOLookUpDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ReceivedMRNoLookupDataTable
        Inherits Global.System.Data.TypedTableBase(Of ReceivedMRNoLookupRow)
        
        Private columnMRNo As Global.System.Data.DataColumn
        
        Private columnChallanNo As Global.System.Data.DataColumn
        
        Private columnReceiveDate As Global.System.Data.DataColumn
        
        Private columnItemId As Global.System.Data.DataColumn
        
        Private columnIssueReceiveTypeId As Global.System.Data.DataColumn
        
        Private columnIsAlreadyIssued As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ReceivedMRNoLookup"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property MRNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMRNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ChallanNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnChallanNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ReceiveDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReceiveDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ItemIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItemId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property IssueReceiveTypeIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIssueReceiveTypeId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property IsAlreadyIssuedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIsAlreadyIssued
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ReceivedMRNoLookupRow
            Get
                Return CType(Me.Rows(index),ReceivedMRNoLookupRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event ReceivedMRNoLookupRowChanging As ReceivedMRNoLookupRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event ReceivedMRNoLookupRowChanged As ReceivedMRNoLookupRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event ReceivedMRNoLookupRowDeleting As ReceivedMRNoLookupRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event ReceivedMRNoLookupRowDeleted As ReceivedMRNoLookupRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub AddReceivedMRNoLookupRow(ByVal row As ReceivedMRNoLookupRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function AddReceivedMRNoLookupRow(ByVal MRNo As Long, ByVal ChallanNo As String, ByVal ReceiveDate As Date, ByVal ItemId As Long, ByVal IssueReceiveTypeId As Long, ByVal IsAlreadyIssued As Boolean) As ReceivedMRNoLookupRow
            Dim rowReceivedMRNoLookupRow As ReceivedMRNoLookupRow = CType(Me.NewRow,ReceivedMRNoLookupRow)
            Dim columnValuesArray() As Object = New Object() {MRNo, ChallanNo, ReceiveDate, ItemId, IssueReceiveTypeId, IsAlreadyIssued}
            rowReceivedMRNoLookupRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowReceivedMRNoLookupRow)
            Return rowReceivedMRNoLookupRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ReceivedMRNoLookupDataTable = CType(MyBase.Clone,ReceivedMRNoLookupDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ReceivedMRNoLookupDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnMRNo = MyBase.Columns("MRNo")
            Me.columnChallanNo = MyBase.Columns("ChallanNo")
            Me.columnReceiveDate = MyBase.Columns("ReceiveDate")
            Me.columnItemId = MyBase.Columns("ItemId")
            Me.columnIssueReceiveTypeId = MyBase.Columns("IssueReceiveTypeId")
            Me.columnIsAlreadyIssued = MyBase.Columns("IsAlreadyIssued")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnMRNo = New Global.System.Data.DataColumn("MRNo", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMRNo)
            Me.columnChallanNo = New Global.System.Data.DataColumn("ChallanNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnChallanNo)
            Me.columnReceiveDate = New Global.System.Data.DataColumn("ReceiveDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReceiveDate)
            Me.columnItemId = New Global.System.Data.DataColumn("ItemId", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItemId)
            Me.columnIssueReceiveTypeId = New Global.System.Data.DataColumn("IssueReceiveTypeId", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIssueReceiveTypeId)
            Me.columnIsAlreadyIssued = New Global.System.Data.DataColumn("IsAlreadyIssued", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIsAlreadyIssued)
            Me.columnMRNo.ReadOnly = true
            Me.columnChallanNo.MaxLength = 50
            Me.columnReceiveDate.ReadOnly = true
            Me.columnItemId.AllowDBNull = false
            Me.columnIssueReceiveTypeId.AllowDBNull = false
            Me.columnIsAlreadyIssued.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function NewReceivedMRNoLookupRow() As ReceivedMRNoLookupRow
            Return CType(Me.NewRow,ReceivedMRNoLookupRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ReceivedMRNoLookupRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ReceivedMRNoLookupRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ReceivedMRNoLookupRowChangedEvent) Is Nothing) Then
                RaiseEvent ReceivedMRNoLookupRowChanged(Me, New ReceivedMRNoLookupRowChangeEvent(CType(e.Row,ReceivedMRNoLookupRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ReceivedMRNoLookupRowChangingEvent) Is Nothing) Then
                RaiseEvent ReceivedMRNoLookupRowChanging(Me, New ReceivedMRNoLookupRowChangeEvent(CType(e.Row,ReceivedMRNoLookupRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ReceivedMRNoLookupRowDeletedEvent) Is Nothing) Then
                RaiseEvent ReceivedMRNoLookupRowDeleted(Me, New ReceivedMRNoLookupRowChangeEvent(CType(e.Row,ReceivedMRNoLookupRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ReceivedMRNoLookupRowDeletingEvent) Is Nothing) Then
                RaiseEvent ReceivedMRNoLookupRowDeleting(Me, New ReceivedMRNoLookupRowChangeEvent(CType(e.Row,ReceivedMRNoLookupRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub RemoveReceivedMRNoLookupRow(ByVal row As ReceivedMRNoLookupRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ReceiveDataSet = New ReceiveDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ReceivedMRNoLookupDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ReceiveRow
        Inherits Global.System.Data.DataRow
        
        Private tableReceive As ReceiveDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableReceive = CType(Me.Table,ReceiveDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ReceiveId() As Long
            Get
                Return CType(Me(Me.tableReceive.ReceiveIdColumn),Long)
            End Get
            Set
                Me(Me.tableReceive.ReceiveIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ReceiveDate() As Date
            Get
                Return CType(Me(Me.tableReceive.ReceiveDateColumn),Date)
            End Get
            Set
                Me(Me.tableReceive.ReceiveDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ChallanNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableReceive.ChallanNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ChallanNo' in table 'Receive' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReceive.ChallanNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ReceiveQuantity() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableReceive.ReceiveQuantityColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ReceiveQuantity' in table 'Receive' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReceive.ReceiveQuantityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BranchId() As Long
            Get
                Try 
                    Return CType(Me(Me.tableReceive.BranchIdColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BranchId' in table 'Receive' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReceive.BranchIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Remarks() As String
            Get
                Try 
                    Return CType(Me(Me.tableReceive.RemarksColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Remarks' in table 'Receive' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReceive.RemarksColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property DepartmentId() As Long
            Get
                Return CType(Me(Me.tableReceive.DepartmentIdColumn),Long)
            End Get
            Set
                Me(Me.tableReceive.DepartmentIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ProgramNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableReceive.ProgramNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProgramNo' in table 'Receive' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReceive.ProgramNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BookingDetailsId() As Long
            Get
                Try 
                    Return CType(Me(Me.tableReceive.BookingDetailsIdColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BookingDetailsId' in table 'Receive' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReceive.BookingDetailsIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property LCNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableReceive.LCNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LCNo' in table 'Receive' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReceive.LCNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property LCDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableReceive.LCDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LCDate' in table 'Receive' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReceive.LCDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SupplierId() As Long
            Get
                Try 
                    Return CType(Me(Me.tableReceive.SupplierIdColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SupplierId' in table 'Receive' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReceive.SupplierIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Imported() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableReceive.ImportedColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Imported' in table 'Receive' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReceive.ImportedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property IssueReceiveTypeId() As Long
            Get
                Return CType(Me(Me.tableReceive.IssueReceiveTypeIdColumn),Long)
            End Get
            Set
                Me(Me.tableReceive.IssueReceiveTypeIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ItemId() As Long
            Get
                Return CType(Me(Me.tableReceive.ItemIdColumn),Long)
            End Get
            Set
                Me(Me.tableReceive.ItemIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property YarnLotNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableReceive.YarnLotNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'YarnLotNo' in table 'Receive' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReceive.YarnLotNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Allocation() As String
            Get
                Try 
                    Return CType(Me(Me.tableReceive.AllocationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Allocation' in table 'Receive' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReceive.AllocationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BrandId() As Long
            Get
                Try 
                    Return CType(Me(Me.tableReceive.BrandIdColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BrandId' in table 'Receive' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReceive.BrandIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property RequisitionId() As Long
            Get
                Try 
                    Return CType(Me(Me.tableReceive.RequisitionIdColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RequisitionId' in table 'Receive' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReceive.RequisitionIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CompanyId() As Long
            Get
                Try 
                    Return CType(Me(Me.tableReceive.CompanyIdColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CompanyId' in table 'Receive' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReceive.CompanyIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property LocationId() As Long
            Get
                Try 
                    Return CType(Me(Me.tableReceive.LocationIdColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LocationId' in table 'Receive' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReceive.LocationIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PINO() As String
            Get
                Try 
                    Return CType(Me(Me.tableReceive.PINOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PINO' in table 'Receive' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReceive.PINOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ForShade() As String
            Get
                Try 
                    Return CType(Me(Me.tableReceive.ForShadeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ForShade' in table 'Receive' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReceive.ForShadeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PIDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableReceive.PIDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PIDate' in table 'Receive' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReceive.PIDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property UserId() As Long
            Get
                Try 
                    Return CType(Me(Me.tableReceive.UserIdColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UserId' in table 'Receive' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReceive.UserIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ModifiedOn() As Date
            Get
                Try 
                    Return CType(Me(Me.tableReceive.ModifiedOnColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ModifiedOn' in table 'Receive' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReceive.ModifiedOnColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PIId() As Long
            Get
                Try 
                    Return CType(Me(Me.tableReceive.PIIdColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PIId' in table 'Receive' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReceive.PIIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property LCId() As Long
            Get
                Try 
                    Return CType(Me(Me.tableReceive.LCIdColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LCId' in table 'Receive' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReceive.LCIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property IsAlreadyIssued() As Boolean
            Get
                Return CType(Me(Me.tableReceive.IsAlreadyIssuedColumn),Boolean)
            End Get
            Set
                Me(Me.tableReceive.IsAlreadyIssuedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property MasterReceiveId() As Long
            Get
                Try 
                    Return CType(Me(Me.tableReceive.MasterReceiveIdColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MasterReceiveId' in table 'Receive' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReceive.MasterReceiveIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property FinishFabricBookingId() As Long
            Get
                Try 
                    Return CType(Me(Me.tableReceive.FinishFabricBookingIdColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FinishFabricBookingId' in table 'Receive' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReceive.FinishFabricBookingIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property KnittingOrderId() As Long
            Get
                Try 
                    Return CType(Me(Me.tableReceive.KnittingOrderIdColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KnittingOrderId' in table 'Receive' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReceive.KnittingOrderIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property MRRNo() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableReceive.MRRNoColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MRRNo' in table 'Receive' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReceive.MRRNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property YDOrderId() As Long
            Get
                Try 
                    Return CType(Me(Me.tableReceive.YDOrderIdColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'YDOrderId' in table 'Receive' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReceive.YDOrderIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property YDOrderDetailsId() As Long
            Get
                Try 
                    Return CType(Me(Me.tableReceive.YDOrderDetailsIdColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'YDOrderDetailsId' in table 'Receive' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReceive.YDOrderDetailsIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property QtyPerPacket() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableReceive.QtyPerPacketColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QtyPerPacket' in table 'Receive' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReceive.QtyPerPacketColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PacketQuantity() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableReceive.PacketQuantityColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PacketQuantity' in table 'Receive' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReceive.PacketQuantityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property MRRDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableReceive.MRRDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MRRDate' in table 'Receive' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReceive.MRRDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Reference() As String
            Get
                Try 
                    Return CType(Me(Me.tableReceive.ReferenceColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Reference' in table 'Receive' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReceive.ReferenceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property TestStatus() As String
            Get
                Try 
                    Return CType(Me(Me.tableReceive.TestStatusColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TestStatus' in table 'Receive' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReceive.TestStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property TestComments() As String
            Get
                Try 
                    Return CType(Me(Me.tableReceive.TestCommentsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TestComments' in table 'Receive' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReceive.TestCommentsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Price() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableReceive.PriceColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Price' in table 'Receive' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReceive.PriceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property DollarValue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableReceive.DollarValueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DollarValue' in table 'Receive' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReceive.DollarValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ManufactureDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableReceive.ManufactureDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ManufactureDate' in table 'Receive' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReceive.ManufactureDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ExpiryDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableReceive.ExpiryDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ExpiryDate' in table 'Receive' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReceive.ExpiryDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property IsLeftOver() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableReceive.IsLeftOverColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IsLeftOver' in table 'Receive' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReceive.IsLeftOverColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property IsOrganic() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableReceive.IsOrganicColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IsOrganic' in table 'Receive' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReceive.IsOrganicColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property LeftOverQuantity() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableReceive.LeftOverQuantityColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LeftOverQuantity' in table 'Receive' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReceive.LeftOverQuantityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property TransBookingDetailsId() As Long
            Get
                Try 
                    Return CType(Me(Me.tableReceive.TransBookingDetailsIdColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TransBookingDetailsId' in table 'Receive' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReceive.TransBookingDetailsIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property LotNoWOLC() As String
            Get
                Try 
                    Return CType(Me(Me.tableReceive.LotNoWOLCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LotNoWOLC' in table 'Receive' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReceive.LotNoWOLCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ActReceiveQuantity() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableReceive.ActReceiveQuantityColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ActReceiveQuantity' in table 'Receive' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReceive.ActReceiveQuantityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ActUnitId() As Long
            Get
                Try 
                    Return CType(Me(Me.tableReceive.ActUnitIdColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ActUnitId' in table 'Receive' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReceive.ActUnitIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property UnitId() As String
            Get
                Try 
                    Return CType(Me(Me.tableReceive.UnitIdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UnitId' in table 'Receive' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReceive.UnitIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsChallanNoNull() As Boolean
            Return Me.IsNull(Me.tableReceive.ChallanNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetChallanNoNull()
            Me(Me.tableReceive.ChallanNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsReceiveQuantityNull() As Boolean
            Return Me.IsNull(Me.tableReceive.ReceiveQuantityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetReceiveQuantityNull()
            Me(Me.tableReceive.ReceiveQuantityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBranchIdNull() As Boolean
            Return Me.IsNull(Me.tableReceive.BranchIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBranchIdNull()
            Me(Me.tableReceive.BranchIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsRemarksNull() As Boolean
            Return Me.IsNull(Me.tableReceive.RemarksColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetRemarksNull()
            Me(Me.tableReceive.RemarksColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsProgramNoNull() As Boolean
            Return Me.IsNull(Me.tableReceive.ProgramNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetProgramNoNull()
            Me(Me.tableReceive.ProgramNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBookingDetailsIdNull() As Boolean
            Return Me.IsNull(Me.tableReceive.BookingDetailsIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBookingDetailsIdNull()
            Me(Me.tableReceive.BookingDetailsIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsLCNoNull() As Boolean
            Return Me.IsNull(Me.tableReceive.LCNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetLCNoNull()
            Me(Me.tableReceive.LCNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsLCDateNull() As Boolean
            Return Me.IsNull(Me.tableReceive.LCDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetLCDateNull()
            Me(Me.tableReceive.LCDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSupplierIdNull() As Boolean
            Return Me.IsNull(Me.tableReceive.SupplierIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSupplierIdNull()
            Me(Me.tableReceive.SupplierIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsImportedNull() As Boolean
            Return Me.IsNull(Me.tableReceive.ImportedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetImportedNull()
            Me(Me.tableReceive.ImportedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsYarnLotNoNull() As Boolean
            Return Me.IsNull(Me.tableReceive.YarnLotNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetYarnLotNoNull()
            Me(Me.tableReceive.YarnLotNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsAllocationNull() As Boolean
            Return Me.IsNull(Me.tableReceive.AllocationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetAllocationNull()
            Me(Me.tableReceive.AllocationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBrandIdNull() As Boolean
            Return Me.IsNull(Me.tableReceive.BrandIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBrandIdNull()
            Me(Me.tableReceive.BrandIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsRequisitionIdNull() As Boolean
            Return Me.IsNull(Me.tableReceive.RequisitionIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetRequisitionIdNull()
            Me(Me.tableReceive.RequisitionIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCompanyIdNull() As Boolean
            Return Me.IsNull(Me.tableReceive.CompanyIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCompanyIdNull()
            Me(Me.tableReceive.CompanyIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsLocationIdNull() As Boolean
            Return Me.IsNull(Me.tableReceive.LocationIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetLocationIdNull()
            Me(Me.tableReceive.LocationIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPINONull() As Boolean
            Return Me.IsNull(Me.tableReceive.PINOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPINONull()
            Me(Me.tableReceive.PINOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsForShadeNull() As Boolean
            Return Me.IsNull(Me.tableReceive.ForShadeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetForShadeNull()
            Me(Me.tableReceive.ForShadeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPIDateNull() As Boolean
            Return Me.IsNull(Me.tableReceive.PIDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPIDateNull()
            Me(Me.tableReceive.PIDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsUserIdNull() As Boolean
            Return Me.IsNull(Me.tableReceive.UserIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetUserIdNull()
            Me(Me.tableReceive.UserIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsModifiedOnNull() As Boolean
            Return Me.IsNull(Me.tableReceive.ModifiedOnColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetModifiedOnNull()
            Me(Me.tableReceive.ModifiedOnColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPIIdNull() As Boolean
            Return Me.IsNull(Me.tableReceive.PIIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPIIdNull()
            Me(Me.tableReceive.PIIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsLCIdNull() As Boolean
            Return Me.IsNull(Me.tableReceive.LCIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetLCIdNull()
            Me(Me.tableReceive.LCIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsMasterReceiveIdNull() As Boolean
            Return Me.IsNull(Me.tableReceive.MasterReceiveIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetMasterReceiveIdNull()
            Me(Me.tableReceive.MasterReceiveIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsFinishFabricBookingIdNull() As Boolean
            Return Me.IsNull(Me.tableReceive.FinishFabricBookingIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetFinishFabricBookingIdNull()
            Me(Me.tableReceive.FinishFabricBookingIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsKnittingOrderIdNull() As Boolean
            Return Me.IsNull(Me.tableReceive.KnittingOrderIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetKnittingOrderIdNull()
            Me(Me.tableReceive.KnittingOrderIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsMRRNoNull() As Boolean
            Return Me.IsNull(Me.tableReceive.MRRNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetMRRNoNull()
            Me(Me.tableReceive.MRRNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsYDOrderIdNull() As Boolean
            Return Me.IsNull(Me.tableReceive.YDOrderIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetYDOrderIdNull()
            Me(Me.tableReceive.YDOrderIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsYDOrderDetailsIdNull() As Boolean
            Return Me.IsNull(Me.tableReceive.YDOrderDetailsIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetYDOrderDetailsIdNull()
            Me(Me.tableReceive.YDOrderDetailsIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsQtyPerPacketNull() As Boolean
            Return Me.IsNull(Me.tableReceive.QtyPerPacketColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetQtyPerPacketNull()
            Me(Me.tableReceive.QtyPerPacketColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPacketQuantityNull() As Boolean
            Return Me.IsNull(Me.tableReceive.PacketQuantityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPacketQuantityNull()
            Me(Me.tableReceive.PacketQuantityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsMRRDateNull() As Boolean
            Return Me.IsNull(Me.tableReceive.MRRDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetMRRDateNull()
            Me(Me.tableReceive.MRRDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsReferenceNull() As Boolean
            Return Me.IsNull(Me.tableReceive.ReferenceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetReferenceNull()
            Me(Me.tableReceive.ReferenceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTestStatusNull() As Boolean
            Return Me.IsNull(Me.tableReceive.TestStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTestStatusNull()
            Me(Me.tableReceive.TestStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTestCommentsNull() As Boolean
            Return Me.IsNull(Me.tableReceive.TestCommentsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTestCommentsNull()
            Me(Me.tableReceive.TestCommentsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPriceNull() As Boolean
            Return Me.IsNull(Me.tableReceive.PriceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPriceNull()
            Me(Me.tableReceive.PriceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsDollarValueNull() As Boolean
            Return Me.IsNull(Me.tableReceive.DollarValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetDollarValueNull()
            Me(Me.tableReceive.DollarValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsManufactureDateNull() As Boolean
            Return Me.IsNull(Me.tableReceive.ManufactureDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetManufactureDateNull()
            Me(Me.tableReceive.ManufactureDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsExpiryDateNull() As Boolean
            Return Me.IsNull(Me.tableReceive.ExpiryDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetExpiryDateNull()
            Me(Me.tableReceive.ExpiryDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsIsLeftOverNull() As Boolean
            Return Me.IsNull(Me.tableReceive.IsLeftOverColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetIsLeftOverNull()
            Me(Me.tableReceive.IsLeftOverColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsIsOrganicNull() As Boolean
            Return Me.IsNull(Me.tableReceive.IsOrganicColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetIsOrganicNull()
            Me(Me.tableReceive.IsOrganicColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsLeftOverQuantityNull() As Boolean
            Return Me.IsNull(Me.tableReceive.LeftOverQuantityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetLeftOverQuantityNull()
            Me(Me.tableReceive.LeftOverQuantityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTransBookingDetailsIdNull() As Boolean
            Return Me.IsNull(Me.tableReceive.TransBookingDetailsIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTransBookingDetailsIdNull()
            Me(Me.tableReceive.TransBookingDetailsIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsLotNoWOLCNull() As Boolean
            Return Me.IsNull(Me.tableReceive.LotNoWOLCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetLotNoWOLCNull()
            Me(Me.tableReceive.LotNoWOLCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsActReceiveQuantityNull() As Boolean
            Return Me.IsNull(Me.tableReceive.ActReceiveQuantityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetActReceiveQuantityNull()
            Me(Me.tableReceive.ActReceiveQuantityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsActUnitIdNull() As Boolean
            Return Me.IsNull(Me.tableReceive.ActUnitIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetActUnitIdNull()
            Me(Me.tableReceive.ActUnitIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsUnitIdNull() As Boolean
            Return Me.IsNull(Me.tableReceive.UnitIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetUnitIdNull()
            Me(Me.tableReceive.UnitIdColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class TotalReceiveQuantityRow
        Inherits Global.System.Data.DataRow
        
        Private tableTotalReceiveQuantity As TotalReceiveQuantityDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTotalReceiveQuantity = CType(Me.Table,TotalReceiveQuantityDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property TotalReceiveQuantity() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTotalReceiveQuantity.TotalReceiveQuantityColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TotalReceiveQuantity' in table 'TotalReceiveQuantity' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableTotalReceiveQuantity.TotalReceiveQuantityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BookingDetailsId() As Long
            Get
                Try 
                    Return CType(Me(Me.tableTotalReceiveQuantity.BookingDetailsIdColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BookingDetailsId' in table 'TotalReceiveQuantity' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableTotalReceiveQuantity.BookingDetailsIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTotalReceiveQuantityNull() As Boolean
            Return Me.IsNull(Me.tableTotalReceiveQuantity.TotalReceiveQuantityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTotalReceiveQuantityNull()
            Me(Me.tableTotalReceiveQuantity.TotalReceiveQuantityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBookingDetailsIdNull() As Boolean
            Return Me.IsNull(Me.tableTotalReceiveQuantity.BookingDetailsIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBookingDetailsIdNull()
            Me(Me.tableTotalReceiveQuantity.BookingDetailsIdColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class MRNOLookUpRow
        Inherits Global.System.Data.DataRow
        
        Private tableMRNOLookUp As MRNOLookUpDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableMRNOLookUp = CType(Me.Table,MRNOLookUpDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ReceiveId() As Long
            Get
                Return CType(Me(Me.tableMRNOLookUp.ReceiveIdColumn),Long)
            End Get
            Set
                Me(Me.tableMRNOLookUp.ReceiveIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ReceiveDate() As Date
            Get
                Return CType(Me(Me.tableMRNOLookUp.ReceiveDateColumn),Date)
            End Get
            Set
                Me(Me.tableMRNOLookUp.ReceiveDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ChallanNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableMRNOLookUp.ChallanNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ChallanNo' in table 'MRNOLookUp' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRNOLookUp.ChallanNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property DepartmentId() As Long
            Get
                Return CType(Me(Me.tableMRNOLookUp.DepartmentIdColumn),Long)
            End Get
            Set
                Me(Me.tableMRNOLookUp.DepartmentIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ItemId() As Long
            Get
                Return CType(Me(Me.tableMRNOLookUp.ItemIdColumn),Long)
            End Get
            Set
                Me(Me.tableMRNOLookUp.ItemIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Details() As String
            Get
                Try 
                    Return CType(Me(Me.tableMRNOLookUp.DetailsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Details' in table 'MRNOLookUp' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRNOLookUp.DetailsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property IsAlreadyIssued() As Boolean
            Get
                Return CType(Me(Me.tableMRNOLookUp.IsAlreadyIssuedColumn),Boolean)
            End Get
            Set
                Me(Me.tableMRNOLookUp.IsAlreadyIssuedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsChallanNoNull() As Boolean
            Return Me.IsNull(Me.tableMRNOLookUp.ChallanNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetChallanNoNull()
            Me(Me.tableMRNOLookUp.ChallanNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsDetailsNull() As Boolean
            Return Me.IsNull(Me.tableMRNOLookUp.DetailsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetDetailsNull()
            Me(Me.tableMRNOLookUp.DetailsColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ReceivedMRNoLookupRow
        Inherits Global.System.Data.DataRow
        
        Private tableReceivedMRNoLookup As ReceivedMRNoLookupDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableReceivedMRNoLookup = CType(Me.Table,ReceivedMRNoLookupDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property MRNo() As Long
            Get
                Try 
                    Return CType(Me(Me.tableReceivedMRNoLookup.MRNoColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MRNo' in table 'ReceivedMRNoLookup' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReceivedMRNoLookup.MRNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ChallanNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableReceivedMRNoLookup.ChallanNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ChallanNo' in table 'ReceivedMRNoLookup' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReceivedMRNoLookup.ChallanNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ReceiveDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableReceivedMRNoLookup.ReceiveDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ReceiveDate' in table 'ReceivedMRNoLookup' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReceivedMRNoLookup.ReceiveDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ItemId() As Long
            Get
                Return CType(Me(Me.tableReceivedMRNoLookup.ItemIdColumn),Long)
            End Get
            Set
                Me(Me.tableReceivedMRNoLookup.ItemIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property IssueReceiveTypeId() As Long
            Get
                Return CType(Me(Me.tableReceivedMRNoLookup.IssueReceiveTypeIdColumn),Long)
            End Get
            Set
                Me(Me.tableReceivedMRNoLookup.IssueReceiveTypeIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property IsAlreadyIssued() As Boolean
            Get
                Return CType(Me(Me.tableReceivedMRNoLookup.IsAlreadyIssuedColumn),Boolean)
            End Get
            Set
                Me(Me.tableReceivedMRNoLookup.IsAlreadyIssuedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsMRNoNull() As Boolean
            Return Me.IsNull(Me.tableReceivedMRNoLookup.MRNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetMRNoNull()
            Me(Me.tableReceivedMRNoLookup.MRNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsChallanNoNull() As Boolean
            Return Me.IsNull(Me.tableReceivedMRNoLookup.ChallanNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetChallanNoNull()
            Me(Me.tableReceivedMRNoLookup.ChallanNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsReceiveDateNull() As Boolean
            Return Me.IsNull(Me.tableReceivedMRNoLookup.ReceiveDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetReceiveDateNull()
            Me(Me.tableReceivedMRNoLookup.ReceiveDateColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class ReceiveRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ReceiveRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As ReceiveRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As ReceiveRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class TotalReceiveQuantityRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TotalReceiveQuantityRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As TotalReceiveQuantityRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As TotalReceiveQuantityRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class MRNOLookUpRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As MRNOLookUpRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As MRNOLookUpRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As MRNOLookUpRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class ReceivedMRNoLookupRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ReceivedMRNoLookupRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As ReceivedMRNoLookupRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As ReceivedMRNoLookupRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace ReceiveDataSetTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class ReceiveTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Receive"
            tableMapping.ColumnMappings.Add("ReceiveId", "ReceiveId")
            tableMapping.ColumnMappings.Add("ReceiveDate", "ReceiveDate")
            tableMapping.ColumnMappings.Add("ChallanNo", "ChallanNo")
            tableMapping.ColumnMappings.Add("ReceiveQuantity", "ReceiveQuantity")
            tableMapping.ColumnMappings.Add("BranchId", "BranchId")
            tableMapping.ColumnMappings.Add("Remarks", "Remarks")
            tableMapping.ColumnMappings.Add("DepartmentId", "DepartmentId")
            tableMapping.ColumnMappings.Add("ProgramNo", "ProgramNo")
            tableMapping.ColumnMappings.Add("BookingDetailsId", "BookingDetailsId")
            tableMapping.ColumnMappings.Add("LCNo", "LCNo")
            tableMapping.ColumnMappings.Add("LCDate", "LCDate")
            tableMapping.ColumnMappings.Add("SupplierId", "SupplierId")
            tableMapping.ColumnMappings.Add("Imported", "Imported")
            tableMapping.ColumnMappings.Add("IssueReceiveTypeId", "IssueReceiveTypeId")
            tableMapping.ColumnMappings.Add("ItemId", "ItemId")
            tableMapping.ColumnMappings.Add("YarnLotNo", "YarnLotNo")
            tableMapping.ColumnMappings.Add("Allocation", "Allocation")
            tableMapping.ColumnMappings.Add("BrandId", "BrandId")
            tableMapping.ColumnMappings.Add("RequisitionId", "RequisitionId")
            tableMapping.ColumnMappings.Add("CompanyId", "CompanyId")
            tableMapping.ColumnMappings.Add("LocationId", "LocationId")
            tableMapping.ColumnMappings.Add("PINO", "PINO")
            tableMapping.ColumnMappings.Add("ForShade", "ForShade")
            tableMapping.ColumnMappings.Add("PIDate", "PIDate")
            tableMapping.ColumnMappings.Add("UserId", "UserId")
            tableMapping.ColumnMappings.Add("ModifiedOn", "ModifiedOn")
            tableMapping.ColumnMappings.Add("PIId", "PIId")
            tableMapping.ColumnMappings.Add("LCId", "LCId")
            tableMapping.ColumnMappings.Add("IsAlreadyIssued", "IsAlreadyIssued")
            tableMapping.ColumnMappings.Add("MasterReceiveId", "MasterReceiveId")
            tableMapping.ColumnMappings.Add("FinishFabricBookingId", "FinishFabricBookingId")
            tableMapping.ColumnMappings.Add("KnittingOrderId", "KnittingOrderId")
            tableMapping.ColumnMappings.Add("MRRNo", "MRRNo")
            tableMapping.ColumnMappings.Add("YDOrderId", "YDOrderId")
            tableMapping.ColumnMappings.Add("YDOrderDetailsId", "YDOrderDetailsId")
            tableMapping.ColumnMappings.Add("QtyPerPacket", "QtyPerPacket")
            tableMapping.ColumnMappings.Add("PacketQuantity", "PacketQuantity")
            tableMapping.ColumnMappings.Add("MRRDate", "MRRDate")
            tableMapping.ColumnMappings.Add("Reference", "Reference")
            tableMapping.ColumnMappings.Add("TestStatus", "TestStatus")
            tableMapping.ColumnMappings.Add("TestComments", "TestComments")
            tableMapping.ColumnMappings.Add("Price", "Price")
            tableMapping.ColumnMappings.Add("DollarValue", "DollarValue")
            tableMapping.ColumnMappings.Add("ManufactureDate", "ManufactureDate")
            tableMapping.ColumnMappings.Add("ExpiryDate", "ExpiryDate")
            tableMapping.ColumnMappings.Add("IsLeftOver", "IsLeftOver")
            tableMapping.ColumnMappings.Add("IsOrganic", "IsOrganic")
            tableMapping.ColumnMappings.Add("LeftOverQuantity", "LeftOverQuantity")
            tableMapping.ColumnMappings.Add("TransBookingDetailsId", "TransBookingDetailsId")
            tableMapping.ColumnMappings.Add("LotNoWOLC", "LotNoWOLC")
            tableMapping.ColumnMappings.Add("ActReceiveQuantity", "ActReceiveQuantity")
            tableMapping.ColumnMappings.Add("ActUnitId", "ActUnitId")
            tableMapping.ColumnMappings.Add("UnitId", "UnitId")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [Receive] WHERE (([ReceiveId] = @Original_ReceiveId) AND ([ReceiveDat"& _ 
                "e] = @Original_ReceiveDate) AND ((@IsNull_ChallanNo = 1 AND [ChallanNo] IS NULL)"& _ 
                " OR ([ChallanNo] = @Original_ChallanNo)) AND ((@IsNull_ReceiveQuantity = 1 AND ["& _ 
                "ReceiveQuantity] IS NULL) OR ([ReceiveQuantity] = @Original_ReceiveQuantity)) AN"& _ 
                "D ((@IsNull_BranchId = 1 AND [BranchId] IS NULL) OR ([BranchId] = @Original_Bran"& _ 
                "chId)) AND ((@IsNull_Remarks = 1 AND [Remarks] IS NULL) OR ([Remarks] = @Origina"& _ 
                "l_Remarks)) AND ([DepartmentId] = @Original_DepartmentId) AND ((@IsNull_ProgramN"& _ 
                "o = 1 AND [ProgramNo] IS NULL) OR ([ProgramNo] = @Original_ProgramNo)) AND ((@Is"& _ 
                "Null_BookingDetailsId = 1 AND [BookingDetailsId] IS NULL) OR ([BookingDetailsId]"& _ 
                " = @Original_BookingDetailsId)) AND ((@IsNull_LCNo = 1 AND [LCNo] IS NULL) OR (["& _ 
                "LCNo] = @Original_LCNo)) AND ((@IsNull_LCDate = 1 AND [LCDate] IS NULL) OR ([LCD"& _ 
                "ate] = @Original_LCDate)) AND ((@IsNull_SupplierId = 1 AND [SupplierId] IS NULL)"& _ 
                " OR ([SupplierId] = @Original_SupplierId)) AND ((@IsNull_Imported = 1 AND [Impor"& _ 
                "ted] IS NULL) OR ([Imported] = @Original_Imported)) AND ([IssueReceiveTypeId] = "& _ 
                "@Original_IssueReceiveTypeId) AND ([ItemId] = @Original_ItemId) AND ((@IsNull_Ya"& _ 
                "rnLotNo = 1 AND [YarnLotNo] IS NULL) OR ([YarnLotNo] = @Original_YarnLotNo)) AND"& _ 
                " ((@IsNull_Allocation = 1 AND [Allocation] IS NULL) OR ([Allocation] = @Original"& _ 
                "_Allocation)) AND ((@IsNull_BrandId = 1 AND [BrandId] IS NULL) OR ([BrandId] = @"& _ 
                "Original_BrandId)) AND ((@IsNull_RequisitionId = 1 AND [RequisitionId] IS NULL) "& _ 
                "OR ([RequisitionId] = @Original_RequisitionId)) AND ((@IsNull_CompanyId = 1 AND "& _ 
                "[CompanyId] IS NULL) OR ([CompanyId] = @Original_CompanyId)) AND ((@IsNull_Locat"& _ 
                "ionId = 1 AND [LocationId] IS NULL) OR ([LocationId] = @Original_LocationId)) AN"& _ 
                "D ((@IsNull_PINO = 1 AND [PINO] IS NULL) OR ([PINO] = @Original_PINO)) AND ((@Is"& _ 
                "Null_ForShade = 1 AND [ForShade] IS NULL) OR ([ForShade] = @Original_ForShade)) "& _ 
                "AND ((@IsNull_PIDate = 1 AND [PIDate] IS NULL) OR ([PIDate] = @Original_PIDate))"& _ 
                " AND ((@IsNull_UserId = 1 AND [UserId] IS NULL) OR ([UserId] = @Original_UserId)"& _ 
                ") AND ((@IsNull_ModifiedOn = 1 AND [ModifiedOn] IS NULL) OR ([ModifiedOn] = @Ori"& _ 
                "ginal_ModifiedOn)) AND ((@IsNull_PIId = 1 AND [PIId] IS NULL) OR ([PIId] = @Orig"& _ 
                "inal_PIId)) AND ((@IsNull_LCId = 1 AND [LCId] IS NULL) OR ([LCId] = @Original_LC"& _ 
                "Id)) AND ([IsAlreadyIssued] = @Original_IsAlreadyIssued) AND ((@IsNull_MasterRec"& _ 
                "eiveId = 1 AND [MasterReceiveId] IS NULL) OR ([MasterReceiveId] = @Original_Mast"& _ 
                "erReceiveId)) AND ((@IsNull_FinishFabricBookingId = 1 AND [FinishFabricBookingId"& _ 
                "] IS NULL) OR ([FinishFabricBookingId] = @Original_FinishFabricBookingId)) AND ("& _ 
                "(@IsNull_KnittingOrderId = 1 AND [KnittingOrderId] IS NULL) OR ([KnittingOrderId"& _ 
                "] = @Original_KnittingOrderId)) AND ((@IsNull_MRRNo = 1 AND [MRRNo] IS NULL) OR "& _ 
                "([MRRNo] = @Original_MRRNo)) AND ((@IsNull_YDOrderId = 1 AND [YDOrderId] IS NULL"& _ 
                ") OR ([YDOrderId] = @Original_YDOrderId)) AND ((@IsNull_YDOrderDetailsId = 1 AND"& _ 
                " [YDOrderDetailsId] IS NULL) OR ([YDOrderDetailsId] = @Original_YDOrderDetailsId"& _ 
                ")) AND ((@IsNull_QtyPerPacket = 1 AND [QtyPerPacket] IS NULL) OR ([QtyPerPacket]"& _ 
                " = @Original_QtyPerPacket)) AND ((@IsNull_PacketQuantity = 1 AND [PacketQuantity"& _ 
                "] IS NULL) OR ([PacketQuantity] = @Original_PacketQuantity)) AND ((@IsNull_MRRDa"& _ 
                "te = 1 AND [MRRDate] IS NULL) OR ([MRRDate] = @Original_MRRDate)) AND ((@IsNull_"& _ 
                "Reference = 1 AND [Reference] IS NULL) OR ([Reference] = @Original_Reference)) A"& _ 
                "ND ((@IsNull_TestStatus = 1 AND [TestStatus] IS NULL) OR ([TestStatus] = @Origin"& _ 
                "al_TestStatus)) AND ((@IsNull_TestComments = 1 AND [TestComments] IS NULL) OR (["& _ 
                "TestComments] = @Original_TestComments)) AND ((@IsNull_Price = 1 AND [Price] IS "& _ 
                "NULL) OR ([Price] = @Original_Price)) AND ((@IsNull_DollarValue = 1 AND [DollarV"& _ 
                "alue] IS NULL) OR ([DollarValue] = @Original_DollarValue)) AND ((@IsNull_Manufac"& _ 
                "tureDate = 1 AND [ManufactureDate] IS NULL) OR ([ManufactureDate] = @Original_Ma"& _ 
                "nufactureDate)) AND ((@IsNull_ExpiryDate = 1 AND [ExpiryDate] IS NULL) OR ([Expi"& _ 
                "ryDate] = @Original_ExpiryDate)) AND ((@IsNull_IsLeftOver = 1 AND [IsLeftOver] I"& _ 
                "S NULL) OR ([IsLeftOver] = @Original_IsLeftOver)) AND ((@IsNull_IsOrganic = 1 AN"& _ 
                "D [IsOrganic] IS NULL) OR ([IsOrganic] = @Original_IsOrganic)) AND ((@IsNull_Lef"& _ 
                "tOverQuantity = 1 AND [LeftOverQuantity] IS NULL) OR ([LeftOverQuantity] = @Orig"& _ 
                "inal_LeftOverQuantity)) AND ((@IsNull_TransBookingDetailsId = 1 AND [TransBookin"& _ 
                "gDetailsId] IS NULL) OR ([TransBookingDetailsId] = @Original_TransBookingDetails"& _ 
                "Id)) AND ((@IsNull_LotNoWOLC = 1 AND [LotNoWOLC] IS NULL) OR ([LotNoWOLC] = @Ori"& _ 
                "ginal_LotNoWOLC)) AND ((@IsNull_ActReceiveQuantity = 1 AND [ActReceiveQuantity] "& _ 
                "IS NULL) OR ([ActReceiveQuantity] = @Original_ActReceiveQuantity)) AND ((@IsNull"& _ 
                "_ActUnitId = 1 AND [ActUnitId] IS NULL) OR ([ActUnitId] = @Original_ActUnitId)) "& _ 
                "AND ((@IsNull_UnitId = 1 AND [UnitId] IS NULL) OR ([UnitId] = @Original_UnitId))"& _ 
                ")"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ReceiveId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceiveId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ReceiveDate", Global.System.Data.SqlDbType.SmallDateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceiveDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ChallanNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChallanNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ChallanNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChallanNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ReceiveQuantity", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceiveQuantity", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ReceiveQuantity", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 3, "ReceiveQuantity", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BranchId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BranchId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BranchId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BranchId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Remarks", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remarks", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Remarks", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remarks", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DepartmentId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DepartmentId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ProgramNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProgramNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ProgramNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProgramNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BookingDetailsId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BookingDetailsId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BookingDetailsId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BookingDetailsId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LCNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LCNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LCNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LCNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LCDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LCDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LCDate", Global.System.Data.SqlDbType.SmallDateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LCDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SupplierId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SupplierId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SupplierId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SupplierId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Imported", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Imported", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Imported", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Imported", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IssueReceiveTypeId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IssueReceiveTypeId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ItemId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ItemId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_YarnLotNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "YarnLotNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_YarnLotNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "YarnLotNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Allocation", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Allocation", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Allocation", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Allocation", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BrandId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BrandId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BrandId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BrandId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RequisitionId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequisitionId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RequisitionId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequisitionId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CompanyId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompanyId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CompanyId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompanyId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LocationId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LocationId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LocationId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LocationId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PINO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PINO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PINO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PINO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ForShade", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ForShade", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ForShade", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ForShade", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PIDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PIDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PIDate", Global.System.Data.SqlDbType.SmallDateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PIDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_UserId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UserId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UserId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UserId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ModifiedOn", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ModifiedOn", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ModifiedOn", Global.System.Data.SqlDbType.SmallDateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ModifiedOn", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PIId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PIId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PIId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PIId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LCId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LCId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LCId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LCId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IsAlreadyIssued", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsAlreadyIssued", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MasterReceiveId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MasterReceiveId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MasterReceiveId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MasterReceiveId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FinishFabricBookingId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FinishFabricBookingId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FinishFabricBookingId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FinishFabricBookingId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_KnittingOrderId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KnittingOrderId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_KnittingOrderId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KnittingOrderId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MRRNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MRRNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MRRNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MRRNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_YDOrderId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "YDOrderId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_YDOrderId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "YDOrderId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_YDOrderDetailsId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "YDOrderDetailsId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_YDOrderDetailsId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "YDOrderDetailsId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_QtyPerPacket", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QtyPerPacket", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_QtyPerPacket", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "QtyPerPacket", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PacketQuantity", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PacketQuantity", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PacketQuantity", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "PacketQuantity", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MRRDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MRRDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MRRDate", Global.System.Data.SqlDbType.SmallDateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MRRDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Reference", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Reference", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Reference", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Reference", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TestStatus", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TestStatus", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TestStatus", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TestStatus", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TestComments", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TestComments", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TestComments", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TestComments", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Price", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Price", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Price", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 4, "Price", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DollarValue", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DollarValue", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DollarValue", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "DollarValue", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ManufactureDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ManufactureDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ManufactureDate", Global.System.Data.SqlDbType.SmallDateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ManufactureDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ExpiryDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ExpiryDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ExpiryDate", Global.System.Data.SqlDbType.SmallDateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ExpiryDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IsLeftOver", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsLeftOver", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IsLeftOver", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsLeftOver", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IsOrganic", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsOrganic", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IsOrganic", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsOrganic", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LeftOverQuantity", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LeftOverQuantity", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LeftOverQuantity", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "LeftOverQuantity", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TransBookingDetailsId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TransBookingDetailsId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TransBookingDetailsId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TransBookingDetailsId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LotNoWOLC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotNoWOLC", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LotNoWOLC", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotNoWOLC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ActReceiveQuantity", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ActReceiveQuantity", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ActReceiveQuantity", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 3, "ActReceiveQuantity", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ActUnitId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ActUnitId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ActUnitId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ActUnitId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_UnitId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UnitId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UnitId", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UnitId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [Receive] ([ReceiveDate], [ChallanNo], [ReceiveQuantity], [BranchId],"& _ 
                " [Remarks], [DepartmentId], [ProgramNo], [BookingDetailsId], [LCNo], [LCDate], ["& _ 
                "SupplierId], [Imported], [IssueReceiveTypeId], [ItemId], [YarnLotNo], [Allocatio"& _ 
                "n], [BrandId], [RequisitionId], [CompanyId], [LocationId], [PINO], [ForShade], ["& _ 
                "PIDate], [UserId], [ModifiedOn], [PIId], [LCId], [IsAlreadyIssued], [MasterRecei"& _ 
                "veId], [FinishFabricBookingId], [KnittingOrderId], [MRRNo], [YDOrderId], [YDOrde"& _ 
                "rDetailsId], [QtyPerPacket], [PacketQuantity], [MRRDate], [Reference], [TestStat"& _ 
                "us], [TestComments], [Price], [DollarValue], [ManufactureDate], [ExpiryDate], [I"& _ 
                "sLeftOver], [IsOrganic], [LeftOverQuantity], [TransBookingDetailsId], [LotNoWOLC"& _ 
                "], [ActReceiveQuantity], [ActUnitId], [UnitId]) VALUES (@ReceiveDate, @ChallanNo"& _ 
                ", @ReceiveQuantity, @BranchId, @Remarks, @DepartmentId, @ProgramNo, @BookingDeta"& _ 
                "ilsId, @LCNo, @LCDate, @SupplierId, @Imported, @IssueReceiveTypeId, @ItemId, @Ya"& _ 
                "rnLotNo, @Allocation, @BrandId, @RequisitionId, @CompanyId, @LocationId, @PINO, "& _ 
                "@ForShade, @PIDate, @UserId, @ModifiedOn, @PIId, @LCId, @IsAlreadyIssued, @Maste"& _ 
                "rReceiveId, @FinishFabricBookingId, @KnittingOrderId, @MRRNo, @YDOrderId, @YDOrd"& _ 
                "erDetailsId, @QtyPerPacket, @PacketQuantity, @MRRDate, @Reference, @TestStatus, "& _ 
                "@TestComments, @Price, @DollarValue, @ManufactureDate, @ExpiryDate, @IsLeftOver,"& _ 
                " @IsOrganic, @LeftOverQuantity, @TransBookingDetailsId, @LotNoWOLC, @ActReceiveQ"& _ 
                "uantity, @ActUnitId, @UnitId);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ReceiveId, ReceiveDate, ChallanNo, Receiv"& _ 
                "eQuantity, BranchId, Remarks, DepartmentId, ProgramNo, BookingDetailsId, LCNo, L"& _ 
                "CDate, SupplierId, Imported, IssueReceiveTypeId, ItemId, YarnLotNo, Allocation, "& _ 
                "BrandId, RequisitionId, CompanyId, LocationId, PINO, ForShade, PIDate, UserId, M"& _ 
                "odifiedOn, PIId, LCId, IsAlreadyIssued, MasterReceiveId, FinishFabricBookingId, "& _ 
                "KnittingOrderId, MRRNo, YDOrderId, YDOrderDetailsId, QtyPerPacket, PacketQuantit"& _ 
                "y, MRRDate, Reference, TestStatus, TestComments, Price, DollarValue, Manufacture"& _ 
                "Date, ExpiryDate, IsLeftOver, IsOrganic, LeftOverQuantity, TransBookingDetailsId"& _ 
                ", LotNoWOLC, ActReceiveQuantity, ActUnitId, UnitId FROM Receive WHERE (ReceiveId"& _ 
                " = SCOPE_IDENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ReceiveDate", Global.System.Data.SqlDbType.SmallDateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceiveDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ChallanNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChallanNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ReceiveQuantity", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 3, "ReceiveQuantity", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BranchId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BranchId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Remarks", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remarks", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DepartmentId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DepartmentId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ProgramNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProgramNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BookingDetailsId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BookingDetailsId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LCNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LCNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LCDate", Global.System.Data.SqlDbType.SmallDateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LCDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SupplierId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SupplierId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Imported", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Imported", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IssueReceiveTypeId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IssueReceiveTypeId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ItemId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ItemId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@YarnLotNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "YarnLotNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Allocation", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Allocation", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BrandId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BrandId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RequisitionId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequisitionId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CompanyId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompanyId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LocationId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LocationId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PINO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PINO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ForShade", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ForShade", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PIDate", Global.System.Data.SqlDbType.SmallDateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PIDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UserId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UserId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ModifiedOn", Global.System.Data.SqlDbType.SmallDateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ModifiedOn", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PIId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PIId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LCId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LCId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsAlreadyIssued", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsAlreadyIssued", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MasterReceiveId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MasterReceiveId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FinishFabricBookingId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FinishFabricBookingId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KnittingOrderId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KnittingOrderId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MRRNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MRRNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@YDOrderId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "YDOrderId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@YDOrderDetailsId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "YDOrderDetailsId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@QtyPerPacket", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "QtyPerPacket", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PacketQuantity", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "PacketQuantity", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MRRDate", Global.System.Data.SqlDbType.SmallDateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MRRDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Reference", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Reference", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TestStatus", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TestStatus", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TestComments", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TestComments", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Price", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 4, "Price", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DollarValue", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "DollarValue", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ManufactureDate", Global.System.Data.SqlDbType.SmallDateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ManufactureDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ExpiryDate", Global.System.Data.SqlDbType.SmallDateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ExpiryDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsLeftOver", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsLeftOver", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsOrganic", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsOrganic", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LeftOverQuantity", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "LeftOverQuantity", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TransBookingDetailsId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TransBookingDetailsId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LotNoWOLC", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotNoWOLC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ActReceiveQuantity", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 3, "ActReceiveQuantity", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ActUnitId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ActUnitId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UnitId", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UnitId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [Receive] SET [ReceiveDate] = @ReceiveDate, [ChallanNo] = @ChallanNo, [Rec"& _ 
                "eiveQuantity] = @ReceiveQuantity, [BranchId] = @BranchId, [Remarks] = @Remarks, "& _ 
                "[DepartmentId] = @DepartmentId, [ProgramNo] = @ProgramNo, [BookingDetailsId] = @"& _ 
                "BookingDetailsId, [LCNo] = @LCNo, [LCDate] = @LCDate, [SupplierId] = @SupplierId"& _ 
                ", [Imported] = @Imported, [IssueReceiveTypeId] = @IssueReceiveTypeId, [ItemId] ="& _ 
                " @ItemId, [YarnLotNo] = @YarnLotNo, [Allocation] = @Allocation, [BrandId] = @Bra"& _ 
                "ndId, [RequisitionId] = @RequisitionId, [CompanyId] = @CompanyId, [LocationId] ="& _ 
                " @LocationId, [PINO] = @PINO, [ForShade] = @ForShade, [PIDate] = @PIDate, [UserI"& _ 
                "d] = @UserId, [ModifiedOn] = @ModifiedOn, [PIId] = @PIId, [LCId] = @LCId, [IsAlr"& _ 
                "eadyIssued] = @IsAlreadyIssued, [MasterReceiveId] = @MasterReceiveId, [FinishFab"& _ 
                "ricBookingId] = @FinishFabricBookingId, [KnittingOrderId] = @KnittingOrderId, [M"& _ 
                "RRNo] = @MRRNo, [YDOrderId] = @YDOrderId, [YDOrderDetailsId] = @YDOrderDetailsId"& _ 
                ", [QtyPerPacket] = @QtyPerPacket, [PacketQuantity] = @PacketQuantity, [MRRDate] "& _ 
                "= @MRRDate, [Reference] = @Reference, [TestStatus] = @TestStatus, [TestComments]"& _ 
                " = @TestComments, [Price] = @Price, [DollarValue] = @DollarValue, [ManufactureDa"& _ 
                "te] = @ManufactureDate, [ExpiryDate] = @ExpiryDate, [IsLeftOver] = @IsLeftOver, "& _ 
                "[IsOrganic] = @IsOrganic, [LeftOverQuantity] = @LeftOverQuantity, [TransBookingD"& _ 
                "etailsId] = @TransBookingDetailsId, [LotNoWOLC] = @LotNoWOLC, [ActReceiveQuantit"& _ 
                "y] = @ActReceiveQuantity, [ActUnitId] = @ActUnitId, [UnitId] = @UnitId WHERE ((["& _ 
                "ReceiveId] = @Original_ReceiveId) AND ([ReceiveDate] = @Original_ReceiveDate) AN"& _ 
                "D ((@IsNull_ChallanNo = 1 AND [ChallanNo] IS NULL) OR ([ChallanNo] = @Original_C"& _ 
                "hallanNo)) AND ((@IsNull_ReceiveQuantity = 1 AND [ReceiveQuantity] IS NULL) OR ("& _ 
                "[ReceiveQuantity] = @Original_ReceiveQuantity)) AND ((@IsNull_BranchId = 1 AND ["& _ 
                "BranchId] IS NULL) OR ([BranchId] = @Original_BranchId)) AND ((@IsNull_Remarks ="& _ 
                " 1 AND [Remarks] IS NULL) OR ([Remarks] = @Original_Remarks)) AND ([DepartmentId"& _ 
                "] = @Original_DepartmentId) AND ((@IsNull_ProgramNo = 1 AND [ProgramNo] IS NULL)"& _ 
                " OR ([ProgramNo] = @Original_ProgramNo)) AND ((@IsNull_BookingDetailsId = 1 AND "& _ 
                "[BookingDetailsId] IS NULL) OR ([BookingDetailsId] = @Original_BookingDetailsId)"& _ 
                ") AND ((@IsNull_LCNo = 1 AND [LCNo] IS NULL) OR ([LCNo] = @Original_LCNo)) AND ("& _ 
                "(@IsNull_LCDate = 1 AND [LCDate] IS NULL) OR ([LCDate] = @Original_LCDate)) AND "& _ 
                "((@IsNull_SupplierId = 1 AND [SupplierId] IS NULL) OR ([SupplierId] = @Original_"& _ 
                "SupplierId)) AND ((@IsNull_Imported = 1 AND [Imported] IS NULL) OR ([Imported] ="& _ 
                " @Original_Imported)) AND ([IssueReceiveTypeId] = @Original_IssueReceiveTypeId) "& _ 
                "AND ([ItemId] = @Original_ItemId) AND ((@IsNull_YarnLotNo = 1 AND [YarnLotNo] IS"& _ 
                " NULL) OR ([YarnLotNo] = @Original_YarnLotNo)) AND ((@IsNull_Allocation = 1 AND "& _ 
                "[Allocation] IS NULL) OR ([Allocation] = @Original_Allocation)) AND ((@IsNull_Br"& _ 
                "andId = 1 AND [BrandId] IS NULL) OR ([BrandId] = @Original_BrandId)) AND ((@IsNu"& _ 
                "ll_RequisitionId = 1 AND [RequisitionId] IS NULL) OR ([RequisitionId] = @Origina"& _ 
                "l_RequisitionId)) AND ((@IsNull_CompanyId = 1 AND [CompanyId] IS NULL) OR ([Comp"& _ 
                "anyId] = @Original_CompanyId)) AND ((@IsNull_LocationId = 1 AND [LocationId] IS "& _ 
                "NULL) OR ([LocationId] = @Original_LocationId)) AND ((@IsNull_PINO = 1 AND [PINO"& _ 
                "] IS NULL) OR ([PINO] = @Original_PINO)) AND ((@IsNull_ForShade = 1 AND [ForShad"& _ 
                "e] IS NULL) OR ([ForShade] = @Original_ForShade)) AND ((@IsNull_PIDate = 1 AND ["& _ 
                "PIDate] IS NULL) OR ([PIDate] = @Original_PIDate)) AND ((@IsNull_UserId = 1 AND "& _ 
                "[UserId] IS NULL) OR ([UserId] = @Original_UserId)) AND ((@IsNull_ModifiedOn = 1"& _ 
                " AND [ModifiedOn] IS NULL) OR ([ModifiedOn] = @Original_ModifiedOn)) AND ((@IsNu"& _ 
                "ll_PIId = 1 AND [PIId] IS NULL) OR ([PIId] = @Original_PIId)) AND ((@IsNull_LCId"& _ 
                " = 1 AND [LCId] IS NULL) OR ([LCId] = @Original_LCId)) AND ([IsAlreadyIssued] = "& _ 
                "@Original_IsAlreadyIssued) AND ((@IsNull_MasterReceiveId = 1 AND [MasterReceiveI"& _ 
                "d] IS NULL) OR ([MasterReceiveId] = @Original_MasterReceiveId)) AND ((@IsNull_Fi"& _ 
                "nishFabricBookingId = 1 AND [FinishFabricBookingId] IS NULL) OR ([FinishFabricBo"& _ 
                "okingId] = @Original_FinishFabricBookingId)) AND ((@IsNull_KnittingOrderId = 1 A"& _ 
                "ND [KnittingOrderId] IS NULL) OR ([KnittingOrderId] = @Original_KnittingOrderId)"& _ 
                ") AND ((@IsNull_MRRNo = 1 AND [MRRNo] IS NULL) OR ([MRRNo] = @Original_MRRNo)) A"& _ 
                "ND ((@IsNull_YDOrderId = 1 AND [YDOrderId] IS NULL) OR ([YDOrderId] = @Original_"& _ 
                "YDOrderId)) AND ((@IsNull_YDOrderDetailsId = 1 AND [YDOrderDetailsId] IS NULL) O"& _ 
                "R ([YDOrderDetailsId] = @Original_YDOrderDetailsId)) AND ((@IsNull_QtyPerPacket "& _ 
                "= 1 AND [QtyPerPacket] IS NULL) OR ([QtyPerPacket] = @Original_QtyPerPacket)) AN"& _ 
                "D ((@IsNull_PacketQuantity = 1 AND [PacketQuantity] IS NULL) OR ([PacketQuantity"& _ 
                "] = @Original_PacketQuantity)) AND ((@IsNull_MRRDate = 1 AND [MRRDate] IS NULL) "& _ 
                "OR ([MRRDate] = @Original_MRRDate)) AND ((@IsNull_Reference = 1 AND [Reference] "& _ 
                "IS NULL) OR ([Reference] = @Original_Reference)) AND ((@IsNull_TestStatus = 1 AN"& _ 
                "D [TestStatus] IS NULL) OR ([TestStatus] = @Original_TestStatus)) AND ((@IsNull_"& _ 
                "TestComments = 1 AND [TestComments] IS NULL) OR ([TestComments] = @Original_Test"& _ 
                "Comments)) AND ((@IsNull_Price = 1 AND [Price] IS NULL) OR ([Price] = @Original_"& _ 
                "Price)) AND ((@IsNull_DollarValue = 1 AND [DollarValue] IS NULL) OR ([DollarValu"& _ 
                "e] = @Original_DollarValue)) AND ((@IsNull_ManufactureDate = 1 AND [ManufactureD"& _ 
                "ate] IS NULL) OR ([ManufactureDate] = @Original_ManufactureDate)) AND ((@IsNull_"& _ 
                "ExpiryDate = 1 AND [ExpiryDate] IS NULL) OR ([ExpiryDate] = @Original_ExpiryDate"& _ 
                ")) AND ((@IsNull_IsLeftOver = 1 AND [IsLeftOver] IS NULL) OR ([IsLeftOver] = @Or"& _ 
                "iginal_IsLeftOver)) AND ((@IsNull_IsOrganic = 1 AND [IsOrganic] IS NULL) OR ([Is"& _ 
                "Organic] = @Original_IsOrganic)) AND ((@IsNull_LeftOverQuantity = 1 AND [LeftOve"& _ 
                "rQuantity] IS NULL) OR ([LeftOverQuantity] = @Original_LeftOverQuantity)) AND (("& _ 
                "@IsNull_TransBookingDetailsId = 1 AND [TransBookingDetailsId] IS NULL) OR ([Tran"& _ 
                "sBookingDetailsId] = @Original_TransBookingDetailsId)) AND ((@IsNull_LotNoWOLC ="& _ 
                " 1 AND [LotNoWOLC] IS NULL) OR ([LotNoWOLC] = @Original_LotNoWOLC)) AND ((@IsNul"& _ 
                "l_ActReceiveQuantity = 1 AND [ActReceiveQuantity] IS NULL) OR ([ActReceiveQuanti"& _ 
                "ty] = @Original_ActReceiveQuantity)) AND ((@IsNull_ActUnitId = 1 AND [ActUnitId]"& _ 
                " IS NULL) OR ([ActUnitId] = @Original_ActUnitId)) AND ((@IsNull_UnitId = 1 AND ["& _ 
                "UnitId] IS NULL) OR ([UnitId] = @Original_UnitId)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ReceiveId, ReceiveD"& _ 
                "ate, ChallanNo, ReceiveQuantity, BranchId, Remarks, DepartmentId, ProgramNo, Boo"& _ 
                "kingDetailsId, LCNo, LCDate, SupplierId, Imported, IssueReceiveTypeId, ItemId, Y"& _ 
                "arnLotNo, Allocation, BrandId, RequisitionId, CompanyId, LocationId, PINO, ForSh"& _ 
                "ade, PIDate, UserId, ModifiedOn, PIId, LCId, IsAlreadyIssued, MasterReceiveId, F"& _ 
                "inishFabricBookingId, KnittingOrderId, MRRNo, YDOrderId, YDOrderDetailsId, QtyPe"& _ 
                "rPacket, PacketQuantity, MRRDate, Reference, TestStatus, TestComments, Price, Do"& _ 
                "llarValue, ManufactureDate, ExpiryDate, IsLeftOver, IsOrganic, LeftOverQuantity,"& _ 
                " TransBookingDetailsId, LotNoWOLC, ActReceiveQuantity, ActUnitId, UnitId FROM Re"& _ 
                "ceive WHERE (ReceiveId = @ReceiveId)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ReceiveDate", Global.System.Data.SqlDbType.SmallDateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceiveDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ChallanNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChallanNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ReceiveQuantity", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 3, "ReceiveQuantity", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BranchId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BranchId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Remarks", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remarks", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DepartmentId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DepartmentId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ProgramNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProgramNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BookingDetailsId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BookingDetailsId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LCNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LCNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LCDate", Global.System.Data.SqlDbType.SmallDateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LCDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SupplierId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SupplierId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Imported", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Imported", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IssueReceiveTypeId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IssueReceiveTypeId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ItemId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ItemId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@YarnLotNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "YarnLotNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Allocation", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Allocation", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BrandId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BrandId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RequisitionId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequisitionId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CompanyId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompanyId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LocationId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LocationId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PINO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PINO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ForShade", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ForShade", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PIDate", Global.System.Data.SqlDbType.SmallDateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PIDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UserId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UserId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ModifiedOn", Global.System.Data.SqlDbType.SmallDateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ModifiedOn", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PIId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PIId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LCId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LCId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsAlreadyIssued", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsAlreadyIssued", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MasterReceiveId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MasterReceiveId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FinishFabricBookingId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FinishFabricBookingId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KnittingOrderId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KnittingOrderId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MRRNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MRRNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@YDOrderId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "YDOrderId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@YDOrderDetailsId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "YDOrderDetailsId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@QtyPerPacket", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "QtyPerPacket", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PacketQuantity", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "PacketQuantity", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MRRDate", Global.System.Data.SqlDbType.SmallDateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MRRDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Reference", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Reference", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TestStatus", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TestStatus", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TestComments", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TestComments", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Price", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 4, "Price", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DollarValue", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "DollarValue", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ManufactureDate", Global.System.Data.SqlDbType.SmallDateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ManufactureDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ExpiryDate", Global.System.Data.SqlDbType.SmallDateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ExpiryDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsLeftOver", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsLeftOver", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsOrganic", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsOrganic", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LeftOverQuantity", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "LeftOverQuantity", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TransBookingDetailsId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TransBookingDetailsId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LotNoWOLC", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotNoWOLC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ActReceiveQuantity", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 3, "ActReceiveQuantity", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ActUnitId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ActUnitId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UnitId", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UnitId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ReceiveId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceiveId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ReceiveDate", Global.System.Data.SqlDbType.SmallDateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceiveDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ChallanNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChallanNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ChallanNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChallanNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ReceiveQuantity", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceiveQuantity", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ReceiveQuantity", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 3, "ReceiveQuantity", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BranchId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BranchId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BranchId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BranchId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Remarks", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remarks", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Remarks", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remarks", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DepartmentId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DepartmentId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ProgramNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProgramNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ProgramNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProgramNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BookingDetailsId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BookingDetailsId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BookingDetailsId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BookingDetailsId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LCNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LCNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LCNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LCNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LCDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LCDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LCDate", Global.System.Data.SqlDbType.SmallDateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LCDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SupplierId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SupplierId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SupplierId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SupplierId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Imported", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Imported", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Imported", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Imported", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IssueReceiveTypeId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IssueReceiveTypeId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ItemId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ItemId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_YarnLotNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "YarnLotNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_YarnLotNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "YarnLotNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Allocation", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Allocation", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Allocation", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Allocation", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BrandId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BrandId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BrandId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BrandId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RequisitionId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequisitionId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RequisitionId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequisitionId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CompanyId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompanyId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CompanyId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompanyId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LocationId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LocationId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LocationId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LocationId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PINO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PINO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PINO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PINO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ForShade", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ForShade", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ForShade", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ForShade", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PIDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PIDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PIDate", Global.System.Data.SqlDbType.SmallDateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PIDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_UserId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UserId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UserId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UserId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ModifiedOn", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ModifiedOn", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ModifiedOn", Global.System.Data.SqlDbType.SmallDateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ModifiedOn", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PIId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PIId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PIId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PIId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LCId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LCId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LCId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LCId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IsAlreadyIssued", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsAlreadyIssued", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MasterReceiveId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MasterReceiveId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MasterReceiveId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MasterReceiveId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FinishFabricBookingId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FinishFabricBookingId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FinishFabricBookingId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FinishFabricBookingId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_KnittingOrderId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KnittingOrderId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_KnittingOrderId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KnittingOrderId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MRRNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MRRNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MRRNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MRRNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_YDOrderId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "YDOrderId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_YDOrderId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "YDOrderId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_YDOrderDetailsId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "YDOrderDetailsId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_YDOrderDetailsId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "YDOrderDetailsId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_QtyPerPacket", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QtyPerPacket", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_QtyPerPacket", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "QtyPerPacket", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PacketQuantity", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PacketQuantity", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PacketQuantity", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "PacketQuantity", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MRRDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MRRDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MRRDate", Global.System.Data.SqlDbType.SmallDateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MRRDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Reference", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Reference", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Reference", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Reference", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TestStatus", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TestStatus", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TestStatus", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TestStatus", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TestComments", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TestComments", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TestComments", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TestComments", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Price", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Price", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Price", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 4, "Price", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DollarValue", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DollarValue", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DollarValue", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "DollarValue", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ManufactureDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ManufactureDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ManufactureDate", Global.System.Data.SqlDbType.SmallDateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ManufactureDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ExpiryDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ExpiryDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ExpiryDate", Global.System.Data.SqlDbType.SmallDateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ExpiryDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IsLeftOver", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsLeftOver", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IsLeftOver", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsLeftOver", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IsOrganic", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsOrganic", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IsOrganic", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsOrganic", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LeftOverQuantity", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LeftOverQuantity", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LeftOverQuantity", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "LeftOverQuantity", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TransBookingDetailsId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TransBookingDetailsId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TransBookingDetailsId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TransBookingDetailsId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LotNoWOLC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotNoWOLC", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LotNoWOLC", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LotNoWOLC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ActReceiveQuantity", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ActReceiveQuantity", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ActReceiveQuantity", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 3, "ActReceiveQuantity", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ActUnitId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ActUnitId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ActUnitId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ActUnitId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_UnitId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UnitId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UnitId", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UnitId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ReceiveId", Global.System.Data.SqlDbType.BigInt, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceiveId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.KSoft_Inventory.My.MySettings.Default.KSoft_InventoryConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(9) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        ReceiveId, ReceiveDate, ChallanNo, ReceiveQuantity, BranchId, Remar"& _ 
                "ks, DepartmentId, ProgramNo, BookingDetailsId, LCNo, LCDate, SupplierId, Importe"& _ 
                "d, IssueReceiveTypeId, ItemId, YarnLotNo, Allocation, BrandId, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"               "& _ 
                "          RequisitionId, CompanyId, LocationId, PINO, ForShade, PIDate, UserId, "& _ 
                "ModifiedOn, PIId, LCId, IsAlreadyIssued, MasterReceiveId, FinishFabricBookingId,"& _ 
                " KnittingOrderId, MRRNo, YDOrderId, YDOrderDetailsId, QtyPerPacket, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"          "& _ 
                "               PacketQuantity, MRRDate, Reference, TestStatus, TestComments, Pri"& _ 
                "ce, DollarValue, ManufactureDate, ExpiryDate, IsLeftOver, IsOrganic, LeftOverQua"& _ 
                "ntity, TransBookingDetailsId, LotNoWOLC, ActReceiveQuantity, ActUnitId, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"      "& _ 
                "                   UnitId"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            Receive"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT ActReceiveQuantity, ActUnitId, Allocation, BookingDetailsId, BranchId, Bra"& _ 
                "ndId, ChallanNo, CompanyId, DepartmentId, DollarValue, ExpiryDate, FinishFabricB"& _ 
                "ookingId, ForShade, Imported, IsAlreadyIssued, IsLeftOver, IsOrganic, IssueRecei"& _ 
                "veTypeId, ItemId, KnittingOrderId, LCDate, LCId, LCNo, LeftOverQuantity, Locatio"& _ 
                "nId, LotNoWOLC, MRRDate, MRRNo, ManufactureDate, MasterReceiveId, ModifiedOn, PI"& _ 
                "Date, PIId, PINO, PacketQuantity, Price, ProgramNo, QtyPerPacket, ReceiveDate, R"& _ 
                "eceiveId, ReceiveQuantity, Reference, Remarks, RequisitionId, SupplierId, TestCo"& _ 
                "mments, TestStatus, TransBookingDetailsId, UnitId, UserId, YDOrderDetailsId, YDO"& _ 
                "rderId, YarnLotNo FROM Receive WHERE (ChallanNo = @ChallanNo) AND (DepartmentId "& _ 
                "= @DepartmentId)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ChallanNo", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "ChallanNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DepartmentId", Global.System.Data.SqlDbType.BigInt, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "DepartmentId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT ActReceiveQuantity, ActUnitId, Allocation, BookingDetailsId, BranchId, Bra"& _ 
                "ndId, ChallanNo, CompanyId, DepartmentId, DollarValue, ExpiryDate, FinishFabricB"& _ 
                "ookingId, ForShade, Imported, IsAlreadyIssued, IsLeftOver, IsOrganic, IssueRecei"& _ 
                "veTypeId, ItemId, KnittingOrderId, LCDate, LCId, LCNo, LeftOverQuantity, Locatio"& _ 
                "nId, LotNoWOLC, MRRDate, MRRNo, ManufactureDate, MasterReceiveId, ModifiedOn, PI"& _ 
                "Date, PIId, PINO, PacketQuantity, Price, ProgramNo, QtyPerPacket, ReceiveDate, R"& _ 
                "eceiveId, ReceiveQuantity, Reference, Remarks, RequisitionId, SupplierId, TestCo"& _ 
                "mments, TestStatus, TransBookingDetailsId, UnitId, UserId, YDOrderDetailsId, YDO"& _ 
                "rderId, YarnLotNo FROM Receive WHERE (DepartmentId = @DepartmentID1) AND (ItemId"& _ 
                " = @ItemId) OR (DepartmentId = @DepartmentID2)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DepartmentID1", Global.System.Data.SqlDbType.BigInt, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "DepartmentId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ItemId", Global.System.Data.SqlDbType.BigInt, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "ItemId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DepartmentID2", Global.System.Data.SqlDbType.BigInt, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "DepartmentId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "SELECT ActReceiveQuantity, ActUnitId, Allocation, BookingDetailsId, BranchId, Bra"& _ 
                "ndId, ChallanNo, CompanyId, DepartmentId, DollarValue, ExpiryDate, FinishFabricB"& _ 
                "ookingId, ForShade, Imported, IsAlreadyIssued, IsLeftOver, IsOrganic, IssueRecei"& _ 
                "veTypeId, ItemId, KnittingOrderId, LCDate, LCId, LCNo, LeftOverQuantity, Locatio"& _ 
                "nId, LotNoWOLC, MRRDate, MRRNo, ManufactureDate, MasterReceiveId, ModifiedOn, PI"& _ 
                "Date, PIId, PINO, PacketQuantity, Price, ProgramNo, QtyPerPacket, ReceiveDate, R"& _ 
                "eceiveId, ReceiveQuantity, Reference, Remarks, RequisitionId, SupplierId, TestCo"& _ 
                "mments, TestStatus, TransBookingDetailsId, UnitId, UserId, YDOrderDetailsId, YDO"& _ 
                "rderId, YarnLotNo FROM Receive WHERE (DepartmentId = @DepartmentId)"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DepartmentId", Global.System.Data.SqlDbType.BigInt, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "DepartmentId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(4).Connection = Me.Connection
            Me._commandCollection(4).CommandText = "SELECT ActReceiveQuantity, ActUnitId, Allocation, BookingDetailsId, BranchId, Bra"& _ 
                "ndId, ChallanNo, CompanyId, DepartmentId, DollarValue, ExpiryDate, FinishFabricB"& _ 
                "ookingId, ForShade, Imported, IsAlreadyIssued, IsLeftOver, IsOrganic, IssueRecei"& _ 
                "veTypeId, ItemId, KnittingOrderId, LCDate, LCId, LCNo, LeftOverQuantity, Locatio"& _ 
                "nId, LotNoWOLC, MRRDate, MRRNo, ManufactureDate, MasterReceiveId, ModifiedOn, PI"& _ 
                "Date, PIId, PINO, PacketQuantity, Price, ProgramNo, QtyPerPacket, ReceiveDate, R"& _ 
                "eceiveId, ReceiveQuantity, Reference, Remarks, RequisitionId, SupplierId, TestCo"& _ 
                "mments, TestStatus, TransBookingDetailsId, UnitId, UserId, YDOrderDetailsId, YDO"& _ 
                "rderId, YarnLotNo FROM Receive WHERE (ItemId = @ItemId)"
            Me._commandCollection(4).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ItemId", Global.System.Data.SqlDbType.BigInt, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "ItemId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(5).Connection = Me.Connection
            Me._commandCollection(5).CommandText = "SELECT ActReceiveQuantity, ActUnitId, Allocation, BookingDetailsId, BranchId, Bra"& _ 
                "ndId, ChallanNo, CompanyId, DepartmentId, DollarValue, ExpiryDate, FinishFabricB"& _ 
                "ookingId, ForShade, Imported, IsAlreadyIssued, IsLeftOver, IsOrganic, IssueRecei"& _ 
                "veTypeId, ItemId, KnittingOrderId, LCDate, LCId, LCNo, LeftOverQuantity, Locatio"& _ 
                "nId, LotNoWOLC, MRRDate, MRRNo, ManufactureDate, MasterReceiveId, ModifiedOn, PI"& _ 
                "Date, PIId, PINO, PacketQuantity, Price, ProgramNo, QtyPerPacket, ReceiveDate, R"& _ 
                "eceiveId, ReceiveQuantity, Reference, Remarks, RequisitionId, SupplierId, TestCo"& _ 
                "mments, TestStatus, TransBookingDetailsId, UnitId, UserId, YDOrderDetailsId, YDO"& _ 
                "rderId, YarnLotNo FROM Receive WHERE (ItemId IN (SELECT ItemId FROM ItemList WHE"& _ 
                "RE (ItemName LIKE '%' + @ItemName + '%'))) AND (DepartmentId = @DepartmentId)"
            Me._commandCollection(5).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DepartmentId", Global.System.Data.SqlDbType.BigInt, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "DepartmentId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ItemName", Global.System.Data.SqlDbType.VarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(6) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(6).Connection = Me.Connection
            Me._commandCollection(6).CommandText = "SELECT ActReceiveQuantity, ActUnitId, Allocation, BookingDetailsId, BranchId, Bra"& _ 
                "ndId, ChallanNo, CompanyId, DepartmentId, DollarValue, ExpiryDate, FinishFabricB"& _ 
                "ookingId, ForShade, Imported, IsAlreadyIssued, IsLeftOver, IsOrganic, IssueRecei"& _ 
                "veTypeId, ItemId, KnittingOrderId, LCDate, LCId, LCNo, LeftOverQuantity, Locatio"& _ 
                "nId, LotNoWOLC, MRRDate, MRRNo, ManufactureDate, MasterReceiveId, ModifiedOn, PI"& _ 
                "Date, PIId, PINO, PacketQuantity, Price, ProgramNo, QtyPerPacket, ReceiveDate, R"& _ 
                "eceiveId, ReceiveQuantity, Reference, Remarks, RequisitionId, SupplierId, TestCo"& _ 
                "mments, TestStatus, TransBookingDetailsId, UnitId, UserId, YDOrderDetailsId, YDO"& _ 
                "rderId, YarnLotNo FROM Receive WHERE (ItemId IN (SELECT ItemId FROM ItemList WHE"& _ 
                "RE (ItemName LIKE @ItemName + '%'))) AND (DepartmentId = @DepartmentId)"
            Me._commandCollection(6).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DepartmentId", Global.System.Data.SqlDbType.BigInt, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "DepartmentId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ItemName", Global.System.Data.SqlDbType.VarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(7) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(7).Connection = Me.Connection
            Me._commandCollection(7).CommandText = "SELECT ActReceiveQuantity, ActUnitId, Allocation, BookingDetailsId, BranchId, Bra"& _ 
                "ndId, ChallanNo, CompanyId, DepartmentId, DollarValue, ExpiryDate, FinishFabricB"& _ 
                "ookingId, ForShade, Imported, IsAlreadyIssued, IsLeftOver, IsOrganic, IssueRecei"& _ 
                "veTypeId, ItemId, KnittingOrderId, LCDate, LCId, LCNo, LeftOverQuantity, Locatio"& _ 
                "nId, LotNoWOLC, MRRDate, MRRNo, ManufactureDate, MasterReceiveId, ModifiedOn, PI"& _ 
                "Date, PIId, PINO, PacketQuantity, Price, ProgramNo, QtyPerPacket, ReceiveDate, R"& _ 
                "eceiveId, ReceiveQuantity, Reference, Remarks, RequisitionId, SupplierId, TestCo"& _ 
                "mments, TestStatus, TransBookingDetailsId, UnitId, UserId, YDOrderDetailsId, YDO"& _ 
                "rderId, YarnLotNo FROM Receive WHERE (ProgramNo = @ProgramNo) AND (DepartmentId "& _ 
                "= @DepartmentId)"
            Me._commandCollection(7).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(7).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ProgramNo", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "ProgramNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(7).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DepartmentId", Global.System.Data.SqlDbType.BigInt, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "DepartmentId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(8) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(8).Connection = Me.Connection
            Me._commandCollection(8).CommandText = "SELECT ActReceiveQuantity, ActUnitId, Allocation, BookingDetailsId, BranchId, Bra"& _ 
                "ndId, ChallanNo, CompanyId, DepartmentId, DollarValue, ExpiryDate, FinishFabricB"& _ 
                "ookingId, ForShade, Imported, IsAlreadyIssued, IsLeftOver, IsOrganic, IssueRecei"& _ 
                "veTypeId, ItemId, KnittingOrderId, LCDate, LCId, LCNo, LeftOverQuantity, Locatio"& _ 
                "nId, LotNoWOLC, MRRDate, MRRNo, ManufactureDate, MasterReceiveId, ModifiedOn, PI"& _ 
                "Date, PIId, PINO, PacketQuantity, Price, ProgramNo, QtyPerPacket, ReceiveDate, R"& _ 
                "eceiveId, ReceiveQuantity, Reference, Remarks, RequisitionId, SupplierId, TestCo"& _ 
                "mments, TestStatus, TransBookingDetailsId, UnitId, UserId, YDOrderDetailsId, YDO"& _ 
                "rderId, YarnLotNo FROM Receive WHERE (ReceiveDate = @ReceiveDate) AND (Departmen"& _ 
                "tId = @DepartmentId)"
            Me._commandCollection(8).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(8).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ReceiveDate", Global.System.Data.SqlDbType.SmallDateTime, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceiveDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(8).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DepartmentId", Global.System.Data.SqlDbType.BigInt, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "DepartmentId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(9) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(9).Connection = Me.Connection
            Me._commandCollection(9).CommandText = "UPDATE    Receive"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SET              BookingDetailsId = @BookingDetailsId"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE  "& _ 
                "   (ReceiveId = @Original_ReceiveId); "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)
            Me._commandCollection(9).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(9).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BookingDetailsId", Global.System.Data.SqlDbType.BigInt, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "BookingDetailsId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(9).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ReceiveId", Global.System.Data.SqlDbType.BigInt, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceiveId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As ReceiveDataSet.ReceiveDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As ReceiveDataSet.ReceiveDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As ReceiveDataSet.ReceiveDataTable = New ReceiveDataSet.ReceiveDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByChallanNo(ByVal dataTable As ReceiveDataSet.ReceiveDataTable, ByVal ChallanNo As String, ByVal DepartmentId As Long) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (ChallanNo Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(ChallanNo,String)
            End If
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(DepartmentId,Long)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByDepartment25And16(ByVal dataTable As ReceiveDataSet.ReceiveDataTable, ByVal DepartmentID1 As Long, ByVal ItemId As Long, ByVal DepartmentID2 As Long) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(DepartmentID1,Long)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(ItemId,Long)
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(DepartmentID2,Long)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByDepartment25And16(ByVal DepartmentID1 As Long, ByVal ItemId As Long, ByVal DepartmentID2 As Long) As ReceiveDataSet.ReceiveDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(DepartmentID1,Long)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(ItemId,Long)
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(DepartmentID2,Long)
            Dim dataTable As ReceiveDataSet.ReceiveDataTable = New ReceiveDataSet.ReceiveDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByDepartmentId(ByVal dataTable As ReceiveDataSet.ReceiveDataTable, ByVal DepartmentId As Long) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(DepartmentId,Long)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByDepartmentId(ByVal DepartmentId As Long) As ReceiveDataSet.ReceiveDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(DepartmentId,Long)
            Dim dataTable As ReceiveDataSet.ReceiveDataTable = New ReceiveDataSet.ReceiveDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByItemId(ByVal dataTable As ReceiveDataSet.ReceiveDataTable, ByVal ItemId As Long) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(ItemId,Long)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByItemId(ByVal ItemId As Long) As ReceiveDataSet.ReceiveDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(ItemId,Long)
            Dim dataTable As ReceiveDataSet.ReceiveDataTable = New ReceiveDataSet.ReceiveDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByItemName(ByVal dataTable As ReceiveDataSet.ReceiveDataTable, ByVal DepartmentId As Long, ByVal ItemName As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(5)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(DepartmentId,Long)
            If (ItemName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ItemName")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(ItemName,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByItemName(ByVal DepartmentId As Long, ByVal ItemName As String) As ReceiveDataSet.ReceiveDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(5)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(DepartmentId,Long)
            If (ItemName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ItemName")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(ItemName,String)
            End If
            Dim dataTable As ReceiveDataSet.ReceiveDataTable = New ReceiveDataSet.ReceiveDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByItemNameStartWith(ByVal dataTable As ReceiveDataSet.ReceiveDataTable, ByVal DepartmentId As Long, ByVal ItemName As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(6)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(DepartmentId,Long)
            If (ItemName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ItemName")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(ItemName,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByItemNameStartWith(ByVal DepartmentId As Long, ByVal ItemName As String) As ReceiveDataSet.ReceiveDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(6)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(DepartmentId,Long)
            If (ItemName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ItemName")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(ItemName,String)
            End If
            Dim dataTable As ReceiveDataSet.ReceiveDataTable = New ReceiveDataSet.ReceiveDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByProgramNo(ByVal dataTable As ReceiveDataSet.ReceiveDataTable, ByVal ProgramNo As String, ByVal DepartmentId As Long) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(7)
            If (ProgramNo Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(ProgramNo,String)
            End If
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(DepartmentId,Long)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByProgramNo(ByVal ProgramNo As String, ByVal DepartmentId As Long) As ReceiveDataSet.ReceiveDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(7)
            If (ProgramNo Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(ProgramNo,String)
            End If
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(DepartmentId,Long)
            Dim dataTable As ReceiveDataSet.ReceiveDataTable = New ReceiveDataSet.ReceiveDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByReceiveDate(ByVal dataTable As ReceiveDataSet.ReceiveDataTable, ByVal ReceiveDate As Date, ByVal DepartmentId As Long) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(8)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(ReceiveDate,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(DepartmentId,Long)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByReceiveDate(ByVal ReceiveDate As Date, ByVal DepartmentId As Long) As ReceiveDataSet.ReceiveDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(8)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(ReceiveDate,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(DepartmentId,Long)
            Dim dataTable As ReceiveDataSet.ReceiveDataTable = New ReceiveDataSet.ReceiveDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As ReceiveDataSet.ReceiveDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As ReceiveDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "Receive")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_ReceiveId As Long,  _
                    ByVal Original_ReceiveDate As Date,  _
                    ByVal Original_ChallanNo As String,  _
                    ByVal Original_ReceiveQuantity As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_BranchId As Global.System.Nullable(Of Long),  _
                    ByVal Original_Remarks As String,  _
                    ByVal Original_DepartmentId As Long,  _
                    ByVal Original_ProgramNo As String,  _
                    ByVal Original_BookingDetailsId As Global.System.Nullable(Of Long),  _
                    ByVal Original_LCNo As String,  _
                    ByVal Original_LCDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_SupplierId As Global.System.Nullable(Of Long),  _
                    ByVal Original_Imported As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_IssueReceiveTypeId As Long,  _
                    ByVal Original_ItemId As Long,  _
                    ByVal Original_YarnLotNo As String,  _
                    ByVal Original_Allocation As String,  _
                    ByVal Original_BrandId As Global.System.Nullable(Of Long),  _
                    ByVal Original_RequisitionId As Global.System.Nullable(Of Long),  _
                    ByVal Original_CompanyId As Global.System.Nullable(Of Long),  _
                    ByVal Original_LocationId As Global.System.Nullable(Of Long),  _
                    ByVal Original_PINO As String,  _
                    ByVal Original_ForShade As String,  _
                    ByVal Original_PIDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_UserId As Global.System.Nullable(Of Long),  _
                    ByVal Original_ModifiedOn As Global.System.Nullable(Of Date),  _
                    ByVal Original_PIId As Global.System.Nullable(Of Long),  _
                    ByVal Original_LCId As Global.System.Nullable(Of Long),  _
                    ByVal Original_IsAlreadyIssued As Boolean,  _
                    ByVal Original_MasterReceiveId As Global.System.Nullable(Of Long),  _
                    ByVal Original_FinishFabricBookingId As Global.System.Nullable(Of Long),  _
                    ByVal Original_KnittingOrderId As Global.System.Nullable(Of Long),  _
                    ByVal Original_MRRNo As Global.System.Nullable(Of Integer),  _
                    ByVal Original_YDOrderId As Global.System.Nullable(Of Long),  _
                    ByVal Original_YDOrderDetailsId As Global.System.Nullable(Of Long),  _
                    ByVal Original_QtyPerPacket As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PacketQuantity As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_MRRDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_Reference As String,  _
                    ByVal Original_TestStatus As String,  _
                    ByVal Original_TestComments As String,  _
                    ByVal Original_Price As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_DollarValue As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_ManufactureDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_ExpiryDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_IsLeftOver As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_IsOrganic As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_LeftOverQuantity As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_TransBookingDetailsId As Global.System.Nullable(Of Long),  _
                    ByVal Original_LotNoWOLC As String,  _
                    ByVal Original_ActReceiveQuantity As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_ActUnitId As Global.System.Nullable(Of Long),  _
                    ByVal Original_UnitId As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ReceiveId,Long)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_ReceiveDate,Date)
            If (Original_ChallanNo Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_ChallanNo,String)
            End If
            If (Original_ReceiveQuantity.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_ReceiveQuantity.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (Original_BranchId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_BranchId.Value,Long)
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (Original_Remarks Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_Remarks,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_DepartmentId,Long)
            If (Original_ProgramNo Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_ProgramNo,String)
            End If
            If (Original_BookingDetailsId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_BookingDetailsId.Value,Long)
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (Original_LCNo Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_LCNo,String)
            End If
            If (Original_LCDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_LCDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (Original_SupplierId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_SupplierId.Value,Long)
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (Original_Imported.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_Imported.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(23).Value = CType(Original_IssueReceiveTypeId,Long)
            Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_ItemId,Long)
            If (Original_YarnLotNo Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_YarnLotNo,String)
            End If
            If (Original_Allocation Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_Allocation,String)
            End If
            If (Original_BrandId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_BrandId.Value,Long)
            Else
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (Original_RequisitionId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(Original_RequisitionId.Value,Long)
            Else
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (Original_CompanyId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(Original_CompanyId.Value,Long)
            Else
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (Original_LocationId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(Original_LocationId.Value,Long)
            Else
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (Original_PINO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(Original_PINO,String)
            End If
            If (Original_ForShade Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(Original_ForShade,String)
            End If
            If (Original_PIDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(Original_PIDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (Original_UserId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(Original_UserId.Value,Long)
            Else
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (Original_ModifiedOn.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(Original_ModifiedOn.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (Original_PIId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(Original_PIId.Value,Long)
            Else
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = Global.System.DBNull.Value
            End If
            If (Original_LCId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(Original_LCId.Value,Long)
            Else
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(51).Value = CType(Original_IsAlreadyIssued,Boolean)
            If (Original_MasterReceiveId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(Original_MasterReceiveId.Value,Long)
            Else
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(53).Value = Global.System.DBNull.Value
            End If
            If (Original_FinishFabricBookingId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(Original_FinishFabricBookingId.Value,Long)
            Else
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(55).Value = Global.System.DBNull.Value
            End If
            If (Original_KnittingOrderId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(Original_KnittingOrderId.Value,Long)
            Else
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(57).Value = Global.System.DBNull.Value
            End If
            If (Original_MRRNo.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(Original_MRRNo.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(59).Value = Global.System.DBNull.Value
            End If
            If (Original_YDOrderId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(Original_YDOrderId.Value,Long)
            Else
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(61).Value = Global.System.DBNull.Value
            End If
            If (Original_YDOrderDetailsId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(62).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(63).Value = CType(Original_YDOrderDetailsId.Value,Long)
            Else
                Me.Adapter.DeleteCommand.Parameters(62).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(63).Value = Global.System.DBNull.Value
            End If
            If (Original_QtyPerPacket.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(64).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(65).Value = CType(Original_QtyPerPacket.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(64).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(65).Value = Global.System.DBNull.Value
            End If
            If (Original_PacketQuantity.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(66).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(67).Value = CType(Original_PacketQuantity.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(66).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(67).Value = Global.System.DBNull.Value
            End If
            If (Original_MRRDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(68).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(69).Value = CType(Original_MRRDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(68).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(69).Value = Global.System.DBNull.Value
            End If
            If (Original_Reference Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(70).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(71).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(70).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(71).Value = CType(Original_Reference,String)
            End If
            If (Original_TestStatus Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(72).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(73).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(72).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(73).Value = CType(Original_TestStatus,String)
            End If
            If (Original_TestComments Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(74).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(75).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(74).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(75).Value = CType(Original_TestComments,String)
            End If
            If (Original_Price.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(76).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(77).Value = CType(Original_Price.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(76).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(77).Value = Global.System.DBNull.Value
            End If
            If (Original_DollarValue.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(78).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(79).Value = CType(Original_DollarValue.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(78).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(79).Value = Global.System.DBNull.Value
            End If
            If (Original_ManufactureDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(80).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(81).Value = CType(Original_ManufactureDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(80).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(81).Value = Global.System.DBNull.Value
            End If
            If (Original_ExpiryDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(82).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(83).Value = CType(Original_ExpiryDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(82).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(83).Value = Global.System.DBNull.Value
            End If
            If (Original_IsLeftOver.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(84).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(85).Value = CType(Original_IsLeftOver.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(84).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(85).Value = Global.System.DBNull.Value
            End If
            If (Original_IsOrganic.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(86).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(87).Value = CType(Original_IsOrganic.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(86).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(87).Value = Global.System.DBNull.Value
            End If
            If (Original_LeftOverQuantity.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(88).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(89).Value = CType(Original_LeftOverQuantity.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(88).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(89).Value = Global.System.DBNull.Value
            End If
            If (Original_TransBookingDetailsId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(90).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(91).Value = CType(Original_TransBookingDetailsId.Value,Long)
            Else
                Me.Adapter.DeleteCommand.Parameters(90).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(91).Value = Global.System.DBNull.Value
            End If
            If (Original_LotNoWOLC Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(92).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(93).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(92).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(93).Value = CType(Original_LotNoWOLC,String)
            End If
            If (Original_ActReceiveQuantity.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(94).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(95).Value = CType(Original_ActReceiveQuantity.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(94).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(95).Value = Global.System.DBNull.Value
            End If
            If (Original_ActUnitId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(96).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(97).Value = CType(Original_ActUnitId.Value,Long)
            Else
                Me.Adapter.DeleteCommand.Parameters(96).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(97).Value = Global.System.DBNull.Value
            End If
            If (Original_UnitId Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(98).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(99).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(98).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(99).Value = CType(Original_UnitId,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal ReceiveDate As Date,  _
                    ByVal ChallanNo As String,  _
                    ByVal ReceiveQuantity As Global.System.Nullable(Of Decimal),  _
                    ByVal BranchId As Global.System.Nullable(Of Long),  _
                    ByVal Remarks As String,  _
                    ByVal DepartmentId As Long,  _
                    ByVal ProgramNo As String,  _
                    ByVal BookingDetailsId As Global.System.Nullable(Of Long),  _
                    ByVal LCNo As String,  _
                    ByVal LCDate As Global.System.Nullable(Of Date),  _
                    ByVal SupplierId As Global.System.Nullable(Of Long),  _
                    ByVal Imported As Global.System.Nullable(Of Boolean),  _
                    ByVal IssueReceiveTypeId As Long,  _
                    ByVal ItemId As Long,  _
                    ByVal YarnLotNo As String,  _
                    ByVal Allocation As String,  _
                    ByVal BrandId As Global.System.Nullable(Of Long),  _
                    ByVal RequisitionId As Global.System.Nullable(Of Long),  _
                    ByVal CompanyId As Global.System.Nullable(Of Long),  _
                    ByVal LocationId As Global.System.Nullable(Of Long),  _
                    ByVal PINO As String,  _
                    ByVal ForShade As String,  _
                    ByVal PIDate As Global.System.Nullable(Of Date),  _
                    ByVal UserId As Global.System.Nullable(Of Long),  _
                    ByVal ModifiedOn As Global.System.Nullable(Of Date),  _
                    ByVal PIId As Global.System.Nullable(Of Long),  _
                    ByVal LCId As Global.System.Nullable(Of Long),  _
                    ByVal IsAlreadyIssued As Boolean,  _
                    ByVal MasterReceiveId As Global.System.Nullable(Of Long),  _
                    ByVal FinishFabricBookingId As Global.System.Nullable(Of Long),  _
                    ByVal KnittingOrderId As Global.System.Nullable(Of Long),  _
                    ByVal MRRNo As Global.System.Nullable(Of Integer),  _
                    ByVal YDOrderId As Global.System.Nullable(Of Long),  _
                    ByVal YDOrderDetailsId As Global.System.Nullable(Of Long),  _
                    ByVal QtyPerPacket As Global.System.Nullable(Of Decimal),  _
                    ByVal PacketQuantity As Global.System.Nullable(Of Decimal),  _
                    ByVal MRRDate As Global.System.Nullable(Of Date),  _
                    ByVal Reference As String,  _
                    ByVal TestStatus As String,  _
                    ByVal TestComments As String,  _
                    ByVal Price As Global.System.Nullable(Of Decimal),  _
                    ByVal DollarValue As Global.System.Nullable(Of Decimal),  _
                    ByVal ManufactureDate As Global.System.Nullable(Of Date),  _
                    ByVal ExpiryDate As Global.System.Nullable(Of Date),  _
                    ByVal IsLeftOver As Global.System.Nullable(Of Boolean),  _
                    ByVal IsOrganic As Global.System.Nullable(Of Boolean),  _
                    ByVal LeftOverQuantity As Global.System.Nullable(Of Decimal),  _
                    ByVal TransBookingDetailsId As Global.System.Nullable(Of Long),  _
                    ByVal LotNoWOLC As String,  _
                    ByVal ActReceiveQuantity As Global.System.Nullable(Of Decimal),  _
                    ByVal ActUnitId As Global.System.Nullable(Of Long),  _
                    ByVal UnitId As String) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(ReceiveDate,Date)
            If (ChallanNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(ChallanNo,String)
            End If
            If (ReceiveQuantity.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(ReceiveQuantity.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (BranchId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(BranchId.Value,Long)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Remarks Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(Remarks,String)
            End If
            Me.Adapter.InsertCommand.Parameters(5).Value = CType(DepartmentId,Long)
            If (ProgramNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(ProgramNo,String)
            End If
            If (BookingDetailsId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(BookingDetailsId.Value,Long)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (LCNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(LCNo,String)
            End If
            If (LCDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(LCDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (SupplierId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(SupplierId.Value,Long)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Imported.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(Imported.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(12).Value = CType(IssueReceiveTypeId,Long)
            Me.Adapter.InsertCommand.Parameters(13).Value = CType(ItemId,Long)
            If (YarnLotNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(YarnLotNo,String)
            End If
            If (Allocation Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(Allocation,String)
            End If
            If (BrandId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(BrandId.Value,Long)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (RequisitionId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(RequisitionId.Value,Long)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (CompanyId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(CompanyId.Value,Long)
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (LocationId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(LocationId.Value,Long)
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (PINO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(PINO,String)
            End If
            If (ForShade Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(ForShade,String)
            End If
            If (PIDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(PIDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (UserId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(UserId.Value,Long)
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (ModifiedOn.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(ModifiedOn.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (PIId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(PIId.Value,Long)
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (LCId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(LCId.Value,Long)
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(27).Value = CType(IsAlreadyIssued,Boolean)
            If (MasterReceiveId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(MasterReceiveId.Value,Long)
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (FinishFabricBookingId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(FinishFabricBookingId.Value,Long)
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (KnittingOrderId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(KnittingOrderId.Value,Long)
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (MRRNo.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(MRRNo.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (YDOrderId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(YDOrderId.Value,Long)
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (YDOrderDetailsId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(YDOrderDetailsId.Value,Long)
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (QtyPerPacket.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(QtyPerPacket.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (PacketQuantity.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(PacketQuantity.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (MRRDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(MRRDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (Reference Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(Reference,String)
            End If
            If (TestStatus Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(TestStatus,String)
            End If
            If (TestComments Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(TestComments,String)
            End If
            If (Price.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(Price.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (DollarValue.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(41).Value = CType(DollarValue.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (ManufactureDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(42).Value = CType(ManufactureDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (ExpiryDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(43).Value = CType(ExpiryDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (IsLeftOver.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(44).Value = CType(IsLeftOver.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (IsOrganic.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(45).Value = CType(IsOrganic.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (LeftOverQuantity.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(46).Value = CType(LeftOverQuantity.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (TransBookingDetailsId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(47).Value = CType(TransBookingDetailsId.Value,Long)
            Else
                Me.Adapter.InsertCommand.Parameters(47).Value = Global.System.DBNull.Value
            End If
            If (LotNoWOLC Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(48).Value = CType(LotNoWOLC,String)
            End If
            If (ActReceiveQuantity.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(49).Value = CType(ActReceiveQuantity.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(49).Value = Global.System.DBNull.Value
            End If
            If (ActUnitId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(50).Value = CType(ActUnitId.Value,Long)
            Else
                Me.Adapter.InsertCommand.Parameters(50).Value = Global.System.DBNull.Value
            End If
            If (UnitId Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(51).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(51).Value = CType(UnitId,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal ReceiveDate As Date,  _
                    ByVal ChallanNo As String,  _
                    ByVal ReceiveQuantity As Global.System.Nullable(Of Decimal),  _
                    ByVal BranchId As Global.System.Nullable(Of Long),  _
                    ByVal Remarks As String,  _
                    ByVal DepartmentId As Long,  _
                    ByVal ProgramNo As String,  _
                    ByVal BookingDetailsId As Global.System.Nullable(Of Long),  _
                    ByVal LCNo As String,  _
                    ByVal LCDate As Global.System.Nullable(Of Date),  _
                    ByVal SupplierId As Global.System.Nullable(Of Long),  _
                    ByVal Imported As Global.System.Nullable(Of Boolean),  _
                    ByVal IssueReceiveTypeId As Long,  _
                    ByVal ItemId As Long,  _
                    ByVal YarnLotNo As String,  _
                    ByVal Allocation As String,  _
                    ByVal BrandId As Global.System.Nullable(Of Long),  _
                    ByVal RequisitionId As Global.System.Nullable(Of Long),  _
                    ByVal CompanyId As Global.System.Nullable(Of Long),  _
                    ByVal LocationId As Global.System.Nullable(Of Long),  _
                    ByVal PINO As String,  _
                    ByVal ForShade As String,  _
                    ByVal PIDate As Global.System.Nullable(Of Date),  _
                    ByVal UserId As Global.System.Nullable(Of Long),  _
                    ByVal ModifiedOn As Global.System.Nullable(Of Date),  _
                    ByVal PIId As Global.System.Nullable(Of Long),  _
                    ByVal LCId As Global.System.Nullable(Of Long),  _
                    ByVal IsAlreadyIssued As Boolean,  _
                    ByVal MasterReceiveId As Global.System.Nullable(Of Long),  _
                    ByVal FinishFabricBookingId As Global.System.Nullable(Of Long),  _
                    ByVal KnittingOrderId As Global.System.Nullable(Of Long),  _
                    ByVal MRRNo As Global.System.Nullable(Of Integer),  _
                    ByVal YDOrderId As Global.System.Nullable(Of Long),  _
                    ByVal YDOrderDetailsId As Global.System.Nullable(Of Long),  _
                    ByVal QtyPerPacket As Global.System.Nullable(Of Decimal),  _
                    ByVal PacketQuantity As Global.System.Nullable(Of Decimal),  _
                    ByVal MRRDate As Global.System.Nullable(Of Date),  _
                    ByVal Reference As String,  _
                    ByVal TestStatus As String,  _
                    ByVal TestComments As String,  _
                    ByVal Price As Global.System.Nullable(Of Decimal),  _
                    ByVal DollarValue As Global.System.Nullable(Of Decimal),  _
                    ByVal ManufactureDate As Global.System.Nullable(Of Date),  _
                    ByVal ExpiryDate As Global.System.Nullable(Of Date),  _
                    ByVal IsLeftOver As Global.System.Nullable(Of Boolean),  _
                    ByVal IsOrganic As Global.System.Nullable(Of Boolean),  _
                    ByVal LeftOverQuantity As Global.System.Nullable(Of Decimal),  _
                    ByVal TransBookingDetailsId As Global.System.Nullable(Of Long),  _
                    ByVal LotNoWOLC As String,  _
                    ByVal ActReceiveQuantity As Global.System.Nullable(Of Decimal),  _
                    ByVal ActUnitId As Global.System.Nullable(Of Long),  _
                    ByVal UnitId As String,  _
                    ByVal Original_ReceiveId As Long,  _
                    ByVal Original_ReceiveDate As Date,  _
                    ByVal Original_ChallanNo As String,  _
                    ByVal Original_ReceiveQuantity As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_BranchId As Global.System.Nullable(Of Long),  _
                    ByVal Original_Remarks As String,  _
                    ByVal Original_DepartmentId As Long,  _
                    ByVal Original_ProgramNo As String,  _
                    ByVal Original_BookingDetailsId As Global.System.Nullable(Of Long),  _
                    ByVal Original_LCNo As String,  _
                    ByVal Original_LCDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_SupplierId As Global.System.Nullable(Of Long),  _
                    ByVal Original_Imported As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_IssueReceiveTypeId As Long,  _
                    ByVal Original_ItemId As Long,  _
                    ByVal Original_YarnLotNo As String,  _
                    ByVal Original_Allocation As String,  _
                    ByVal Original_BrandId As Global.System.Nullable(Of Long),  _
                    ByVal Original_RequisitionId As Global.System.Nullable(Of Long),  _
                    ByVal Original_CompanyId As Global.System.Nullable(Of Long),  _
                    ByVal Original_LocationId As Global.System.Nullable(Of Long),  _
                    ByVal Original_PINO As String,  _
                    ByVal Original_ForShade As String,  _
                    ByVal Original_PIDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_UserId As Global.System.Nullable(Of Long),  _
                    ByVal Original_ModifiedOn As Global.System.Nullable(Of Date),  _
                    ByVal Original_PIId As Global.System.Nullable(Of Long),  _
                    ByVal Original_LCId As Global.System.Nullable(Of Long),  _
                    ByVal Original_IsAlreadyIssued As Boolean,  _
                    ByVal Original_MasterReceiveId As Global.System.Nullable(Of Long),  _
                    ByVal Original_FinishFabricBookingId As Global.System.Nullable(Of Long),  _
                    ByVal Original_KnittingOrderId As Global.System.Nullable(Of Long),  _
                    ByVal Original_MRRNo As Global.System.Nullable(Of Integer),  _
                    ByVal Original_YDOrderId As Global.System.Nullable(Of Long),  _
                    ByVal Original_YDOrderDetailsId As Global.System.Nullable(Of Long),  _
                    ByVal Original_QtyPerPacket As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PacketQuantity As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_MRRDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_Reference As String,  _
                    ByVal Original_TestStatus As String,  _
                    ByVal Original_TestComments As String,  _
                    ByVal Original_Price As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_DollarValue As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_ManufactureDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_ExpiryDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_IsLeftOver As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_IsOrganic As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_LeftOverQuantity As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_TransBookingDetailsId As Global.System.Nullable(Of Long),  _
                    ByVal Original_LotNoWOLC As String,  _
                    ByVal Original_ActReceiveQuantity As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_ActUnitId As Global.System.Nullable(Of Long),  _
                    ByVal Original_UnitId As String,  _
                    ByVal ReceiveId As Long) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(ReceiveDate,Date)
            If (ChallanNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(ChallanNo,String)
            End If
            If (ReceiveQuantity.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(ReceiveQuantity.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (BranchId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(BranchId.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Remarks Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Remarks,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(DepartmentId,Long)
            If (ProgramNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(ProgramNo,String)
            End If
            If (BookingDetailsId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(BookingDetailsId.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (LCNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(LCNo,String)
            End If
            If (LCDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(LCDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (SupplierId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(SupplierId.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Imported.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Imported.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(12).Value = CType(IssueReceiveTypeId,Long)
            Me.Adapter.UpdateCommand.Parameters(13).Value = CType(ItemId,Long)
            If (YarnLotNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(YarnLotNo,String)
            End If
            If (Allocation Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Allocation,String)
            End If
            If (BrandId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(BrandId.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (RequisitionId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(RequisitionId.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (CompanyId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(CompanyId.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (LocationId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(LocationId.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (PINO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(PINO,String)
            End If
            If (ForShade Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(ForShade,String)
            End If
            If (PIDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(PIDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (UserId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(UserId.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (ModifiedOn.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(ModifiedOn.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (PIId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(PIId.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (LCId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(LCId.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(27).Value = CType(IsAlreadyIssued,Boolean)
            If (MasterReceiveId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(MasterReceiveId.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (FinishFabricBookingId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(FinishFabricBookingId.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (KnittingOrderId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(KnittingOrderId.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (MRRNo.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(MRRNo.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (YDOrderId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(YDOrderId.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (YDOrderDetailsId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(YDOrderDetailsId.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (QtyPerPacket.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(QtyPerPacket.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (PacketQuantity.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(PacketQuantity.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (MRRDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(MRRDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (Reference Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(Reference,String)
            End If
            If (TestStatus Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(TestStatus,String)
            End If
            If (TestComments Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(TestComments,String)
            End If
            If (Price.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(Price.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (DollarValue.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(DollarValue.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (ManufactureDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(ManufactureDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (ExpiryDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(ExpiryDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (IsLeftOver.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(IsLeftOver.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (IsOrganic.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(IsOrganic.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (LeftOverQuantity.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(LeftOverQuantity.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (TransBookingDetailsId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(TransBookingDetailsId.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(47).Value = Global.System.DBNull.Value
            End If
            If (LotNoWOLC Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(LotNoWOLC,String)
            End If
            If (ActReceiveQuantity.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(ActReceiveQuantity.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(49).Value = Global.System.DBNull.Value
            End If
            If (ActUnitId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(ActUnitId.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(50).Value = Global.System.DBNull.Value
            End If
            If (UnitId Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(51).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(UnitId,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(52).Value = CType(Original_ReceiveId,Long)
            Me.Adapter.UpdateCommand.Parameters(53).Value = CType(Original_ReceiveDate,Date)
            If (Original_ChallanNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(55).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(Original_ChallanNo,String)
            End If
            If (Original_ReceiveQuantity.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(Original_ReceiveQuantity.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(57).Value = Global.System.DBNull.Value
            End If
            If (Original_BranchId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(Original_BranchId.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(59).Value = Global.System.DBNull.Value
            End If
            If (Original_Remarks Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(61).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(Original_Remarks,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(62).Value = CType(Original_DepartmentId,Long)
            If (Original_ProgramNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(64).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(Original_ProgramNo,String)
            End If
            If (Original_BookingDetailsId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(Original_BookingDetailsId.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(66).Value = Global.System.DBNull.Value
            End If
            If (Original_LCNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(68).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(Original_LCNo,String)
            End If
            If (Original_LCDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(Original_LCDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(70).Value = Global.System.DBNull.Value
            End If
            If (Original_SupplierId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(Original_SupplierId.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(72).Value = Global.System.DBNull.Value
            End If
            If (Original_Imported.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(Original_Imported.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(74).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(75).Value = CType(Original_IssueReceiveTypeId,Long)
            Me.Adapter.UpdateCommand.Parameters(76).Value = CType(Original_ItemId,Long)
            If (Original_YarnLotNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(78).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(Original_YarnLotNo,String)
            End If
            If (Original_Allocation Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(80).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(Original_Allocation,String)
            End If
            If (Original_BrandId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(Original_BrandId.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(82).Value = Global.System.DBNull.Value
            End If
            If (Original_RequisitionId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(Original_RequisitionId.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(84).Value = Global.System.DBNull.Value
            End If
            If (Original_CompanyId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(Original_CompanyId.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(86).Value = Global.System.DBNull.Value
            End If
            If (Original_LocationId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(Original_LocationId.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(88).Value = Global.System.DBNull.Value
            End If
            If (Original_PINO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(90).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(Original_PINO,String)
            End If
            If (Original_ForShade Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(92).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(Original_ForShade,String)
            End If
            If (Original_PIDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(94).Value = CType(Original_PIDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(94).Value = Global.System.DBNull.Value
            End If
            If (Original_UserId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(95).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(96).Value = CType(Original_UserId.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(95).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(96).Value = Global.System.DBNull.Value
            End If
            If (Original_ModifiedOn.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(97).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(98).Value = CType(Original_ModifiedOn.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(97).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(98).Value = Global.System.DBNull.Value
            End If
            If (Original_PIId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(99).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(100).Value = CType(Original_PIId.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(99).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(100).Value = Global.System.DBNull.Value
            End If
            If (Original_LCId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(101).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(102).Value = CType(Original_LCId.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(101).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(102).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(103).Value = CType(Original_IsAlreadyIssued,Boolean)
            If (Original_MasterReceiveId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(104).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(105).Value = CType(Original_MasterReceiveId.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(104).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(105).Value = Global.System.DBNull.Value
            End If
            If (Original_FinishFabricBookingId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(106).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(107).Value = CType(Original_FinishFabricBookingId.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(106).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(107).Value = Global.System.DBNull.Value
            End If
            If (Original_KnittingOrderId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(108).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(109).Value = CType(Original_KnittingOrderId.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(108).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(109).Value = Global.System.DBNull.Value
            End If
            If (Original_MRRNo.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(110).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(111).Value = CType(Original_MRRNo.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(110).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(111).Value = Global.System.DBNull.Value
            End If
            If (Original_YDOrderId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(112).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(113).Value = CType(Original_YDOrderId.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(112).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(113).Value = Global.System.DBNull.Value
            End If
            If (Original_YDOrderDetailsId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(114).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(115).Value = CType(Original_YDOrderDetailsId.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(114).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(115).Value = Global.System.DBNull.Value
            End If
            If (Original_QtyPerPacket.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(116).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(117).Value = CType(Original_QtyPerPacket.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(116).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(117).Value = Global.System.DBNull.Value
            End If
            If (Original_PacketQuantity.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(118).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(119).Value = CType(Original_PacketQuantity.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(118).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(119).Value = Global.System.DBNull.Value
            End If
            If (Original_MRRDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(120).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(121).Value = CType(Original_MRRDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(120).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(121).Value = Global.System.DBNull.Value
            End If
            If (Original_Reference Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(122).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(123).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(122).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(123).Value = CType(Original_Reference,String)
            End If
            If (Original_TestStatus Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(124).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(125).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(124).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(125).Value = CType(Original_TestStatus,String)
            End If
            If (Original_TestComments Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(126).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(127).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(126).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(127).Value = CType(Original_TestComments,String)
            End If
            If (Original_Price.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(128).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(129).Value = CType(Original_Price.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(128).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(129).Value = Global.System.DBNull.Value
            End If
            If (Original_DollarValue.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(130).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(131).Value = CType(Original_DollarValue.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(130).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(131).Value = Global.System.DBNull.Value
            End If
            If (Original_ManufactureDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(132).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(133).Value = CType(Original_ManufactureDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(132).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(133).Value = Global.System.DBNull.Value
            End If
            If (Original_ExpiryDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(134).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(135).Value = CType(Original_ExpiryDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(134).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(135).Value = Global.System.DBNull.Value
            End If
            If (Original_IsLeftOver.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(136).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(137).Value = CType(Original_IsLeftOver.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(136).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(137).Value = Global.System.DBNull.Value
            End If
            If (Original_IsOrganic.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(138).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(139).Value = CType(Original_IsOrganic.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(138).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(139).Value = Global.System.DBNull.Value
            End If
            If (Original_LeftOverQuantity.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(140).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(141).Value = CType(Original_LeftOverQuantity.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(140).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(141).Value = Global.System.DBNull.Value
            End If
            If (Original_TransBookingDetailsId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(142).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(143).Value = CType(Original_TransBookingDetailsId.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(142).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(143).Value = Global.System.DBNull.Value
            End If
            If (Original_LotNoWOLC Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(144).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(145).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(144).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(145).Value = CType(Original_LotNoWOLC,String)
            End If
            If (Original_ActReceiveQuantity.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(146).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(147).Value = CType(Original_ActReceiveQuantity.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(146).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(147).Value = Global.System.DBNull.Value
            End If
            If (Original_ActUnitId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(148).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(149).Value = CType(Original_ActUnitId.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(148).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(149).Value = Global.System.DBNull.Value
            End If
            If (Original_UnitId Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(150).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(151).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(150).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(151).Value = CType(Original_UnitId,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(152).Value = CType(ReceiveId,Long)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal ReceiveDate As Date,  _
                    ByVal ChallanNo As String,  _
                    ByVal ReceiveQuantity As Global.System.Nullable(Of Decimal),  _
                    ByVal BranchId As Global.System.Nullable(Of Long),  _
                    ByVal Remarks As String,  _
                    ByVal DepartmentId As Long,  _
                    ByVal ProgramNo As String,  _
                    ByVal BookingDetailsId As Global.System.Nullable(Of Long),  _
                    ByVal LCNo As String,  _
                    ByVal LCDate As Global.System.Nullable(Of Date),  _
                    ByVal SupplierId As Global.System.Nullable(Of Long),  _
                    ByVal Imported As Global.System.Nullable(Of Boolean),  _
                    ByVal IssueReceiveTypeId As Long,  _
                    ByVal ItemId As Long,  _
                    ByVal YarnLotNo As String,  _
                    ByVal Allocation As String,  _
                    ByVal BrandId As Global.System.Nullable(Of Long),  _
                    ByVal RequisitionId As Global.System.Nullable(Of Long),  _
                    ByVal CompanyId As Global.System.Nullable(Of Long),  _
                    ByVal LocationId As Global.System.Nullable(Of Long),  _
                    ByVal PINO As String,  _
                    ByVal ForShade As String,  _
                    ByVal PIDate As Global.System.Nullable(Of Date),  _
                    ByVal UserId As Global.System.Nullable(Of Long),  _
                    ByVal ModifiedOn As Global.System.Nullable(Of Date),  _
                    ByVal PIId As Global.System.Nullable(Of Long),  _
                    ByVal LCId As Global.System.Nullable(Of Long),  _
                    ByVal IsAlreadyIssued As Boolean,  _
                    ByVal MasterReceiveId As Global.System.Nullable(Of Long),  _
                    ByVal FinishFabricBookingId As Global.System.Nullable(Of Long),  _
                    ByVal KnittingOrderId As Global.System.Nullable(Of Long),  _
                    ByVal MRRNo As Global.System.Nullable(Of Integer),  _
                    ByVal YDOrderId As Global.System.Nullable(Of Long),  _
                    ByVal YDOrderDetailsId As Global.System.Nullable(Of Long),  _
                    ByVal QtyPerPacket As Global.System.Nullable(Of Decimal),  _
                    ByVal PacketQuantity As Global.System.Nullable(Of Decimal),  _
                    ByVal MRRDate As Global.System.Nullable(Of Date),  _
                    ByVal Reference As String,  _
                    ByVal TestStatus As String,  _
                    ByVal TestComments As String,  _
                    ByVal Price As Global.System.Nullable(Of Decimal),  _
                    ByVal DollarValue As Global.System.Nullable(Of Decimal),  _
                    ByVal ManufactureDate As Global.System.Nullable(Of Date),  _
                    ByVal ExpiryDate As Global.System.Nullable(Of Date),  _
                    ByVal IsLeftOver As Global.System.Nullable(Of Boolean),  _
                    ByVal IsOrganic As Global.System.Nullable(Of Boolean),  _
                    ByVal LeftOverQuantity As Global.System.Nullable(Of Decimal),  _
                    ByVal TransBookingDetailsId As Global.System.Nullable(Of Long),  _
                    ByVal LotNoWOLC As String,  _
                    ByVal ActReceiveQuantity As Global.System.Nullable(Of Decimal),  _
                    ByVal ActUnitId As Global.System.Nullable(Of Long),  _
                    ByVal UnitId As String,  _
                    ByVal Original_ReceiveId As Long,  _
                    ByVal Original_ReceiveDate As Date,  _
                    ByVal Original_ChallanNo As String,  _
                    ByVal Original_ReceiveQuantity As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_BranchId As Global.System.Nullable(Of Long),  _
                    ByVal Original_Remarks As String,  _
                    ByVal Original_DepartmentId As Long,  _
                    ByVal Original_ProgramNo As String,  _
                    ByVal Original_BookingDetailsId As Global.System.Nullable(Of Long),  _
                    ByVal Original_LCNo As String,  _
                    ByVal Original_LCDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_SupplierId As Global.System.Nullable(Of Long),  _
                    ByVal Original_Imported As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_IssueReceiveTypeId As Long,  _
                    ByVal Original_ItemId As Long,  _
                    ByVal Original_YarnLotNo As String,  _
                    ByVal Original_Allocation As String,  _
                    ByVal Original_BrandId As Global.System.Nullable(Of Long),  _
                    ByVal Original_RequisitionId As Global.System.Nullable(Of Long),  _
                    ByVal Original_CompanyId As Global.System.Nullable(Of Long),  _
                    ByVal Original_LocationId As Global.System.Nullable(Of Long),  _
                    ByVal Original_PINO As String,  _
                    ByVal Original_ForShade As String,  _
                    ByVal Original_PIDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_UserId As Global.System.Nullable(Of Long),  _
                    ByVal Original_ModifiedOn As Global.System.Nullable(Of Date),  _
                    ByVal Original_PIId As Global.System.Nullable(Of Long),  _
                    ByVal Original_LCId As Global.System.Nullable(Of Long),  _
                    ByVal Original_IsAlreadyIssued As Boolean,  _
                    ByVal Original_MasterReceiveId As Global.System.Nullable(Of Long),  _
                    ByVal Original_FinishFabricBookingId As Global.System.Nullable(Of Long),  _
                    ByVal Original_KnittingOrderId As Global.System.Nullable(Of Long),  _
                    ByVal Original_MRRNo As Global.System.Nullable(Of Integer),  _
                    ByVal Original_YDOrderId As Global.System.Nullable(Of Long),  _
                    ByVal Original_YDOrderDetailsId As Global.System.Nullable(Of Long),  _
                    ByVal Original_QtyPerPacket As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PacketQuantity As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_MRRDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_Reference As String,  _
                    ByVal Original_TestStatus As String,  _
                    ByVal Original_TestComments As String,  _
                    ByVal Original_Price As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_DollarValue As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_ManufactureDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_ExpiryDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_IsLeftOver As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_IsOrganic As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_LeftOverQuantity As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_TransBookingDetailsId As Global.System.Nullable(Of Long),  _
                    ByVal Original_LotNoWOLC As String,  _
                    ByVal Original_ActReceiveQuantity As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_ActUnitId As Global.System.Nullable(Of Long),  _
                    ByVal Original_UnitId As String) As Integer
            Return Me.Update(ReceiveDate, ChallanNo, ReceiveQuantity, BranchId, Remarks, DepartmentId, ProgramNo, BookingDetailsId, LCNo, LCDate, SupplierId, Imported, IssueReceiveTypeId, ItemId, YarnLotNo, Allocation, BrandId, RequisitionId, CompanyId, LocationId, PINO, ForShade, PIDate, UserId, ModifiedOn, PIId, LCId, IsAlreadyIssued, MasterReceiveId, FinishFabricBookingId, KnittingOrderId, MRRNo, YDOrderId, YDOrderDetailsId, QtyPerPacket, PacketQuantity, MRRDate, Reference, TestStatus, TestComments, Price, DollarValue, ManufactureDate, ExpiryDate, IsLeftOver, IsOrganic, LeftOverQuantity, TransBookingDetailsId, LotNoWOLC, ActReceiveQuantity, ActUnitId, UnitId, Original_ReceiveId, Original_ReceiveDate, Original_ChallanNo, Original_ReceiveQuantity, Original_BranchId, Original_Remarks, Original_DepartmentId, Original_ProgramNo, Original_BookingDetailsId, Original_LCNo, Original_LCDate, Original_SupplierId, Original_Imported, Original_IssueReceiveTypeId, Original_ItemId, Original_YarnLotNo, Original_Allocation, Original_BrandId, Original_RequisitionId, Original_CompanyId, Original_LocationId, Original_PINO, Original_ForShade, Original_PIDate, Original_UserId, Original_ModifiedOn, Original_PIId, Original_LCId, Original_IsAlreadyIssued, Original_MasterReceiveId, Original_FinishFabricBookingId, Original_KnittingOrderId, Original_MRRNo, Original_YDOrderId, Original_YDOrderDetailsId, Original_QtyPerPacket, Original_PacketQuantity, Original_MRRDate, Original_Reference, Original_TestStatus, Original_TestComments, Original_Price, Original_DollarValue, Original_ManufactureDate, Original_ExpiryDate, Original_IsLeftOver, Original_IsOrganic, Original_LeftOverQuantity, Original_TransBookingDetailsId, Original_LotNoWOLC, Original_ActReceiveQuantity, Original_ActUnitId, Original_UnitId, Original_ReceiveId)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, false)>  _
        Public Overloads Overridable Function UpdateBookingDetailsId(ByVal BookingDetailsId As Global.System.Nullable(Of Long), ByVal Original_ReceiveId As Long) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(9)
            If (BookingDetailsId.HasValue = true) Then
                command.Parameters(0).Value = CType(BookingDetailsId.Value,Long)
            Else
                command.Parameters(0).Value = Global.System.DBNull.Value
            End If
            command.Parameters(1).Value = CType(Original_ReceiveId,Long)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class TotalReceiveQuantityTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "TotalReceiveQuantity"
            tableMapping.ColumnMappings.Add("TotalReceiveQuantity", "TotalReceiveQuantity")
            tableMapping.ColumnMappings.Add("BookingDetailsId", "BookingDetailsId")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.KSoft_Inventory.My.MySettings.Default.KSoft_InventoryConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT     SUM(ReceiveQuantity) AS TotalReceiveQuantity, BookingDetailsId"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM  "& _ 
                "       Receive"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP BY BookingDetailsId"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"HAVING      (BookingDetailsId = @Book"& _ 
                "ingDetailsId)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BookingDetailsId", Global.System.Data.SqlDbType.BigInt, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "BookingDetailsId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As ReceiveDataSet.TotalReceiveQuantityDataTable, ByVal BookingDetailsId As Global.System.Nullable(Of Long)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (BookingDetailsId.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(BookingDetailsId.Value,Long)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal BookingDetailsId As Global.System.Nullable(Of Long)) As ReceiveDataSet.TotalReceiveQuantityDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (BookingDetailsId.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(BookingDetailsId.Value,Long)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As ReceiveDataSet.TotalReceiveQuantityDataTable = New ReceiveDataSet.TotalReceiveQuantityDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class MRNoLookUpTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "MRNOLookUp"
            tableMapping.ColumnMappings.Add("ReceiveId", "ReceiveId")
            tableMapping.ColumnMappings.Add("ReceiveDate", "ReceiveDate")
            tableMapping.ColumnMappings.Add("ChallanNo", "ChallanNo")
            tableMapping.ColumnMappings.Add("DepartmentId", "DepartmentId")
            tableMapping.ColumnMappings.Add("ItemId", "ItemId")
            tableMapping.ColumnMappings.Add("IsAlreadyIssued", "IsAlreadyIssued")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [Receive] WHERE (([ReceiveId] = @Original_ReceiveId) AND ([ReceiveDat"& _ 
                "e] = @Original_ReceiveDate) AND ((@IsNull_ChallanNo = 1 AND [ChallanNo] IS NULL)"& _ 
                " OR ([ChallanNo] = @Original_ChallanNo)) AND ([DepartmentId] = @Original_Departm"& _ 
                "entId) AND ([ItemId] = @Original_ItemId) AND ([IsAlreadyIssued] = @Original_IsAl"& _ 
                "readyIssued))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ReceiveId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceiveId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ReceiveDate", Global.System.Data.SqlDbType.SmallDateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceiveDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ChallanNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChallanNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ChallanNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChallanNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DepartmentId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DepartmentId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ItemId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ItemId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IsAlreadyIssued", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsAlreadyIssued", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [Receive] ([ReceiveDate], [ChallanNo], [DepartmentId], [ItemId], [IsA"& _ 
                "lreadyIssued]) VALUES (@ReceiveDate, @ChallanNo, @DepartmentId, @ItemId, @IsAlre"& _ 
                "adyIssued);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ReceiveId, ReceiveDate, ChallanNo, DepartmentId, ItemId, IsA"& _ 
                "lreadyIssued FROM Receive WHERE (ReceiveId = SCOPE_IDENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ReceiveDate", Global.System.Data.SqlDbType.SmallDateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceiveDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ChallanNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChallanNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DepartmentId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DepartmentId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ItemId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ItemId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsAlreadyIssued", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsAlreadyIssued", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [Receive] SET [ReceiveDate] = @ReceiveDate, [ChallanNo] = @ChallanNo, [Dep"& _ 
                "artmentId] = @DepartmentId, [ItemId] = @ItemId, [IsAlreadyIssued] = @IsAlreadyIs"& _ 
                "sued WHERE (([ReceiveId] = @Original_ReceiveId) AND ([ReceiveDate] = @Original_R"& _ 
                "eceiveDate) AND ((@IsNull_ChallanNo = 1 AND [ChallanNo] IS NULL) OR ([ChallanNo]"& _ 
                " = @Original_ChallanNo)) AND ([DepartmentId] = @Original_DepartmentId) AND ([Ite"& _ 
                "mId] = @Original_ItemId) AND ([IsAlreadyIssued] = @Original_IsAlreadyIssued));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "SELECT ReceiveId, ReceiveDate, ChallanNo, DepartmentId, ItemId, IsAlreadyIssued "& _ 
                "FROM Receive WHERE (ReceiveId = @ReceiveId)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ReceiveDate", Global.System.Data.SqlDbType.SmallDateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceiveDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ChallanNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChallanNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DepartmentId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DepartmentId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ItemId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ItemId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsAlreadyIssued", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsAlreadyIssued", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ReceiveId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceiveId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ReceiveDate", Global.System.Data.SqlDbType.SmallDateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceiveDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ChallanNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChallanNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ChallanNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChallanNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DepartmentId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DepartmentId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ItemId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ItemId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IsAlreadyIssued", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsAlreadyIssued", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ReceiveId", Global.System.Data.SqlDbType.BigInt, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceiveId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.KSoft_Inventory.My.MySettings.Default.KSoft_InventoryConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        ReceiveId, ReceiveDate, ChallanNo, DepartmentId, ItemId, IsAlreadyI"& _ 
                "ssued"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            Receive"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (DepartmentId = @DepartmentId) AND "& _ 
                "(ItemId = @ItemId) AND (IsAlreadyIssued <> 1)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DepartmentId", Global.System.Data.SqlDbType.BigInt, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "DepartmentId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ItemId", Global.System.Data.SqlDbType.BigInt, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "ItemId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        MIN(ReceiveId) AS MRNo, ChallanNo, MIN(ReceiveDate) AS ReceiveDate,"& _ 
                " ItemId, IssueReceiveTypeId"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            Receive"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP BY ChallanNo, ItemId"& _ 
                ", IssueReceiveTypeId"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"HAVING        (ItemId = @ItemId) AND (IssueReceiveTypeId I"& _ 
                "N (1, 2, 6))"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY MIN(ReceiveId)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ItemId", Global.System.Data.SqlDbType.BigInt, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "ItemId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function FillByDepartmentId(ByVal dataTable As ReceiveDataSet.MRNOLookUpDataTable, ByVal DepartmentId As Long, ByVal ItemId As Long) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(DepartmentId,Long)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(ItemId,Long)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetDataByDepartmentId(ByVal DepartmentId As Long, ByVal ItemId As Long) As ReceiveDataSet.MRNOLookUpDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(DepartmentId,Long)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(ItemId,Long)
            Dim dataTable As ReceiveDataSet.MRNOLookUpDataTable = New ReceiveDataSet.MRNOLookUpDataTable(true)
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As ReceiveDataSet.MRNOLookUpDataTable, ByVal ItemId As Long) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(ItemId,Long)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetData(ByVal ItemId As Long) As ReceiveDataSet.MRNOLookUpDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(ItemId,Long)
            Dim dataTable As ReceiveDataSet.MRNOLookUpDataTable = New ReceiveDataSet.MRNOLookUpDataTable(true)
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As ReceiveDataSet.MRNOLookUpDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As ReceiveDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "MRNOLookUp")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_ReceiveId As Long, ByVal Original_ReceiveDate As Date, ByVal Original_ChallanNo As String, ByVal Original_DepartmentId As Long, ByVal Original_ItemId As Long, ByVal Original_IsAlreadyIssued As Boolean) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ReceiveId,Long)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_ReceiveDate,Date)
            If (Original_ChallanNo Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_ChallanNo,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_DepartmentId,Long)
            Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_ItemId,Long)
            Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_IsAlreadyIssued,Boolean)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal ReceiveDate As Date, ByVal ChallanNo As String, ByVal DepartmentId As Long, ByVal ItemId As Long, ByVal IsAlreadyIssued As Boolean) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(ReceiveDate,Date)
            If (ChallanNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(ChallanNo,String)
            End If
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(DepartmentId,Long)
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(ItemId,Long)
            Me.Adapter.InsertCommand.Parameters(4).Value = CType(IsAlreadyIssued,Boolean)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal ReceiveDate As Date, ByVal ChallanNo As String, ByVal DepartmentId As Long, ByVal ItemId As Long, ByVal IsAlreadyIssued As Boolean, ByVal Original_ReceiveId As Long, ByVal Original_ReceiveDate As Date, ByVal Original_ChallanNo As String, ByVal Original_DepartmentId As Long, ByVal Original_ItemId As Long, ByVal Original_IsAlreadyIssued As Boolean, ByVal ReceiveId As Long) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(ReceiveDate,Date)
            If (ChallanNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(ChallanNo,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(DepartmentId,Long)
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(ItemId,Long)
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(IsAlreadyIssued,Boolean)
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Original_ReceiveId,Long)
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_ReceiveDate,Date)
            If (Original_ChallanNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_ChallanNo,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_DepartmentId,Long)
            Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_ItemId,Long)
            Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_IsAlreadyIssued,Boolean)
            Me.Adapter.UpdateCommand.Parameters(12).Value = CType(ReceiveId,Long)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class ReceivedMRNoLookupTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "ReceivedMRNoLookup"
            tableMapping.ColumnMappings.Add("MRNo", "MRNo")
            tableMapping.ColumnMappings.Add("ChallanNo", "ChallanNo")
            tableMapping.ColumnMappings.Add("ReceiveDate", "ReceiveDate")
            tableMapping.ColumnMappings.Add("ItemId", "ItemId")
            tableMapping.ColumnMappings.Add("IssueReceiveTypeId", "IssueReceiveTypeId")
            tableMapping.ColumnMappings.Add("IsAlreadyIssued", "IsAlreadyIssued")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.KSoft_Inventory.My.MySettings.Default.KSoft_InventoryConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        MIN(ReceiveId) AS MRNo, ChallanNo, MIN(ReceiveDate) AS ReceiveDate,"& _ 
                " ItemId, IssueReceiveTypeId, IsAlreadyIssued"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            Receive"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP BY "& _ 
                "ChallanNo, ItemId, IssueReceiveTypeId, IsAlreadyIssued"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"HAVING        (ItemId = "& _ 
                "@ItemId) AND (IssueReceiveTypeId IN (1, 2)) AND (IsAlreadyIssued <> 1)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY"& _ 
                " MRNo"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ItemId", Global.System.Data.SqlDbType.BigInt, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "ItemId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        MIN(ReceiveId) AS MRNo, ChallanNo, MIN(ReceiveDate) AS ReceiveDate,"& _ 
                " ItemId, IssueReceiveTypeId, IsAlreadyIssued"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            Receive"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP BY "& _ 
                "ChallanNo, ItemId, IssueReceiveTypeId, IsAlreadyIssued"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"HAVING        (ItemId = "& _ 
                "@ItemId) AND (IssueReceiveTypeId IN (1, 2))"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY MRNo"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ItemId", Global.System.Data.SqlDbType.BigInt, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "ItemId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As ReceiveDataSet.ReceivedMRNoLookupDataTable, ByVal ItemId As Long) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(ItemId,Long)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal ItemId As Long) As ReceiveDataSet.ReceivedMRNoLookupDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(ItemId,Long)
            Dim dataTable As ReceiveDataSet.ReceivedMRNoLookupDataTable = New ReceiveDataSet.ReceivedMRNoLookupDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByAll(ByVal dataTable As ReceiveDataSet.ReceivedMRNoLookupDataTable, ByVal ItemId As Long) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(ItemId,Long)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByAll(ByVal ItemId As Long) As ReceiveDataSet.ReceivedMRNoLookupDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(ItemId,Long)
            Dim dataTable As ReceiveDataSet.ReceivedMRNoLookupDataTable = New ReceiveDataSet.ReceivedMRNoLookupDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _receiveTableAdapter As ReceiveTableAdapter
        
        Private _mRNoLookUpTableAdapter As MRNoLookUpTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property ReceiveTableAdapter() As ReceiveTableAdapter
            Get
                Return Me._receiveTableAdapter
            End Get
            Set
                Me._receiveTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property MRNoLookUpTableAdapter() As MRNoLookUpTableAdapter
            Get
                Return Me._mRNoLookUpTableAdapter
            End Get
            Set
                Me._mRNoLookUpTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._receiveTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._receiveTableAdapter.Connection) Is Nothing)) Then
                    Return Me._receiveTableAdapter.Connection
                End If
                If ((Not (Me._mRNoLookUpTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._mRNoLookUpTableAdapter.Connection) Is Nothing)) Then
                    Return Me._mRNoLookUpTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._receiveTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._mRNoLookUpTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As ReceiveDataSet, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._receiveTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.Receive.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._receiveTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._mRNoLookUpTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.MRNOLookUp.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._mRNoLookUpTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As ReceiveDataSet, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._receiveTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.Receive.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._receiveTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._mRNoLookUpTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.MRNOLookUp.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._mRNoLookUpTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As ReceiveDataSet, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._mRNoLookUpTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.MRNOLookUp.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._mRNoLookUpTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._receiveTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.Receive.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._receiveTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As ReceiveDataSet) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._receiveTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._receiveTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._mRNoLookUpTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._mRNoLookUpTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._receiveTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._receiveTableAdapter, Me._receiveTableAdapter.Connection)
                    Me._receiveTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._receiveTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._receiveTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._receiveTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._receiveTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._mRNoLookUpTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._mRNoLookUpTableAdapter, Me._mRNoLookUpTableAdapter.Connection)
                    Me._mRNoLookUpTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._mRNoLookUpTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._mRNoLookUpTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._mRNoLookUpTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._mRNoLookUpTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._receiveTableAdapter) Is Nothing) Then
                    Me._receiveTableAdapter.Connection = CType(revertConnections(Me._receiveTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._receiveTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._mRNoLookUpTableAdapter) Is Nothing) Then
                    Me._mRNoLookUpTableAdapter.Connection = CType(revertConnections(Me._mRNoLookUpTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._mRNoLookUpTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
