'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("OIM_SheetDataSet"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class OIM_SheetDataSet
    Inherits Global.System.Data.DataSet
    
    Private tableOIM_SHEET As OIM_SHEETDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("OIM_SHEET")) Is Nothing) Then
                MyBase.Tables.Add(New OIM_SHEETDataTable(ds.Tables("OIM_SHEET")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property OIM_SHEET() As OIM_SHEETDataTable
        Get
            Return Me.tableOIM_SHEET
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As OIM_SheetDataSet = CType(MyBase.Clone,OIM_SheetDataSet)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("OIM_SHEET")) Is Nothing) Then
                MyBase.Tables.Add(New OIM_SHEETDataTable(ds.Tables("OIM_SHEET")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableOIM_SHEET = CType(MyBase.Tables("OIM_SHEET"),OIM_SHEETDataTable)
        If (initTable = true) Then
            If (Not (Me.tableOIM_SHEET) Is Nothing) Then
                Me.tableOIM_SHEET.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "OIM_SheetDataSet"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/OIM_SheetDataSet.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableOIM_SHEET = New OIM_SHEETDataTable()
        MyBase.Tables.Add(Me.tableOIM_SHEET)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeOIM_SHEET() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As OIM_SheetDataSet = New OIM_SheetDataSet()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub OIM_SHEETRowChangeEventHandler(ByVal sender As Object, ByVal e As OIM_SHEETRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class OIM_SHEETDataTable
        Inherits Global.System.Data.TypedTableBase(Of OIM_SHEETRow)
        
        Private columnOIM_ID As Global.System.Data.DataColumn
        
        Private columnOIM_NO As Global.System.Data.DataColumn
        
        Private columnPO_DATE As Global.System.Data.DataColumn
        
        Private columnESL_REF As Global.System.Data.DataColumn
        
        Private columnSTYLE_NO As Global.System.Data.DataColumn
        
        Private columnDESCRIPTION As Global.System.Data.DataColumn
        
        Private columnFABRIC_DESCRIPTION As Global.System.Data.DataColumn
        
        Private columnPO_NO As Global.System.Data.DataColumn
        
        Private columnCOLOR As Global.System.Data.DataColumn
        
        Private columnCOLOR_CODE As Global.System.Data.DataColumn
        
        Private columnLAB_DIP_REF As Global.System.Data.DataColumn
        
        Private columnORDER_QUANTITY As Global.System.Data.DataColumn
        
        Private columnSEAL_BY_DATE As Global.System.Data.DataColumn
        
        Private columnEX_FACTORY_DATE As Global.System.Data.DataColumn
        
        Private columnMUST_EX_BD As Global.System.Data.DataColumn
        
        Private columnMODE As Global.System.Data.DataColumn
        
        Private columnPACK As Global.System.Data.DataColumn
        
        Private columnTTL_PACKS As Global.System.Data.DataColumn
        
        Private columnFOB_PRICE As Global.System.Data.DataColumn
        
        Private columnPO_TYPE As Global.System.Data.DataColumn
        
        Private columnDESTINATION As Global.System.Data.DataColumn
        
        Private columnADDRESS As Global.System.Data.DataColumn
        
        Private columnTABTEST As Global.System.Data.DataColumn
        
        Private columnCOMMENTS As Global.System.Data.DataColumn
        
        Private columnACKNOWLEDGEMENTDATE As Global.System.Data.DataColumn
        
        Private columnOIM_DATE As Global.System.Data.DataColumn
        
        Private columnIS_ACKNOWLEDGEMENT As Global.System.Data.DataColumn
        
        Private columnIS_OIMRECEIVED As Global.System.Data.DataColumn
        
        Private columnSLNO As Global.System.Data.DataColumn
        
        Private columnBARCODE_RECEIVED As Global.System.Data.DataColumn
        
        Private columnBARCODE_DELIVERED As Global.System.Data.DataColumn
        
        Private columnPRINT_LINE As Global.System.Data.DataColumn
        
        Private columnDepartmentId As Global.System.Data.DataColumn
        
        Private columnDeliveredBy As Global.System.Data.DataColumn
        
        Private columnProgramNo As Global.System.Data.DataColumn
        
        Private columnBARCHODE_PRICE As Global.System.Data.DataColumn
        
        Private columnIS_BARCHODERECEIVED As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "OIM_SHEET"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OIM_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOIM_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OIM_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOIM_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PO_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPO_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ESL_REFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESL_REF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STYLE_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTYLE_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESCRIPTIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESCRIPTION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FABRIC_DESCRIPTIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFABRIC_DESCRIPTION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PO_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPO_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COLORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOLOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COLOR_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOLOR_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LAB_DIP_REFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLAB_DIP_REF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ORDER_QUANTITYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORDER_QUANTITY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SEAL_BY_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSEAL_BY_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EX_FACTORY_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEX_FACTORY_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MUST_EX_BDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMUST_EX_BD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PACKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPACK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TTL_PACKSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTTL_PACKS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FOB_PRICEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFOB_PRICE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PO_TYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPO_TYPE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESTINATIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESTINATION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ADDRESSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADDRESS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TABTESTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTABTEST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COMMENTSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMMENTS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ACKNOWLEDGEMENTDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACKNOWLEDGEMENTDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OIM_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOIM_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IS_ACKNOWLEDGEMENTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIS_ACKNOWLEDGEMENT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IS_OIMRECEIVEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIS_OIMRECEIVED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SLNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSLNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BARCODE_RECEIVEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBARCODE_RECEIVED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BARCODE_DELIVEREDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBARCODE_DELIVERED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRINT_LINEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRINT_LINE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DepartmentIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDepartmentId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DeliveredByColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDeliveredBy
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ProgramNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProgramNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BARCHODE_PRICEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBARCHODE_PRICE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IS_BARCHODERECEIVEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIS_BARCHODERECEIVED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As OIM_SHEETRow
            Get
                Return CType(Me.Rows(index),OIM_SHEETRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event OIM_SHEETRowChanging As OIM_SHEETRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event OIM_SHEETRowChanged As OIM_SHEETRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event OIM_SHEETRowDeleting As OIM_SHEETRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event OIM_SHEETRowDeleted As OIM_SHEETRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddOIM_SHEETRow(ByVal row As OIM_SHEETRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddOIM_SHEETRow( _
                    ByVal OIM_NO As String,  _
                    ByVal PO_DATE As Date,  _
                    ByVal ESL_REF As String,  _
                    ByVal STYLE_NO As String,  _
                    ByVal DESCRIPTION As String,  _
                    ByVal FABRIC_DESCRIPTION As String,  _
                    ByVal PO_NO As String,  _
                    ByVal COLOR As String,  _
                    ByVal COLOR_CODE As String,  _
                    ByVal LAB_DIP_REF As String,  _
                    ByVal ORDER_QUANTITY As Decimal,  _
                    ByVal SEAL_BY_DATE As Date,  _
                    ByVal EX_FACTORY_DATE As Date,  _
                    ByVal MUST_EX_BD As Date,  _
                    ByVal MODE As String,  _
                    ByVal PACK As String,  _
                    ByVal TTL_PACKS As Integer,  _
                    ByVal FOB_PRICE As Decimal,  _
                    ByVal PO_TYPE As String,  _
                    ByVal DESTINATION As String,  _
                    ByVal ADDRESS As String,  _
                    ByVal TABTEST As String,  _
                    ByVal COMMENTS As String,  _
                    ByVal ACKNOWLEDGEMENTDATE As Date,  _
                    ByVal OIM_DATE As Date,  _
                    ByVal IS_ACKNOWLEDGEMENT As Boolean,  _
                    ByVal IS_OIMRECEIVED As Boolean,  _
                    ByVal SLNO As Integer,  _
                    ByVal BARCODE_RECEIVED As Date,  _
                    ByVal BARCODE_DELIVERED As Date,  _
                    ByVal PRINT_LINE As Boolean,  _
                    ByVal DepartmentId As Long,  _
                    ByVal DeliveredBy As String,  _
                    ByVal ProgramNo As String,  _
                    ByVal BARCHODE_PRICE As String,  _
                    ByVal IS_BARCHODERECEIVED As Boolean) As OIM_SHEETRow
            Dim rowOIM_SHEETRow As OIM_SHEETRow = CType(Me.NewRow,OIM_SHEETRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, OIM_NO, PO_DATE, ESL_REF, STYLE_NO, DESCRIPTION, FABRIC_DESCRIPTION, PO_NO, COLOR, COLOR_CODE, LAB_DIP_REF, ORDER_QUANTITY, SEAL_BY_DATE, EX_FACTORY_DATE, MUST_EX_BD, MODE, PACK, TTL_PACKS, FOB_PRICE, PO_TYPE, DESTINATION, ADDRESS, TABTEST, COMMENTS, ACKNOWLEDGEMENTDATE, OIM_DATE, IS_ACKNOWLEDGEMENT, IS_OIMRECEIVED, SLNO, BARCODE_RECEIVED, BARCODE_DELIVERED, PRINT_LINE, DepartmentId, DeliveredBy, ProgramNo, BARCHODE_PRICE, IS_BARCHODERECEIVED}
            rowOIM_SHEETRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowOIM_SHEETRow)
            Return rowOIM_SHEETRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByOIM_ID(ByVal OIM_ID As Long) As OIM_SHEETRow
            Return CType(Me.Rows.Find(New Object() {OIM_ID}),OIM_SHEETRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As OIM_SHEETDataTable = CType(MyBase.Clone,OIM_SHEETDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New OIM_SHEETDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnOIM_ID = MyBase.Columns("OIM_ID")
            Me.columnOIM_NO = MyBase.Columns("OIM_NO")
            Me.columnPO_DATE = MyBase.Columns("PO_DATE")
            Me.columnESL_REF = MyBase.Columns("ESL_REF")
            Me.columnSTYLE_NO = MyBase.Columns("STYLE_NO")
            Me.columnDESCRIPTION = MyBase.Columns("DESCRIPTION")
            Me.columnFABRIC_DESCRIPTION = MyBase.Columns("FABRIC_DESCRIPTION")
            Me.columnPO_NO = MyBase.Columns("PO_NO")
            Me.columnCOLOR = MyBase.Columns("COLOR")
            Me.columnCOLOR_CODE = MyBase.Columns("COLOR_CODE")
            Me.columnLAB_DIP_REF = MyBase.Columns("LAB_DIP_REF")
            Me.columnORDER_QUANTITY = MyBase.Columns("ORDER_QUANTITY")
            Me.columnSEAL_BY_DATE = MyBase.Columns("SEAL_BY_DATE")
            Me.columnEX_FACTORY_DATE = MyBase.Columns("EX_FACTORY_DATE")
            Me.columnMUST_EX_BD = MyBase.Columns("MUST_EX_BD")
            Me.columnMODE = MyBase.Columns("MODE")
            Me.columnPACK = MyBase.Columns("PACK")
            Me.columnTTL_PACKS = MyBase.Columns("TTL_PACKS")
            Me.columnFOB_PRICE = MyBase.Columns("FOB_PRICE")
            Me.columnPO_TYPE = MyBase.Columns("PO_TYPE")
            Me.columnDESTINATION = MyBase.Columns("DESTINATION")
            Me.columnADDRESS = MyBase.Columns("ADDRESS")
            Me.columnTABTEST = MyBase.Columns("TABTEST")
            Me.columnCOMMENTS = MyBase.Columns("COMMENTS")
            Me.columnACKNOWLEDGEMENTDATE = MyBase.Columns("ACKNOWLEDGEMENTDATE")
            Me.columnOIM_DATE = MyBase.Columns("OIM_DATE")
            Me.columnIS_ACKNOWLEDGEMENT = MyBase.Columns("IS_ACKNOWLEDGEMENT")
            Me.columnIS_OIMRECEIVED = MyBase.Columns("IS_OIMRECEIVED")
            Me.columnSLNO = MyBase.Columns("SLNO")
            Me.columnBARCODE_RECEIVED = MyBase.Columns("BARCODE_RECEIVED")
            Me.columnBARCODE_DELIVERED = MyBase.Columns("BARCODE_DELIVERED")
            Me.columnPRINT_LINE = MyBase.Columns("PRINT_LINE")
            Me.columnDepartmentId = MyBase.Columns("DepartmentId")
            Me.columnDeliveredBy = MyBase.Columns("DeliveredBy")
            Me.columnProgramNo = MyBase.Columns("ProgramNo")
            Me.columnBARCHODE_PRICE = MyBase.Columns("BARCHODE_PRICE")
            Me.columnIS_BARCHODERECEIVED = MyBase.Columns("IS_BARCHODERECEIVED")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnOIM_ID = New Global.System.Data.DataColumn("OIM_ID", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOIM_ID)
            Me.columnOIM_NO = New Global.System.Data.DataColumn("OIM_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOIM_NO)
            Me.columnPO_DATE = New Global.System.Data.DataColumn("PO_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPO_DATE)
            Me.columnESL_REF = New Global.System.Data.DataColumn("ESL_REF", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESL_REF)
            Me.columnSTYLE_NO = New Global.System.Data.DataColumn("STYLE_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTYLE_NO)
            Me.columnDESCRIPTION = New Global.System.Data.DataColumn("DESCRIPTION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESCRIPTION)
            Me.columnFABRIC_DESCRIPTION = New Global.System.Data.DataColumn("FABRIC_DESCRIPTION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFABRIC_DESCRIPTION)
            Me.columnPO_NO = New Global.System.Data.DataColumn("PO_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPO_NO)
            Me.columnCOLOR = New Global.System.Data.DataColumn("COLOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOLOR)
            Me.columnCOLOR_CODE = New Global.System.Data.DataColumn("COLOR_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOLOR_CODE)
            Me.columnLAB_DIP_REF = New Global.System.Data.DataColumn("LAB_DIP_REF", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLAB_DIP_REF)
            Me.columnORDER_QUANTITY = New Global.System.Data.DataColumn("ORDER_QUANTITY", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORDER_QUANTITY)
            Me.columnSEAL_BY_DATE = New Global.System.Data.DataColumn("SEAL_BY_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSEAL_BY_DATE)
            Me.columnEX_FACTORY_DATE = New Global.System.Data.DataColumn("EX_FACTORY_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEX_FACTORY_DATE)
            Me.columnMUST_EX_BD = New Global.System.Data.DataColumn("MUST_EX_BD", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMUST_EX_BD)
            Me.columnMODE = New Global.System.Data.DataColumn("MODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODE)
            Me.columnPACK = New Global.System.Data.DataColumn("PACK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPACK)
            Me.columnTTL_PACKS = New Global.System.Data.DataColumn("TTL_PACKS", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTTL_PACKS)
            Me.columnFOB_PRICE = New Global.System.Data.DataColumn("FOB_PRICE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFOB_PRICE)
            Me.columnPO_TYPE = New Global.System.Data.DataColumn("PO_TYPE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPO_TYPE)
            Me.columnDESTINATION = New Global.System.Data.DataColumn("DESTINATION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESTINATION)
            Me.columnADDRESS = New Global.System.Data.DataColumn("ADDRESS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADDRESS)
            Me.columnTABTEST = New Global.System.Data.DataColumn("TABTEST", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTABTEST)
            Me.columnCOMMENTS = New Global.System.Data.DataColumn("COMMENTS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMMENTS)
            Me.columnACKNOWLEDGEMENTDATE = New Global.System.Data.DataColumn("ACKNOWLEDGEMENTDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACKNOWLEDGEMENTDATE)
            Me.columnOIM_DATE = New Global.System.Data.DataColumn("OIM_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOIM_DATE)
            Me.columnIS_ACKNOWLEDGEMENT = New Global.System.Data.DataColumn("IS_ACKNOWLEDGEMENT", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIS_ACKNOWLEDGEMENT)
            Me.columnIS_OIMRECEIVED = New Global.System.Data.DataColumn("IS_OIMRECEIVED", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIS_OIMRECEIVED)
            Me.columnSLNO = New Global.System.Data.DataColumn("SLNO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSLNO)
            Me.columnBARCODE_RECEIVED = New Global.System.Data.DataColumn("BARCODE_RECEIVED", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBARCODE_RECEIVED)
            Me.columnBARCODE_DELIVERED = New Global.System.Data.DataColumn("BARCODE_DELIVERED", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBARCODE_DELIVERED)
            Me.columnPRINT_LINE = New Global.System.Data.DataColumn("PRINT_LINE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRINT_LINE)
            Me.columnDepartmentId = New Global.System.Data.DataColumn("DepartmentId", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDepartmentId)
            Me.columnDeliveredBy = New Global.System.Data.DataColumn("DeliveredBy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDeliveredBy)
            Me.columnProgramNo = New Global.System.Data.DataColumn("ProgramNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProgramNo)
            Me.columnBARCHODE_PRICE = New Global.System.Data.DataColumn("BARCHODE_PRICE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBARCHODE_PRICE)
            Me.columnIS_BARCHODERECEIVED = New Global.System.Data.DataColumn("IS_BARCHODERECEIVED", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIS_BARCHODERECEIVED)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnOIM_ID}, true))
            Me.columnOIM_ID.AutoIncrement = true
            Me.columnOIM_ID.AutoIncrementSeed = -1
            Me.columnOIM_ID.AutoIncrementStep = -1
            Me.columnOIM_ID.AllowDBNull = false
            Me.columnOIM_ID.ReadOnly = true
            Me.columnOIM_ID.Unique = true
            Me.columnOIM_NO.MaxLength = 50
            Me.columnESL_REF.MaxLength = 50
            Me.columnSTYLE_NO.MaxLength = 50
            Me.columnDESCRIPTION.MaxLength = 50
            Me.columnFABRIC_DESCRIPTION.MaxLength = 50
            Me.columnPO_NO.MaxLength = 50
            Me.columnCOLOR.MaxLength = 50
            Me.columnCOLOR_CODE.MaxLength = 50
            Me.columnLAB_DIP_REF.MaxLength = 50
            Me.columnMODE.MaxLength = 50
            Me.columnPACK.MaxLength = 50
            Me.columnPO_TYPE.MaxLength = 50
            Me.columnDESTINATION.MaxLength = 50
            Me.columnADDRESS.MaxLength = 50
            Me.columnTABTEST.MaxLength = 10
            Me.columnCOMMENTS.MaxLength = 50
            Me.columnIS_ACKNOWLEDGEMENT.AllowDBNull = false
            Me.columnIS_ACKNOWLEDGEMENT.DefaultValue = CType(false,Boolean)
            Me.columnIS_OIMRECEIVED.AllowDBNull = false
            Me.columnIS_OIMRECEIVED.DefaultValue = CType(false,Boolean)
            Me.columnPRINT_LINE.AllowDBNull = false
            Me.columnPRINT_LINE.DefaultValue = CType(false,Boolean)
            Me.columnDeliveredBy.MaxLength = 50
            Me.columnProgramNo.MaxLength = 50
            Me.columnBARCHODE_PRICE.MaxLength = 20
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewOIM_SHEETRow() As OIM_SHEETRow
            Return CType(Me.NewRow,OIM_SHEETRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New OIM_SHEETRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(OIM_SHEETRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.OIM_SHEETRowChangedEvent) Is Nothing) Then
                RaiseEvent OIM_SHEETRowChanged(Me, New OIM_SHEETRowChangeEvent(CType(e.Row,OIM_SHEETRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.OIM_SHEETRowChangingEvent) Is Nothing) Then
                RaiseEvent OIM_SHEETRowChanging(Me, New OIM_SHEETRowChangeEvent(CType(e.Row,OIM_SHEETRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.OIM_SHEETRowDeletedEvent) Is Nothing) Then
                RaiseEvent OIM_SHEETRowDeleted(Me, New OIM_SHEETRowChangeEvent(CType(e.Row,OIM_SHEETRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.OIM_SHEETRowDeletingEvent) Is Nothing) Then
                RaiseEvent OIM_SHEETRowDeleting(Me, New OIM_SHEETRowChangeEvent(CType(e.Row,OIM_SHEETRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveOIM_SHEETRow(ByVal row As OIM_SHEETRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As OIM_SheetDataSet = New OIM_SheetDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "OIM_SHEETDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class OIM_SHEETRow
        Inherits Global.System.Data.DataRow
        
        Private tableOIM_SHEET As OIM_SHEETDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableOIM_SHEET = CType(Me.Table,OIM_SHEETDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OIM_ID() As Long
            Get
                Return CType(Me(Me.tableOIM_SHEET.OIM_IDColumn),Long)
            End Get
            Set
                Me(Me.tableOIM_SHEET.OIM_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OIM_NO() As String
            Get
                Try 
                    Return CType(Me(Me.tableOIM_SHEET.OIM_NOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OIM_NO' in table 'OIM_SHEET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOIM_SHEET.OIM_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PO_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableOIM_SHEET.PO_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PO_DATE' in table 'OIM_SHEET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOIM_SHEET.PO_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ESL_REF() As String
            Get
                Try 
                    Return CType(Me(Me.tableOIM_SHEET.ESL_REFColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ESL_REF' in table 'OIM_SHEET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOIM_SHEET.ESL_REFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STYLE_NO() As String
            Get
                Try 
                    Return CType(Me(Me.tableOIM_SHEET.STYLE_NOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'STYLE_NO' in table 'OIM_SHEET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOIM_SHEET.STYLE_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESCRIPTION() As String
            Get
                Try 
                    Return CType(Me(Me.tableOIM_SHEET.DESCRIPTIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESCRIPTION' in table 'OIM_SHEET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOIM_SHEET.DESCRIPTIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FABRIC_DESCRIPTION() As String
            Get
                Try 
                    Return CType(Me(Me.tableOIM_SHEET.FABRIC_DESCRIPTIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FABRIC_DESCRIPTION' in table 'OIM_SHEET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOIM_SHEET.FABRIC_DESCRIPTIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PO_NO() As String
            Get
                Try 
                    Return CType(Me(Me.tableOIM_SHEET.PO_NOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PO_NO' in table 'OIM_SHEET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOIM_SHEET.PO_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COLOR() As String
            Get
                Try 
                    Return CType(Me(Me.tableOIM_SHEET.COLORColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COLOR' in table 'OIM_SHEET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOIM_SHEET.COLORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COLOR_CODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableOIM_SHEET.COLOR_CODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COLOR_CODE' in table 'OIM_SHEET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOIM_SHEET.COLOR_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LAB_DIP_REF() As String
            Get
                Try 
                    Return CType(Me(Me.tableOIM_SHEET.LAB_DIP_REFColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LAB_DIP_REF' in table 'OIM_SHEET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOIM_SHEET.LAB_DIP_REFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ORDER_QUANTITY() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableOIM_SHEET.ORDER_QUANTITYColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ORDER_QUANTITY' in table 'OIM_SHEET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOIM_SHEET.ORDER_QUANTITYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SEAL_BY_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableOIM_SHEET.SEAL_BY_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SEAL_BY_DATE' in table 'OIM_SHEET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOIM_SHEET.SEAL_BY_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EX_FACTORY_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableOIM_SHEET.EX_FACTORY_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EX_FACTORY_DATE' in table 'OIM_SHEET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOIM_SHEET.EX_FACTORY_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MUST_EX_BD() As Date
            Get
                Try 
                    Return CType(Me(Me.tableOIM_SHEET.MUST_EX_BDColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MUST_EX_BD' in table 'OIM_SHEET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOIM_SHEET.MUST_EX_BDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableOIM_SHEET.MODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODE' in table 'OIM_SHEET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOIM_SHEET.MODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PACK() As String
            Get
                Try 
                    Return CType(Me(Me.tableOIM_SHEET.PACKColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PACK' in table 'OIM_SHEET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOIM_SHEET.PACKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TTL_PACKS() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableOIM_SHEET.TTL_PACKSColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TTL_PACKS' in table 'OIM_SHEET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOIM_SHEET.TTL_PACKSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FOB_PRICE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableOIM_SHEET.FOB_PRICEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FOB_PRICE' in table 'OIM_SHEET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOIM_SHEET.FOB_PRICEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PO_TYPE() As String
            Get
                Try 
                    Return CType(Me(Me.tableOIM_SHEET.PO_TYPEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PO_TYPE' in table 'OIM_SHEET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOIM_SHEET.PO_TYPEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESTINATION() As String
            Get
                Try 
                    Return CType(Me(Me.tableOIM_SHEET.DESTINATIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESTINATION' in table 'OIM_SHEET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOIM_SHEET.DESTINATIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ADDRESS() As String
            Get
                Try 
                    Return CType(Me(Me.tableOIM_SHEET.ADDRESSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ADDRESS' in table 'OIM_SHEET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOIM_SHEET.ADDRESSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TABTEST() As String
            Get
                Try 
                    Return CType(Me(Me.tableOIM_SHEET.TABTESTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TABTEST' in table 'OIM_SHEET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOIM_SHEET.TABTESTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COMMENTS() As String
            Get
                Try 
                    Return CType(Me(Me.tableOIM_SHEET.COMMENTSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COMMENTS' in table 'OIM_SHEET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOIM_SHEET.COMMENTSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ACKNOWLEDGEMENTDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableOIM_SHEET.ACKNOWLEDGEMENTDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ACKNOWLEDGEMENTDATE' in table 'OIM_SHEET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOIM_SHEET.ACKNOWLEDGEMENTDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OIM_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableOIM_SHEET.OIM_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OIM_DATE' in table 'OIM_SHEET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOIM_SHEET.OIM_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IS_ACKNOWLEDGEMENT() As Boolean
            Get
                Return CType(Me(Me.tableOIM_SHEET.IS_ACKNOWLEDGEMENTColumn),Boolean)
            End Get
            Set
                Me(Me.tableOIM_SHEET.IS_ACKNOWLEDGEMENTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IS_OIMRECEIVED() As Boolean
            Get
                Return CType(Me(Me.tableOIM_SHEET.IS_OIMRECEIVEDColumn),Boolean)
            End Get
            Set
                Me(Me.tableOIM_SHEET.IS_OIMRECEIVEDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SLNO() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableOIM_SHEET.SLNOColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SLNO' in table 'OIM_SHEET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOIM_SHEET.SLNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BARCODE_RECEIVED() As Date
            Get
                Try 
                    Return CType(Me(Me.tableOIM_SHEET.BARCODE_RECEIVEDColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BARCODE_RECEIVED' in table 'OIM_SHEET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOIM_SHEET.BARCODE_RECEIVEDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BARCODE_DELIVERED() As Date
            Get
                Try 
                    Return CType(Me(Me.tableOIM_SHEET.BARCODE_DELIVEREDColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BARCODE_DELIVERED' in table 'OIM_SHEET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOIM_SHEET.BARCODE_DELIVEREDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRINT_LINE() As Boolean
            Get
                Return CType(Me(Me.tableOIM_SHEET.PRINT_LINEColumn),Boolean)
            End Get
            Set
                Me(Me.tableOIM_SHEET.PRINT_LINEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DepartmentId() As Long
            Get
                Try 
                    Return CType(Me(Me.tableOIM_SHEET.DepartmentIdColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DepartmentId' in table 'OIM_SHEET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOIM_SHEET.DepartmentIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DeliveredBy() As String
            Get
                Try 
                    Return CType(Me(Me.tableOIM_SHEET.DeliveredByColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DeliveredBy' in table 'OIM_SHEET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOIM_SHEET.DeliveredByColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ProgramNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableOIM_SHEET.ProgramNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProgramNo' in table 'OIM_SHEET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOIM_SHEET.ProgramNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BARCHODE_PRICE() As String
            Get
                Try 
                    Return CType(Me(Me.tableOIM_SHEET.BARCHODE_PRICEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BARCHODE_PRICE' in table 'OIM_SHEET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOIM_SHEET.BARCHODE_PRICEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IS_BARCHODERECEIVED() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableOIM_SHEET.IS_BARCHODERECEIVEDColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IS_BARCHODERECEIVED' in table 'OIM_SHEET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOIM_SHEET.IS_BARCHODERECEIVEDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOIM_NONull() As Boolean
            Return Me.IsNull(Me.tableOIM_SHEET.OIM_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOIM_NONull()
            Me(Me.tableOIM_SHEET.OIM_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPO_DATENull() As Boolean
            Return Me.IsNull(Me.tableOIM_SHEET.PO_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPO_DATENull()
            Me(Me.tableOIM_SHEET.PO_DATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsESL_REFNull() As Boolean
            Return Me.IsNull(Me.tableOIM_SHEET.ESL_REFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetESL_REFNull()
            Me(Me.tableOIM_SHEET.ESL_REFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSTYLE_NONull() As Boolean
            Return Me.IsNull(Me.tableOIM_SHEET.STYLE_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSTYLE_NONull()
            Me(Me.tableOIM_SHEET.STYLE_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESCRIPTIONNull() As Boolean
            Return Me.IsNull(Me.tableOIM_SHEET.DESCRIPTIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESCRIPTIONNull()
            Me(Me.tableOIM_SHEET.DESCRIPTIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFABRIC_DESCRIPTIONNull() As Boolean
            Return Me.IsNull(Me.tableOIM_SHEET.FABRIC_DESCRIPTIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFABRIC_DESCRIPTIONNull()
            Me(Me.tableOIM_SHEET.FABRIC_DESCRIPTIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPO_NONull() As Boolean
            Return Me.IsNull(Me.tableOIM_SHEET.PO_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPO_NONull()
            Me(Me.tableOIM_SHEET.PO_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOLORNull() As Boolean
            Return Me.IsNull(Me.tableOIM_SHEET.COLORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOLORNull()
            Me(Me.tableOIM_SHEET.COLORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOLOR_CODENull() As Boolean
            Return Me.IsNull(Me.tableOIM_SHEET.COLOR_CODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOLOR_CODENull()
            Me(Me.tableOIM_SHEET.COLOR_CODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLAB_DIP_REFNull() As Boolean
            Return Me.IsNull(Me.tableOIM_SHEET.LAB_DIP_REFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLAB_DIP_REFNull()
            Me(Me.tableOIM_SHEET.LAB_DIP_REFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsORDER_QUANTITYNull() As Boolean
            Return Me.IsNull(Me.tableOIM_SHEET.ORDER_QUANTITYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetORDER_QUANTITYNull()
            Me(Me.tableOIM_SHEET.ORDER_QUANTITYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSEAL_BY_DATENull() As Boolean
            Return Me.IsNull(Me.tableOIM_SHEET.SEAL_BY_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSEAL_BY_DATENull()
            Me(Me.tableOIM_SHEET.SEAL_BY_DATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEX_FACTORY_DATENull() As Boolean
            Return Me.IsNull(Me.tableOIM_SHEET.EX_FACTORY_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEX_FACTORY_DATENull()
            Me(Me.tableOIM_SHEET.EX_FACTORY_DATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMUST_EX_BDNull() As Boolean
            Return Me.IsNull(Me.tableOIM_SHEET.MUST_EX_BDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMUST_EX_BDNull()
            Me(Me.tableOIM_SHEET.MUST_EX_BDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMODENull() As Boolean
            Return Me.IsNull(Me.tableOIM_SHEET.MODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMODENull()
            Me(Me.tableOIM_SHEET.MODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPACKNull() As Boolean
            Return Me.IsNull(Me.tableOIM_SHEET.PACKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPACKNull()
            Me(Me.tableOIM_SHEET.PACKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTTL_PACKSNull() As Boolean
            Return Me.IsNull(Me.tableOIM_SHEET.TTL_PACKSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTTL_PACKSNull()
            Me(Me.tableOIM_SHEET.TTL_PACKSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFOB_PRICENull() As Boolean
            Return Me.IsNull(Me.tableOIM_SHEET.FOB_PRICEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFOB_PRICENull()
            Me(Me.tableOIM_SHEET.FOB_PRICEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPO_TYPENull() As Boolean
            Return Me.IsNull(Me.tableOIM_SHEET.PO_TYPEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPO_TYPENull()
            Me(Me.tableOIM_SHEET.PO_TYPEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESTINATIONNull() As Boolean
            Return Me.IsNull(Me.tableOIM_SHEET.DESTINATIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESTINATIONNull()
            Me(Me.tableOIM_SHEET.DESTINATIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsADDRESSNull() As Boolean
            Return Me.IsNull(Me.tableOIM_SHEET.ADDRESSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetADDRESSNull()
            Me(Me.tableOIM_SHEET.ADDRESSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTABTESTNull() As Boolean
            Return Me.IsNull(Me.tableOIM_SHEET.TABTESTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTABTESTNull()
            Me(Me.tableOIM_SHEET.TABTESTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOMMENTSNull() As Boolean
            Return Me.IsNull(Me.tableOIM_SHEET.COMMENTSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOMMENTSNull()
            Me(Me.tableOIM_SHEET.COMMENTSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsACKNOWLEDGEMENTDATENull() As Boolean
            Return Me.IsNull(Me.tableOIM_SHEET.ACKNOWLEDGEMENTDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetACKNOWLEDGEMENTDATENull()
            Me(Me.tableOIM_SHEET.ACKNOWLEDGEMENTDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOIM_DATENull() As Boolean
            Return Me.IsNull(Me.tableOIM_SHEET.OIM_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOIM_DATENull()
            Me(Me.tableOIM_SHEET.OIM_DATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSLNONull() As Boolean
            Return Me.IsNull(Me.tableOIM_SHEET.SLNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSLNONull()
            Me(Me.tableOIM_SHEET.SLNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBARCODE_RECEIVEDNull() As Boolean
            Return Me.IsNull(Me.tableOIM_SHEET.BARCODE_RECEIVEDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBARCODE_RECEIVEDNull()
            Me(Me.tableOIM_SHEET.BARCODE_RECEIVEDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBARCODE_DELIVEREDNull() As Boolean
            Return Me.IsNull(Me.tableOIM_SHEET.BARCODE_DELIVEREDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBARCODE_DELIVEREDNull()
            Me(Me.tableOIM_SHEET.BARCODE_DELIVEREDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDepartmentIdNull() As Boolean
            Return Me.IsNull(Me.tableOIM_SHEET.DepartmentIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDepartmentIdNull()
            Me(Me.tableOIM_SHEET.DepartmentIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDeliveredByNull() As Boolean
            Return Me.IsNull(Me.tableOIM_SHEET.DeliveredByColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDeliveredByNull()
            Me(Me.tableOIM_SHEET.DeliveredByColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProgramNoNull() As Boolean
            Return Me.IsNull(Me.tableOIM_SHEET.ProgramNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProgramNoNull()
            Me(Me.tableOIM_SHEET.ProgramNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBARCHODE_PRICENull() As Boolean
            Return Me.IsNull(Me.tableOIM_SHEET.BARCHODE_PRICEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBARCHODE_PRICENull()
            Me(Me.tableOIM_SHEET.BARCHODE_PRICEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIS_BARCHODERECEIVEDNull() As Boolean
            Return Me.IsNull(Me.tableOIM_SHEET.IS_BARCHODERECEIVEDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIS_BARCHODERECEIVEDNull()
            Me(Me.tableOIM_SHEET.IS_BARCHODERECEIVEDColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class OIM_SHEETRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As OIM_SHEETRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As OIM_SHEETRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As OIM_SHEETRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace OIM_SheetDataSetTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class OIM_SHEETTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "OIM_SHEET"
            tableMapping.ColumnMappings.Add("OIM_ID", "OIM_ID")
            tableMapping.ColumnMappings.Add("OIM_NO", "OIM_NO")
            tableMapping.ColumnMappings.Add("PO_DATE", "PO_DATE")
            tableMapping.ColumnMappings.Add("ESL_REF", "ESL_REF")
            tableMapping.ColumnMappings.Add("STYLE_NO", "STYLE_NO")
            tableMapping.ColumnMappings.Add("DESCRIPTION", "DESCRIPTION")
            tableMapping.ColumnMappings.Add("FABRIC_DESCRIPTION", "FABRIC_DESCRIPTION")
            tableMapping.ColumnMappings.Add("PO_NO", "PO_NO")
            tableMapping.ColumnMappings.Add("COLOR", "COLOR")
            tableMapping.ColumnMappings.Add("COLOR_CODE", "COLOR_CODE")
            tableMapping.ColumnMappings.Add("LAB_DIP_REF", "LAB_DIP_REF")
            tableMapping.ColumnMappings.Add("ORDER_QUANTITY", "ORDER_QUANTITY")
            tableMapping.ColumnMappings.Add("SEAL_BY_DATE", "SEAL_BY_DATE")
            tableMapping.ColumnMappings.Add("EX_FACTORY_DATE", "EX_FACTORY_DATE")
            tableMapping.ColumnMappings.Add("MUST_EX_BD", "MUST_EX_BD")
            tableMapping.ColumnMappings.Add("MODE", "MODE")
            tableMapping.ColumnMappings.Add("PACK", "PACK")
            tableMapping.ColumnMappings.Add("TTL_PACKS", "TTL_PACKS")
            tableMapping.ColumnMappings.Add("FOB_PRICE", "FOB_PRICE")
            tableMapping.ColumnMappings.Add("PO_TYPE", "PO_TYPE")
            tableMapping.ColumnMappings.Add("DESTINATION", "DESTINATION")
            tableMapping.ColumnMappings.Add("ADDRESS", "ADDRESS")
            tableMapping.ColumnMappings.Add("TABTEST", "TABTEST")
            tableMapping.ColumnMappings.Add("COMMENTS", "COMMENTS")
            tableMapping.ColumnMappings.Add("ACKNOWLEDGEMENTDATE", "ACKNOWLEDGEMENTDATE")
            tableMapping.ColumnMappings.Add("OIM_DATE", "OIM_DATE")
            tableMapping.ColumnMappings.Add("IS_ACKNOWLEDGEMENT", "IS_ACKNOWLEDGEMENT")
            tableMapping.ColumnMappings.Add("IS_OIMRECEIVED", "IS_OIMRECEIVED")
            tableMapping.ColumnMappings.Add("SLNO", "SLNO")
            tableMapping.ColumnMappings.Add("BARCODE_RECEIVED", "BARCODE_RECEIVED")
            tableMapping.ColumnMappings.Add("BARCODE_DELIVERED", "BARCODE_DELIVERED")
            tableMapping.ColumnMappings.Add("PRINT_LINE", "PRINT_LINE")
            tableMapping.ColumnMappings.Add("DepartmentId", "DepartmentId")
            tableMapping.ColumnMappings.Add("DeliveredBy", "DeliveredBy")
            tableMapping.ColumnMappings.Add("ProgramNo", "ProgramNo")
            tableMapping.ColumnMappings.Add("BARCHODE_PRICE", "BARCHODE_PRICE")
            tableMapping.ColumnMappings.Add("IS_BARCHODERECEIVED", "IS_BARCHODERECEIVED")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [OIM_SHEET] WHERE (([OIM_ID] = @Original_OIM_ID) AND ((@IsNull_OIM_NO"& _ 
                " = 1 AND [OIM_NO] IS NULL) OR ([OIM_NO] = @Original_OIM_NO)) AND ((@IsNull_PO_DA"& _ 
                "TE = 1 AND [PO_DATE] IS NULL) OR ([PO_DATE] = @Original_PO_DATE)) AND ((@IsNull_"& _ 
                "ESL_REF = 1 AND [ESL_REF] IS NULL) OR ([ESL_REF] = @Original_ESL_REF)) AND ((@Is"& _ 
                "Null_STYLE_NO = 1 AND [STYLE_NO] IS NULL) OR ([STYLE_NO] = @Original_STYLE_NO)) "& _ 
                "AND ((@IsNull_DESCRIPTION = 1 AND [DESCRIPTION] IS NULL) OR ([DESCRIPTION] = @Or"& _ 
                "iginal_DESCRIPTION)) AND ((@IsNull_FABRIC_DESCRIPTION = 1 AND [FABRIC_DESCRIPTIO"& _ 
                "N] IS NULL) OR ([FABRIC_DESCRIPTION] = @Original_FABRIC_DESCRIPTION)) AND ((@IsN"& _ 
                "ull_PO_NO = 1 AND [PO_NO] IS NULL) OR ([PO_NO] = @Original_PO_NO)) AND ((@IsNull"& _ 
                "_COLOR = 1 AND [COLOR] IS NULL) OR ([COLOR] = @Original_COLOR)) AND ((@IsNull_CO"& _ 
                "LOR_CODE = 1 AND [COLOR_CODE] IS NULL) OR ([COLOR_CODE] = @Original_COLOR_CODE))"& _ 
                " AND ((@IsNull_LAB_DIP_REF = 1 AND [LAB_DIP_REF] IS NULL) OR ([LAB_DIP_REF] = @O"& _ 
                "riginal_LAB_DIP_REF)) AND ((@IsNull_ORDER_QUANTITY = 1 AND [ORDER_QUANTITY] IS N"& _ 
                "ULL) OR ([ORDER_QUANTITY] = @Original_ORDER_QUANTITY)) AND ((@IsNull_SEAL_BY_DAT"& _ 
                "E = 1 AND [SEAL_BY_DATE] IS NULL) OR ([SEAL_BY_DATE] = @Original_SEAL_BY_DATE)) "& _ 
                "AND ((@IsNull_EX_FACTORY_DATE = 1 AND [EX_FACTORY_DATE] IS NULL) OR ([EX_FACTORY"& _ 
                "_DATE] = @Original_EX_FACTORY_DATE)) AND ((@IsNull_MUST_EX_BD = 1 AND [MUST_EX_B"& _ 
                "D] IS NULL) OR ([MUST_EX_BD] = @Original_MUST_EX_BD)) AND ((@IsNull_MODE = 1 AND"& _ 
                " [MODE] IS NULL) OR ([MODE] = @Original_MODE)) AND ((@IsNull_PACK = 1 AND [PACK]"& _ 
                " IS NULL) OR ([PACK] = @Original_PACK)) AND ((@IsNull_TTL_PACKS = 1 AND [TTL_PAC"& _ 
                "KS] IS NULL) OR ([TTL_PACKS] = @Original_TTL_PACKS)) AND ((@IsNull_FOB_PRICE = 1"& _ 
                " AND [FOB_PRICE] IS NULL) OR ([FOB_PRICE] = @Original_FOB_PRICE)) AND ((@IsNull_"& _ 
                "PO_TYPE = 1 AND [PO_TYPE] IS NULL) OR ([PO_TYPE] = @Original_PO_TYPE)) AND ((@Is"& _ 
                "Null_DESTINATION = 1 AND [DESTINATION] IS NULL) OR ([DESTINATION] = @Original_DE"& _ 
                "STINATION)) AND ((@IsNull_ADDRESS = 1 AND [ADDRESS] IS NULL) OR ([ADDRESS] = @Or"& _ 
                "iginal_ADDRESS)) AND ((@IsNull_TABTEST = 1 AND [TABTEST] IS NULL) OR ([TABTEST] "& _ 
                "= @Original_TABTEST)) AND ((@IsNull_COMMENTS = 1 AND [COMMENTS] IS NULL) OR ([CO"& _ 
                "MMENTS] = @Original_COMMENTS)) AND ((@IsNull_ACKNOWLEDGEMENTDATE = 1 AND [ACKNOW"& _ 
                "LEDGEMENTDATE] IS NULL) OR ([ACKNOWLEDGEMENTDATE] = @Original_ACKNOWLEDGEMENTDAT"& _ 
                "E)) AND ((@IsNull_OIM_DATE = 1 AND [OIM_DATE] IS NULL) OR ([OIM_DATE] = @Origina"& _ 
                "l_OIM_DATE)) AND ([IS_ACKNOWLEDGEMENT] = @Original_IS_ACKNOWLEDGEMENT) AND ([IS_"& _ 
                "OIMRECEIVED] = @Original_IS_OIMRECEIVED) AND ((@IsNull_SLNO = 1 AND [SLNO] IS NU"& _ 
                "LL) OR ([SLNO] = @Original_SLNO)) AND ((@IsNull_BARCODE_RECEIVED = 1 AND [BARCOD"& _ 
                "E_RECEIVED] IS NULL) OR ([BARCODE_RECEIVED] = @Original_BARCODE_RECEIVED)) AND ("& _ 
                "(@IsNull_BARCODE_DELIVERED = 1 AND [BARCODE_DELIVERED] IS NULL) OR ([BARCODE_DEL"& _ 
                "IVERED] = @Original_BARCODE_DELIVERED)) AND ([PRINT_LINE] = @Original_PRINT_LINE"& _ 
                ") AND ((@IsNull_DepartmentId = 1 AND [DepartmentId] IS NULL) OR ([DepartmentId] "& _ 
                "= @Original_DepartmentId)) AND ((@IsNull_DeliveredBy = 1 AND [DeliveredBy] IS NU"& _ 
                "LL) OR ([DeliveredBy] = @Original_DeliveredBy)) AND ((@IsNull_ProgramNo = 1 AND "& _ 
                "[ProgramNo] IS NULL) OR ([ProgramNo] = @Original_ProgramNo)) AND ((@IsNull_BARCH"& _ 
                "ODE_PRICE = 1 AND [BARCHODE_PRICE] IS NULL) OR ([BARCHODE_PRICE] = @Original_BAR"& _ 
                "CHODE_PRICE)) AND ((@IsNull_IS_BARCHODERECEIVED = 1 AND [IS_BARCHODERECEIVED] IS"& _ 
                " NULL) OR ([IS_BARCHODERECEIVED] = @Original_IS_BARCHODERECEIVED)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OIM_ID", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OIM_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OIM_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OIM_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OIM_NO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OIM_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PO_DATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PO_DATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PO_DATE", Global.System.Data.SqlDbType.SmallDateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PO_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ESL_REF", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESL_REF", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESL_REF", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESL_REF", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_STYLE_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "STYLE_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_STYLE_NO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "STYLE_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DESCRIPTION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCRIPTION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DESCRIPTION", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCRIPTION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FABRIC_DESCRIPTION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FABRIC_DESCRIPTION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FABRIC_DESCRIPTION", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FABRIC_DESCRIPTION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PO_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PO_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PO_NO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PO_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COLOR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COLOR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COLOR", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COLOR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COLOR_CODE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COLOR_CODE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COLOR_CODE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COLOR_CODE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LAB_DIP_REF", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LAB_DIP_REF", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LAB_DIP_REF", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LAB_DIP_REF", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ORDER_QUANTITY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ORDER_QUANTITY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ORDER_QUANTITY", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "ORDER_QUANTITY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SEAL_BY_DATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SEAL_BY_DATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SEAL_BY_DATE", Global.System.Data.SqlDbType.SmallDateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SEAL_BY_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EX_FACTORY_DATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EX_FACTORY_DATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EX_FACTORY_DATE", Global.System.Data.SqlDbType.SmallDateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EX_FACTORY_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MUST_EX_BD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MUST_EX_BD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MUST_EX_BD", Global.System.Data.SqlDbType.SmallDateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MUST_EX_BD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PACK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PACK", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PACK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PACK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TTL_PACKS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TTL_PACKS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TTL_PACKS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TTL_PACKS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FOB_PRICE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FOB_PRICE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FOB_PRICE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "FOB_PRICE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PO_TYPE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PO_TYPE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PO_TYPE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PO_TYPE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DESTINATION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESTINATION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DESTINATION", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESTINATION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ADDRESS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ADDRESS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ADDRESS", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ADDRESS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TABTEST", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TABTEST", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TABTEST", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TABTEST", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COMMENTS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COMMENTS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COMMENTS", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COMMENTS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ACKNOWLEDGEMENTDATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ACKNOWLEDGEMENTDATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ACKNOWLEDGEMENTDATE", Global.System.Data.SqlDbType.SmallDateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ACKNOWLEDGEMENTDATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OIM_DATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OIM_DATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OIM_DATE", Global.System.Data.SqlDbType.SmallDateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OIM_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IS_ACKNOWLEDGEMENT", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IS_ACKNOWLEDGEMENT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IS_OIMRECEIVED", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IS_OIMRECEIVED", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SLNO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SLNO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SLNO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SLNO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BARCODE_RECEIVED", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BARCODE_RECEIVED", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BARCODE_RECEIVED", Global.System.Data.SqlDbType.SmallDateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BARCODE_RECEIVED", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BARCODE_DELIVERED", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BARCODE_DELIVERED", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BARCODE_DELIVERED", Global.System.Data.SqlDbType.SmallDateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BARCODE_DELIVERED", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PRINT_LINE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRINT_LINE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DepartmentId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DepartmentId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DepartmentId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DepartmentId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DeliveredBy", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DeliveredBy", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DeliveredBy", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DeliveredBy", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ProgramNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProgramNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ProgramNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProgramNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BARCHODE_PRICE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BARCHODE_PRICE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BARCHODE_PRICE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BARCHODE_PRICE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IS_BARCHODERECEIVED", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IS_BARCHODERECEIVED", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IS_BARCHODERECEIVED", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IS_BARCHODERECEIVED", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [OIM_SHEET] ([OIM_NO], [PO_DATE], [ESL_REF], [STYLE_NO], [DESCRIPTION"& _ 
                "], [FABRIC_DESCRIPTION], [PO_NO], [COLOR], [COLOR_CODE], [LAB_DIP_REF], [ORDER_Q"& _ 
                "UANTITY], [SEAL_BY_DATE], [EX_FACTORY_DATE], [MUST_EX_BD], [MODE], [PACK], [TTL_"& _ 
                "PACKS], [FOB_PRICE], [PO_TYPE], [DESTINATION], [ADDRESS], [TABTEST], [COMMENTS],"& _ 
                " [ACKNOWLEDGEMENTDATE], [OIM_DATE], [IS_ACKNOWLEDGEMENT], [IS_OIMRECEIVED], [SLN"& _ 
                "O], [BARCODE_RECEIVED], [BARCODE_DELIVERED], [PRINT_LINE], [DepartmentId], [Deli"& _ 
                "veredBy], [ProgramNo], [BARCHODE_PRICE], [IS_BARCHODERECEIVED]) VALUES (@OIM_NO,"& _ 
                " @PO_DATE, @ESL_REF, @STYLE_NO, @DESCRIPTION, @FABRIC_DESCRIPTION, @PO_NO, @COLO"& _ 
                "R, @COLOR_CODE, @LAB_DIP_REF, @ORDER_QUANTITY, @SEAL_BY_DATE, @EX_FACTORY_DATE, "& _ 
                "@MUST_EX_BD, @MODE, @PACK, @TTL_PACKS, @FOB_PRICE, @PO_TYPE, @DESTINATION, @ADDR"& _ 
                "ESS, @TABTEST, @COMMENTS, @ACKNOWLEDGEMENTDATE, @OIM_DATE, @IS_ACKNOWLEDGEMENT, "& _ 
                "@IS_OIMRECEIVED, @SLNO, @BARCODE_RECEIVED, @BARCODE_DELIVERED, @PRINT_LINE, @Dep"& _ 
                "artmentId, @DeliveredBy, @ProgramNo, @BARCHODE_PRICE, @IS_BARCHODERECEIVED);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SE"& _ 
                "LECT OIM_ID, OIM_NO, PO_DATE, ESL_REF, STYLE_NO, DESCRIPTION, FABRIC_DESCRIPTION"& _ 
                ", PO_NO, COLOR, COLOR_CODE, LAB_DIP_REF, ORDER_QUANTITY, SEAL_BY_DATE, EX_FACTOR"& _ 
                "Y_DATE, MUST_EX_BD, MODE, PACK, TTL_PACKS, FOB_PRICE, PO_TYPE, DESTINATION, ADDR"& _ 
                "ESS, TABTEST, COMMENTS, ACKNOWLEDGEMENTDATE, OIM_DATE, IS_ACKNOWLEDGEMENT, IS_OI"& _ 
                "MRECEIVED, SLNO, BARCODE_RECEIVED, BARCODE_DELIVERED, PRINT_LINE, DepartmentId, "& _ 
                "DeliveredBy, ProgramNo, BARCHODE_PRICE, IS_BARCHODERECEIVED FROM OIM_SHEET WHERE"& _ 
                " (OIM_ID = SCOPE_IDENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OIM_NO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OIM_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PO_DATE", Global.System.Data.SqlDbType.SmallDateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PO_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESL_REF", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESL_REF", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@STYLE_NO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "STYLE_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DESCRIPTION", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCRIPTION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FABRIC_DESCRIPTION", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FABRIC_DESCRIPTION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PO_NO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PO_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COLOR", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COLOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COLOR_CODE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COLOR_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LAB_DIP_REF", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LAB_DIP_REF", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ORDER_QUANTITY", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "ORDER_QUANTITY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SEAL_BY_DATE", Global.System.Data.SqlDbType.SmallDateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SEAL_BY_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EX_FACTORY_DATE", Global.System.Data.SqlDbType.SmallDateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EX_FACTORY_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MUST_EX_BD", Global.System.Data.SqlDbType.SmallDateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MUST_EX_BD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PACK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PACK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TTL_PACKS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TTL_PACKS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FOB_PRICE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "FOB_PRICE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PO_TYPE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PO_TYPE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DESTINATION", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESTINATION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ADDRESS", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ADDRESS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TABTEST", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TABTEST", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COMMENTS", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COMMENTS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ACKNOWLEDGEMENTDATE", Global.System.Data.SqlDbType.SmallDateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ACKNOWLEDGEMENTDATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OIM_DATE", Global.System.Data.SqlDbType.SmallDateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OIM_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IS_ACKNOWLEDGEMENT", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IS_ACKNOWLEDGEMENT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IS_OIMRECEIVED", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IS_OIMRECEIVED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SLNO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SLNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BARCODE_RECEIVED", Global.System.Data.SqlDbType.SmallDateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BARCODE_RECEIVED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BARCODE_DELIVERED", Global.System.Data.SqlDbType.SmallDateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BARCODE_DELIVERED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRINT_LINE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRINT_LINE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DepartmentId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DepartmentId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DeliveredBy", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DeliveredBy", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ProgramNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProgramNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BARCHODE_PRICE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BARCHODE_PRICE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IS_BARCHODERECEIVED", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IS_BARCHODERECEIVED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [OIM_SHEET] SET [OIM_NO] = @OIM_NO, [PO_DATE] = @PO_DATE, [ESL_REF] = @ESL"& _ 
                "_REF, [STYLE_NO] = @STYLE_NO, [DESCRIPTION] = @DESCRIPTION, [FABRIC_DESCRIPTION]"& _ 
                " = @FABRIC_DESCRIPTION, [PO_NO] = @PO_NO, [COLOR] = @COLOR, [COLOR_CODE] = @COLO"& _ 
                "R_CODE, [LAB_DIP_REF] = @LAB_DIP_REF, [ORDER_QUANTITY] = @ORDER_QUANTITY, [SEAL_"& _ 
                "BY_DATE] = @SEAL_BY_DATE, [EX_FACTORY_DATE] = @EX_FACTORY_DATE, [MUST_EX_BD] = @"& _ 
                "MUST_EX_BD, [MODE] = @MODE, [PACK] = @PACK, [TTL_PACKS] = @TTL_PACKS, [FOB_PRICE"& _ 
                "] = @FOB_PRICE, [PO_TYPE] = @PO_TYPE, [DESTINATION] = @DESTINATION, [ADDRESS] = "& _ 
                "@ADDRESS, [TABTEST] = @TABTEST, [COMMENTS] = @COMMENTS, [ACKNOWLEDGEMENTDATE] = "& _ 
                "@ACKNOWLEDGEMENTDATE, [OIM_DATE] = @OIM_DATE, [IS_ACKNOWLEDGEMENT] = @IS_ACKNOWL"& _ 
                "EDGEMENT, [IS_OIMRECEIVED] = @IS_OIMRECEIVED, [SLNO] = @SLNO, [BARCODE_RECEIVED]"& _ 
                " = @BARCODE_RECEIVED, [BARCODE_DELIVERED] = @BARCODE_DELIVERED, [PRINT_LINE] = @"& _ 
                "PRINT_LINE, [DepartmentId] = @DepartmentId, [DeliveredBy] = @DeliveredBy, [Progr"& _ 
                "amNo] = @ProgramNo, [BARCHODE_PRICE] = @BARCHODE_PRICE, [IS_BARCHODERECEIVED] = "& _ 
                "@IS_BARCHODERECEIVED WHERE (([OIM_ID] = @Original_OIM_ID) AND ((@IsNull_OIM_NO ="& _ 
                " 1 AND [OIM_NO] IS NULL) OR ([OIM_NO] = @Original_OIM_NO)) AND ((@IsNull_PO_DATE"& _ 
                " = 1 AND [PO_DATE] IS NULL) OR ([PO_DATE] = @Original_PO_DATE)) AND ((@IsNull_ES"& _ 
                "L_REF = 1 AND [ESL_REF] IS NULL) OR ([ESL_REF] = @Original_ESL_REF)) AND ((@IsNu"& _ 
                "ll_STYLE_NO = 1 AND [STYLE_NO] IS NULL) OR ([STYLE_NO] = @Original_STYLE_NO)) AN"& _ 
                "D ((@IsNull_DESCRIPTION = 1 AND [DESCRIPTION] IS NULL) OR ([DESCRIPTION] = @Orig"& _ 
                "inal_DESCRIPTION)) AND ((@IsNull_FABRIC_DESCRIPTION = 1 AND [FABRIC_DESCRIPTION]"& _ 
                " IS NULL) OR ([FABRIC_DESCRIPTION] = @Original_FABRIC_DESCRIPTION)) AND ((@IsNul"& _ 
                "l_PO_NO = 1 AND [PO_NO] IS NULL) OR ([PO_NO] = @Original_PO_NO)) AND ((@IsNull_C"& _ 
                "OLOR = 1 AND [COLOR] IS NULL) OR ([COLOR] = @Original_COLOR)) AND ((@IsNull_COLO"& _ 
                "R_CODE = 1 AND [COLOR_CODE] IS NULL) OR ([COLOR_CODE] = @Original_COLOR_CODE)) A"& _ 
                "ND ((@IsNull_LAB_DIP_REF = 1 AND [LAB_DIP_REF] IS NULL) OR ([LAB_DIP_REF] = @Ori"& _ 
                "ginal_LAB_DIP_REF)) AND ((@IsNull_ORDER_QUANTITY = 1 AND [ORDER_QUANTITY] IS NUL"& _ 
                "L) OR ([ORDER_QUANTITY] = @Original_ORDER_QUANTITY)) AND ((@IsNull_SEAL_BY_DATE "& _ 
                "= 1 AND [SEAL_BY_DATE] IS NULL) OR ([SEAL_BY_DATE] = @Original_SEAL_BY_DATE)) AN"& _ 
                "D ((@IsNull_EX_FACTORY_DATE = 1 AND [EX_FACTORY_DATE] IS NULL) OR ([EX_FACTORY_D"& _ 
                "ATE] = @Original_EX_FACTORY_DATE)) AND ((@IsNull_MUST_EX_BD = 1 AND [MUST_EX_BD]"& _ 
                " IS NULL) OR ([MUST_EX_BD] = @Original_MUST_EX_BD)) AND ((@IsNull_MODE = 1 AND ["& _ 
                "MODE] IS NULL) OR ([MODE] = @Original_MODE)) AND ((@IsNull_PACK = 1 AND [PACK] I"& _ 
                "S NULL) OR ([PACK] = @Original_PACK)) AND ((@IsNull_TTL_PACKS = 1 AND [TTL_PACKS"& _ 
                "] IS NULL) OR ([TTL_PACKS] = @Original_TTL_PACKS)) AND ((@IsNull_FOB_PRICE = 1 A"& _ 
                "ND [FOB_PRICE] IS NULL) OR ([FOB_PRICE] = @Original_FOB_PRICE)) AND ((@IsNull_PO"& _ 
                "_TYPE = 1 AND [PO_TYPE] IS NULL) OR ([PO_TYPE] = @Original_PO_TYPE)) AND ((@IsNu"& _ 
                "ll_DESTINATION = 1 AND [DESTINATION] IS NULL) OR ([DESTINATION] = @Original_DEST"& _ 
                "INATION)) AND ((@IsNull_ADDRESS = 1 AND [ADDRESS] IS NULL) OR ([ADDRESS] = @Orig"& _ 
                "inal_ADDRESS)) AND ((@IsNull_TABTEST = 1 AND [TABTEST] IS NULL) OR ([TABTEST] = "& _ 
                "@Original_TABTEST)) AND ((@IsNull_COMMENTS = 1 AND [COMMENTS] IS NULL) OR ([COMM"& _ 
                "ENTS] = @Original_COMMENTS)) AND ((@IsNull_ACKNOWLEDGEMENTDATE = 1 AND [ACKNOWLE"& _ 
                "DGEMENTDATE] IS NULL) OR ([ACKNOWLEDGEMENTDATE] = @Original_ACKNOWLEDGEMENTDATE)"& _ 
                ") AND ((@IsNull_OIM_DATE = 1 AND [OIM_DATE] IS NULL) OR ([OIM_DATE] = @Original_"& _ 
                "OIM_DATE)) AND ([IS_ACKNOWLEDGEMENT] = @Original_IS_ACKNOWLEDGEMENT) AND ([IS_OI"& _ 
                "MRECEIVED] = @Original_IS_OIMRECEIVED) AND ((@IsNull_SLNO = 1 AND [SLNO] IS NULL"& _ 
                ") OR ([SLNO] = @Original_SLNO)) AND ((@IsNull_BARCODE_RECEIVED = 1 AND [BARCODE_"& _ 
                "RECEIVED] IS NULL) OR ([BARCODE_RECEIVED] = @Original_BARCODE_RECEIVED)) AND ((@"& _ 
                "IsNull_BARCODE_DELIVERED = 1 AND [BARCODE_DELIVERED] IS NULL) OR ([BARCODE_DELIV"& _ 
                "ERED] = @Original_BARCODE_DELIVERED)) AND ([PRINT_LINE] = @Original_PRINT_LINE) "& _ 
                "AND ((@IsNull_DepartmentId = 1 AND [DepartmentId] IS NULL) OR ([DepartmentId] = "& _ 
                "@Original_DepartmentId)) AND ((@IsNull_DeliveredBy = 1 AND [DeliveredBy] IS NULL"& _ 
                ") OR ([DeliveredBy] = @Original_DeliveredBy)) AND ((@IsNull_ProgramNo = 1 AND [P"& _ 
                "rogramNo] IS NULL) OR ([ProgramNo] = @Original_ProgramNo)) AND ((@IsNull_BARCHOD"& _ 
                "E_PRICE = 1 AND [BARCHODE_PRICE] IS NULL) OR ([BARCHODE_PRICE] = @Original_BARCH"& _ 
                "ODE_PRICE)) AND ((@IsNull_IS_BARCHODERECEIVED = 1 AND [IS_BARCHODERECEIVED] IS N"& _ 
                "ULL) OR ([IS_BARCHODERECEIVED] = @Original_IS_BARCHODERECEIVED)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT OIM_I"& _ 
                "D, OIM_NO, PO_DATE, ESL_REF, STYLE_NO, DESCRIPTION, FABRIC_DESCRIPTION, PO_NO, C"& _ 
                "OLOR, COLOR_CODE, LAB_DIP_REF, ORDER_QUANTITY, SEAL_BY_DATE, EX_FACTORY_DATE, MU"& _ 
                "ST_EX_BD, MODE, PACK, TTL_PACKS, FOB_PRICE, PO_TYPE, DESTINATION, ADDRESS, TABTE"& _ 
                "ST, COMMENTS, ACKNOWLEDGEMENTDATE, OIM_DATE, IS_ACKNOWLEDGEMENT, IS_OIMRECEIVED,"& _ 
                " SLNO, BARCODE_RECEIVED, BARCODE_DELIVERED, PRINT_LINE, DepartmentId, DeliveredB"& _ 
                "y, ProgramNo, BARCHODE_PRICE, IS_BARCHODERECEIVED FROM OIM_SHEET WHERE (OIM_ID ="& _ 
                " @OIM_ID)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OIM_NO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OIM_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PO_DATE", Global.System.Data.SqlDbType.SmallDateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PO_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESL_REF", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESL_REF", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@STYLE_NO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "STYLE_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DESCRIPTION", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCRIPTION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FABRIC_DESCRIPTION", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FABRIC_DESCRIPTION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PO_NO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PO_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COLOR", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COLOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COLOR_CODE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COLOR_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LAB_DIP_REF", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LAB_DIP_REF", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ORDER_QUANTITY", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "ORDER_QUANTITY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SEAL_BY_DATE", Global.System.Data.SqlDbType.SmallDateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SEAL_BY_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EX_FACTORY_DATE", Global.System.Data.SqlDbType.SmallDateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EX_FACTORY_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MUST_EX_BD", Global.System.Data.SqlDbType.SmallDateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MUST_EX_BD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PACK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PACK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TTL_PACKS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TTL_PACKS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FOB_PRICE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "FOB_PRICE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PO_TYPE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PO_TYPE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DESTINATION", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESTINATION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ADDRESS", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ADDRESS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TABTEST", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TABTEST", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COMMENTS", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COMMENTS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ACKNOWLEDGEMENTDATE", Global.System.Data.SqlDbType.SmallDateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ACKNOWLEDGEMENTDATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OIM_DATE", Global.System.Data.SqlDbType.SmallDateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OIM_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IS_ACKNOWLEDGEMENT", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IS_ACKNOWLEDGEMENT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IS_OIMRECEIVED", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IS_OIMRECEIVED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SLNO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SLNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BARCODE_RECEIVED", Global.System.Data.SqlDbType.SmallDateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BARCODE_RECEIVED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BARCODE_DELIVERED", Global.System.Data.SqlDbType.SmallDateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BARCODE_DELIVERED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRINT_LINE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRINT_LINE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DepartmentId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DepartmentId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DeliveredBy", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DeliveredBy", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ProgramNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProgramNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BARCHODE_PRICE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BARCHODE_PRICE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IS_BARCHODERECEIVED", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IS_BARCHODERECEIVED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OIM_ID", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OIM_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OIM_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OIM_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OIM_NO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OIM_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PO_DATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PO_DATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PO_DATE", Global.System.Data.SqlDbType.SmallDateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PO_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ESL_REF", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESL_REF", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESL_REF", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESL_REF", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_STYLE_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "STYLE_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_STYLE_NO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "STYLE_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DESCRIPTION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCRIPTION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DESCRIPTION", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCRIPTION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FABRIC_DESCRIPTION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FABRIC_DESCRIPTION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FABRIC_DESCRIPTION", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FABRIC_DESCRIPTION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PO_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PO_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PO_NO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PO_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COLOR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COLOR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COLOR", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COLOR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COLOR_CODE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COLOR_CODE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COLOR_CODE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COLOR_CODE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LAB_DIP_REF", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LAB_DIP_REF", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LAB_DIP_REF", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LAB_DIP_REF", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ORDER_QUANTITY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ORDER_QUANTITY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ORDER_QUANTITY", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "ORDER_QUANTITY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SEAL_BY_DATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SEAL_BY_DATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SEAL_BY_DATE", Global.System.Data.SqlDbType.SmallDateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SEAL_BY_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EX_FACTORY_DATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EX_FACTORY_DATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EX_FACTORY_DATE", Global.System.Data.SqlDbType.SmallDateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EX_FACTORY_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MUST_EX_BD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MUST_EX_BD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MUST_EX_BD", Global.System.Data.SqlDbType.SmallDateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MUST_EX_BD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PACK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PACK", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PACK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PACK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TTL_PACKS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TTL_PACKS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TTL_PACKS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TTL_PACKS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FOB_PRICE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FOB_PRICE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FOB_PRICE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "FOB_PRICE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PO_TYPE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PO_TYPE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PO_TYPE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PO_TYPE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DESTINATION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESTINATION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DESTINATION", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESTINATION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ADDRESS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ADDRESS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ADDRESS", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ADDRESS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TABTEST", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TABTEST", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TABTEST", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TABTEST", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COMMENTS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COMMENTS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COMMENTS", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COMMENTS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ACKNOWLEDGEMENTDATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ACKNOWLEDGEMENTDATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ACKNOWLEDGEMENTDATE", Global.System.Data.SqlDbType.SmallDateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ACKNOWLEDGEMENTDATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OIM_DATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OIM_DATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OIM_DATE", Global.System.Data.SqlDbType.SmallDateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OIM_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IS_ACKNOWLEDGEMENT", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IS_ACKNOWLEDGEMENT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IS_OIMRECEIVED", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IS_OIMRECEIVED", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SLNO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SLNO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SLNO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SLNO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BARCODE_RECEIVED", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BARCODE_RECEIVED", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BARCODE_RECEIVED", Global.System.Data.SqlDbType.SmallDateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BARCODE_RECEIVED", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BARCODE_DELIVERED", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BARCODE_DELIVERED", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BARCODE_DELIVERED", Global.System.Data.SqlDbType.SmallDateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BARCODE_DELIVERED", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PRINT_LINE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRINT_LINE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DepartmentId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DepartmentId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DepartmentId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DepartmentId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DeliveredBy", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DeliveredBy", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DeliveredBy", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DeliveredBy", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ProgramNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProgramNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ProgramNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProgramNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BARCHODE_PRICE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BARCHODE_PRICE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BARCHODE_PRICE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BARCHODE_PRICE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IS_BARCHODERECEIVED", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IS_BARCHODERECEIVED", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IS_BARCHODERECEIVED", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IS_BARCHODERECEIVED", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OIM_ID", Global.System.Data.SqlDbType.BigInt, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "OIM_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.KSoft_Inventory.My.MySettings.Default.KSoft_InventoryConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        OIM_ID, OIM_NO, PO_DATE, ESL_REF, STYLE_NO, DESCRIPTION, FABRIC_DES"& _ 
                "CRIPTION, PO_NO, COLOR, COLOR_CODE, LAB_DIP_REF, ORDER_QUANTITY, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"             "& _ 
                "            SEAL_BY_DATE, EX_FACTORY_DATE, MUST_EX_BD, MODE, PACK, TTL_PACKS, FO"& _ 
                "B_PRICE, PO_TYPE, DESTINATION, ADDRESS, TABTEST, COMMENTS, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                   "& _ 
                "      ACKNOWLEDGEMENTDATE, OIM_DATE, IS_ACKNOWLEDGEMENT, IS_OIMRECEIVED, SLNO, B"& _ 
                "ARCODE_RECEIVED, BARCODE_DELIVERED, PRINT_LINE, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         Depar"& _ 
                "tmentId, DeliveredBy, ProgramNo, BARCHODE_PRICE, IS_BARCHODERECEIVED"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM      "& _ 
                "      OIM_SHEET"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT ACKNOWLEDGEMENTDATE, ADDRESS, BARCHODE_PRICE, BARCODE_DELIVERED, BARCODE_R"& _ 
                "ECEIVED, COLOR, COLOR_CODE, COMMENTS, DESCRIPTION, DESTINATION, DeliveredBy, Dep"& _ 
                "artmentId, ESL_REF, EX_FACTORY_DATE, FABRIC_DESCRIPTION, FOB_PRICE, IS_ACKNOWLED"& _ 
                "GEMENT, IS_BARCHODERECEIVED, IS_OIMRECEIVED, LAB_DIP_REF, MODE, MUST_EX_BD, OIM_"& _ 
                "DATE, OIM_ID, OIM_NO, ORDER_QUANTITY, PACK, PO_DATE, PO_NO, PO_TYPE, PRINT_LINE,"& _ 
                " ProgramNo, SEAL_BY_DATE, SLNO, STYLE_NO, TABTEST, TTL_PACKS FROM OIM_SHEET WHER"& _ 
                "E (DepartmentId = @DepartmentId)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DepartmentId", Global.System.Data.SqlDbType.BigInt, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "DepartmentId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As OIM_SheetDataSet.OIM_SHEETDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As OIM_SheetDataSet.OIM_SHEETDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As OIM_SheetDataSet.OIM_SHEETDataTable = New OIM_SheetDataSet.OIM_SHEETDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByDepartmentId(ByVal dataTable As OIM_SheetDataSet.OIM_SHEETDataTable, ByVal DepartmentId As Global.System.Nullable(Of Long)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (DepartmentId.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(DepartmentId.Value,Long)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByDepartmentId(ByVal DepartmentId As Global.System.Nullable(Of Long)) As OIM_SheetDataSet.OIM_SHEETDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (DepartmentId.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(DepartmentId.Value,Long)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As OIM_SheetDataSet.OIM_SHEETDataTable = New OIM_SheetDataSet.OIM_SHEETDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As OIM_SheetDataSet.OIM_SHEETDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As OIM_SheetDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "OIM_SHEET")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_OIM_ID As Long,  _
                    ByVal Original_OIM_NO As String,  _
                    ByVal Original_PO_DATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_ESL_REF As String,  _
                    ByVal Original_STYLE_NO As String,  _
                    ByVal Original_DESCRIPTION As String,  _
                    ByVal Original_FABRIC_DESCRIPTION As String,  _
                    ByVal Original_PO_NO As String,  _
                    ByVal Original_COLOR As String,  _
                    ByVal Original_COLOR_CODE As String,  _
                    ByVal Original_LAB_DIP_REF As String,  _
                    ByVal Original_ORDER_QUANTITY As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_SEAL_BY_DATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_EX_FACTORY_DATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_MUST_EX_BD As Global.System.Nullable(Of Date),  _
                    ByVal Original_MODE As String,  _
                    ByVal Original_PACK As String,  _
                    ByVal Original_TTL_PACKS As Global.System.Nullable(Of Integer),  _
                    ByVal Original_FOB_PRICE As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PO_TYPE As String,  _
                    ByVal Original_DESTINATION As String,  _
                    ByVal Original_ADDRESS As String,  _
                    ByVal Original_TABTEST As String,  _
                    ByVal Original_COMMENTS As String,  _
                    ByVal Original_ACKNOWLEDGEMENTDATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_OIM_DATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_IS_ACKNOWLEDGEMENT As Boolean,  _
                    ByVal Original_IS_OIMRECEIVED As Boolean,  _
                    ByVal Original_SLNO As Global.System.Nullable(Of Integer),  _
                    ByVal Original_BARCODE_RECEIVED As Global.System.Nullable(Of Date),  _
                    ByVal Original_BARCODE_DELIVERED As Global.System.Nullable(Of Date),  _
                    ByVal Original_PRINT_LINE As Boolean,  _
                    ByVal Original_DepartmentId As Global.System.Nullable(Of Long),  _
                    ByVal Original_DeliveredBy As String,  _
                    ByVal Original_ProgramNo As String,  _
                    ByVal Original_BARCHODE_PRICE As String,  _
                    ByVal Original_IS_BARCHODERECEIVED As Global.System.Nullable(Of Boolean)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_OIM_ID,Long)
            If (Original_OIM_NO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_OIM_NO,String)
            End If
            If (Original_PO_DATE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_PO_DATE.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Original_ESL_REF Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_ESL_REF,String)
            End If
            If (Original_STYLE_NO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_STYLE_NO,String)
            End If
            If (Original_DESCRIPTION Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_DESCRIPTION,String)
            End If
            If (Original_FABRIC_DESCRIPTION Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_FABRIC_DESCRIPTION,String)
            End If
            If (Original_PO_NO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_PO_NO,String)
            End If
            If (Original_COLOR Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_COLOR,String)
            End If
            If (Original_COLOR_CODE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_COLOR_CODE,String)
            End If
            If (Original_LAB_DIP_REF Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_LAB_DIP_REF,String)
            End If
            If (Original_ORDER_QUANTITY.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_ORDER_QUANTITY.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (Original_SEAL_BY_DATE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_SEAL_BY_DATE.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (Original_EX_FACTORY_DATE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_EX_FACTORY_DATE.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Original_MUST_EX_BD.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_MUST_EX_BD.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (Original_MODE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_MODE,String)
            End If
            If (Original_PACK Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(Original_PACK,String)
            End If
            If (Original_TTL_PACKS.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(Original_TTL_PACKS.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (Original_FOB_PRICE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(Original_FOB_PRICE.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (Original_PO_TYPE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(Original_PO_TYPE,String)
            End If
            If (Original_DESTINATION Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(Original_DESTINATION,String)
            End If
            If (Original_ADDRESS Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(Original_ADDRESS,String)
            End If
            If (Original_TABTEST Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(Original_TABTEST,String)
            End If
            If (Original_COMMENTS Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(Original_COMMENTS,String)
            End If
            If (Original_ACKNOWLEDGEMENTDATE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(Original_ACKNOWLEDGEMENTDATE.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = Global.System.DBNull.Value
            End If
            If (Original_OIM_DATE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(Original_OIM_DATE.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(51).Value = CType(Original_IS_ACKNOWLEDGEMENT,Boolean)
            Me.Adapter.DeleteCommand.Parameters(52).Value = CType(Original_IS_OIMRECEIVED,Boolean)
            If (Original_SLNO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(Original_SLNO.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (Original_BARCODE_RECEIVED.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(Original_BARCODE_RECEIVED.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = Global.System.DBNull.Value
            End If
            If (Original_BARCODE_DELIVERED.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(Original_BARCODE_DELIVERED.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(59).Value = CType(Original_PRINT_LINE,Boolean)
            If (Original_DepartmentId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(Original_DepartmentId.Value,Long)
            Else
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(61).Value = Global.System.DBNull.Value
            End If
            If (Original_DeliveredBy Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(62).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(63).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(62).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(63).Value = CType(Original_DeliveredBy,String)
            End If
            If (Original_ProgramNo Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(64).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(65).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(64).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(65).Value = CType(Original_ProgramNo,String)
            End If
            If (Original_BARCHODE_PRICE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(66).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(67).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(66).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(67).Value = CType(Original_BARCHODE_PRICE,String)
            End If
            If (Original_IS_BARCHODERECEIVED.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(68).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(69).Value = CType(Original_IS_BARCHODERECEIVED.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(68).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(69).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal OIM_NO As String,  _
                    ByVal PO_DATE As Global.System.Nullable(Of Date),  _
                    ByVal ESL_REF As String,  _
                    ByVal STYLE_NO As String,  _
                    ByVal DESCRIPTION As String,  _
                    ByVal FABRIC_DESCRIPTION As String,  _
                    ByVal PO_NO As String,  _
                    ByVal COLOR As String,  _
                    ByVal COLOR_CODE As String,  _
                    ByVal LAB_DIP_REF As String,  _
                    ByVal ORDER_QUANTITY As Global.System.Nullable(Of Decimal),  _
                    ByVal SEAL_BY_DATE As Global.System.Nullable(Of Date),  _
                    ByVal EX_FACTORY_DATE As Global.System.Nullable(Of Date),  _
                    ByVal MUST_EX_BD As Global.System.Nullable(Of Date),  _
                    ByVal MODE As String,  _
                    ByVal PACK As String,  _
                    ByVal TTL_PACKS As Global.System.Nullable(Of Integer),  _
                    ByVal FOB_PRICE As Global.System.Nullable(Of Decimal),  _
                    ByVal PO_TYPE As String,  _
                    ByVal DESTINATION As String,  _
                    ByVal ADDRESS As String,  _
                    ByVal TABTEST As String,  _
                    ByVal COMMENTS As String,  _
                    ByVal ACKNOWLEDGEMENTDATE As Global.System.Nullable(Of Date),  _
                    ByVal OIM_DATE As Global.System.Nullable(Of Date),  _
                    ByVal IS_ACKNOWLEDGEMENT As Boolean,  _
                    ByVal IS_OIMRECEIVED As Boolean,  _
                    ByVal SLNO As Global.System.Nullable(Of Integer),  _
                    ByVal BARCODE_RECEIVED As Global.System.Nullable(Of Date),  _
                    ByVal BARCODE_DELIVERED As Global.System.Nullable(Of Date),  _
                    ByVal PRINT_LINE As Boolean,  _
                    ByVal DepartmentId As Global.System.Nullable(Of Long),  _
                    ByVal DeliveredBy As String,  _
                    ByVal ProgramNo As String,  _
                    ByVal BARCHODE_PRICE As String,  _
                    ByVal IS_BARCHODERECEIVED As Global.System.Nullable(Of Boolean)) As Integer
            If (OIM_NO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(OIM_NO,String)
            End If
            If (PO_DATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(PO_DATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (ESL_REF Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(ESL_REF,String)
            End If
            If (STYLE_NO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(STYLE_NO,String)
            End If
            If (DESCRIPTION Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(DESCRIPTION,String)
            End If
            If (FABRIC_DESCRIPTION Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(FABRIC_DESCRIPTION,String)
            End If
            If (PO_NO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(PO_NO,String)
            End If
            If (COLOR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(COLOR,String)
            End If
            If (COLOR_CODE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(COLOR_CODE,String)
            End If
            If (LAB_DIP_REF Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(LAB_DIP_REF,String)
            End If
            If (ORDER_QUANTITY.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(ORDER_QUANTITY.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (SEAL_BY_DATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(SEAL_BY_DATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (EX_FACTORY_DATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(EX_FACTORY_DATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (MUST_EX_BD.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(MUST_EX_BD.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (MODE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(MODE,String)
            End If
            If (PACK Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(PACK,String)
            End If
            If (TTL_PACKS.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(TTL_PACKS.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (FOB_PRICE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(FOB_PRICE.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (PO_TYPE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(PO_TYPE,String)
            End If
            If (DESTINATION Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(DESTINATION,String)
            End If
            If (ADDRESS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(ADDRESS,String)
            End If
            If (TABTEST Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(TABTEST,String)
            End If
            If (COMMENTS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(COMMENTS,String)
            End If
            If (ACKNOWLEDGEMENTDATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(ACKNOWLEDGEMENTDATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (OIM_DATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(OIM_DATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(25).Value = CType(IS_ACKNOWLEDGEMENT,Boolean)
            Me.Adapter.InsertCommand.Parameters(26).Value = CType(IS_OIMRECEIVED,Boolean)
            If (SLNO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(SLNO.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (BARCODE_RECEIVED.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(BARCODE_RECEIVED.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (BARCODE_DELIVERED.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(BARCODE_DELIVERED.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(30).Value = CType(PRINT_LINE,Boolean)
            If (DepartmentId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(DepartmentId.Value,Long)
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (DeliveredBy Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(DeliveredBy,String)
            End If
            If (ProgramNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(ProgramNo,String)
            End If
            If (BARCHODE_PRICE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(BARCHODE_PRICE,String)
            End If
            If (IS_BARCHODERECEIVED.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(IS_BARCHODERECEIVED.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal OIM_NO As String,  _
                    ByVal PO_DATE As Global.System.Nullable(Of Date),  _
                    ByVal ESL_REF As String,  _
                    ByVal STYLE_NO As String,  _
                    ByVal DESCRIPTION As String,  _
                    ByVal FABRIC_DESCRIPTION As String,  _
                    ByVal PO_NO As String,  _
                    ByVal COLOR As String,  _
                    ByVal COLOR_CODE As String,  _
                    ByVal LAB_DIP_REF As String,  _
                    ByVal ORDER_QUANTITY As Global.System.Nullable(Of Decimal),  _
                    ByVal SEAL_BY_DATE As Global.System.Nullable(Of Date),  _
                    ByVal EX_FACTORY_DATE As Global.System.Nullable(Of Date),  _
                    ByVal MUST_EX_BD As Global.System.Nullable(Of Date),  _
                    ByVal MODE As String,  _
                    ByVal PACK As String,  _
                    ByVal TTL_PACKS As Global.System.Nullable(Of Integer),  _
                    ByVal FOB_PRICE As Global.System.Nullable(Of Decimal),  _
                    ByVal PO_TYPE As String,  _
                    ByVal DESTINATION As String,  _
                    ByVal ADDRESS As String,  _
                    ByVal TABTEST As String,  _
                    ByVal COMMENTS As String,  _
                    ByVal ACKNOWLEDGEMENTDATE As Global.System.Nullable(Of Date),  _
                    ByVal OIM_DATE As Global.System.Nullable(Of Date),  _
                    ByVal IS_ACKNOWLEDGEMENT As Boolean,  _
                    ByVal IS_OIMRECEIVED As Boolean,  _
                    ByVal SLNO As Global.System.Nullable(Of Integer),  _
                    ByVal BARCODE_RECEIVED As Global.System.Nullable(Of Date),  _
                    ByVal BARCODE_DELIVERED As Global.System.Nullable(Of Date),  _
                    ByVal PRINT_LINE As Boolean,  _
                    ByVal DepartmentId As Global.System.Nullable(Of Long),  _
                    ByVal DeliveredBy As String,  _
                    ByVal ProgramNo As String,  _
                    ByVal BARCHODE_PRICE As String,  _
                    ByVal IS_BARCHODERECEIVED As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_OIM_ID As Long,  _
                    ByVal Original_OIM_NO As String,  _
                    ByVal Original_PO_DATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_ESL_REF As String,  _
                    ByVal Original_STYLE_NO As String,  _
                    ByVal Original_DESCRIPTION As String,  _
                    ByVal Original_FABRIC_DESCRIPTION As String,  _
                    ByVal Original_PO_NO As String,  _
                    ByVal Original_COLOR As String,  _
                    ByVal Original_COLOR_CODE As String,  _
                    ByVal Original_LAB_DIP_REF As String,  _
                    ByVal Original_ORDER_QUANTITY As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_SEAL_BY_DATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_EX_FACTORY_DATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_MUST_EX_BD As Global.System.Nullable(Of Date),  _
                    ByVal Original_MODE As String,  _
                    ByVal Original_PACK As String,  _
                    ByVal Original_TTL_PACKS As Global.System.Nullable(Of Integer),  _
                    ByVal Original_FOB_PRICE As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PO_TYPE As String,  _
                    ByVal Original_DESTINATION As String,  _
                    ByVal Original_ADDRESS As String,  _
                    ByVal Original_TABTEST As String,  _
                    ByVal Original_COMMENTS As String,  _
                    ByVal Original_ACKNOWLEDGEMENTDATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_OIM_DATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_IS_ACKNOWLEDGEMENT As Boolean,  _
                    ByVal Original_IS_OIMRECEIVED As Boolean,  _
                    ByVal Original_SLNO As Global.System.Nullable(Of Integer),  _
                    ByVal Original_BARCODE_RECEIVED As Global.System.Nullable(Of Date),  _
                    ByVal Original_BARCODE_DELIVERED As Global.System.Nullable(Of Date),  _
                    ByVal Original_PRINT_LINE As Boolean,  _
                    ByVal Original_DepartmentId As Global.System.Nullable(Of Long),  _
                    ByVal Original_DeliveredBy As String,  _
                    ByVal Original_ProgramNo As String,  _
                    ByVal Original_BARCHODE_PRICE As String,  _
                    ByVal Original_IS_BARCHODERECEIVED As Global.System.Nullable(Of Boolean),  _
                    ByVal OIM_ID As Long) As Integer
            If (OIM_NO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(OIM_NO,String)
            End If
            If (PO_DATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(PO_DATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (ESL_REF Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(ESL_REF,String)
            End If
            If (STYLE_NO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(STYLE_NO,String)
            End If
            If (DESCRIPTION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(DESCRIPTION,String)
            End If
            If (FABRIC_DESCRIPTION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(FABRIC_DESCRIPTION,String)
            End If
            If (PO_NO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(PO_NO,String)
            End If
            If (COLOR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(COLOR,String)
            End If
            If (COLOR_CODE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(COLOR_CODE,String)
            End If
            If (LAB_DIP_REF Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(LAB_DIP_REF,String)
            End If
            If (ORDER_QUANTITY.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(ORDER_QUANTITY.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (SEAL_BY_DATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(SEAL_BY_DATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (EX_FACTORY_DATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(EX_FACTORY_DATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (MUST_EX_BD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(MUST_EX_BD.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (MODE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(MODE,String)
            End If
            If (PACK Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(PACK,String)
            End If
            If (TTL_PACKS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(TTL_PACKS.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (FOB_PRICE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(FOB_PRICE.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (PO_TYPE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(PO_TYPE,String)
            End If
            If (DESTINATION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(DESTINATION,String)
            End If
            If (ADDRESS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(ADDRESS,String)
            End If
            If (TABTEST Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(TABTEST,String)
            End If
            If (COMMENTS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(COMMENTS,String)
            End If
            If (ACKNOWLEDGEMENTDATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(ACKNOWLEDGEMENTDATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (OIM_DATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(OIM_DATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(25).Value = CType(IS_ACKNOWLEDGEMENT,Boolean)
            Me.Adapter.UpdateCommand.Parameters(26).Value = CType(IS_OIMRECEIVED,Boolean)
            If (SLNO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(SLNO.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (BARCODE_RECEIVED.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(BARCODE_RECEIVED.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (BARCODE_DELIVERED.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(BARCODE_DELIVERED.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(30).Value = CType(PRINT_LINE,Boolean)
            If (DepartmentId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(DepartmentId.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (DeliveredBy Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(DeliveredBy,String)
            End If
            If (ProgramNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(ProgramNo,String)
            End If
            If (BARCHODE_PRICE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(BARCHODE_PRICE,String)
            End If
            If (IS_BARCHODERECEIVED.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(IS_BARCHODERECEIVED.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(36).Value = CType(Original_OIM_ID,Long)
            If (Original_OIM_NO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(Original_OIM_NO,String)
            End If
            If (Original_PO_DATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(Original_PO_DATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (Original_ESL_REF Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(Original_ESL_REF,String)
            End If
            If (Original_STYLE_NO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(Original_STYLE_NO,String)
            End If
            If (Original_DESCRIPTION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(Original_DESCRIPTION,String)
            End If
            If (Original_FABRIC_DESCRIPTION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(Original_FABRIC_DESCRIPTION,String)
            End If
            If (Original_PO_NO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(Original_PO_NO,String)
            End If
            If (Original_COLOR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(52).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(Original_COLOR,String)
            End If
            If (Original_COLOR_CODE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(54).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(Original_COLOR_CODE,String)
            End If
            If (Original_LAB_DIP_REF Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(56).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(Original_LAB_DIP_REF,String)
            End If
            If (Original_ORDER_QUANTITY.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(Original_ORDER_QUANTITY.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(58).Value = Global.System.DBNull.Value
            End If
            If (Original_SEAL_BY_DATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(Original_SEAL_BY_DATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(60).Value = Global.System.DBNull.Value
            End If
            If (Original_EX_FACTORY_DATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(Original_EX_FACTORY_DATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(62).Value = Global.System.DBNull.Value
            End If
            If (Original_MUST_EX_BD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(Original_MUST_EX_BD.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(64).Value = Global.System.DBNull.Value
            End If
            If (Original_MODE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(66).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(Original_MODE,String)
            End If
            If (Original_PACK Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(68).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(Original_PACK,String)
            End If
            If (Original_TTL_PACKS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(Original_TTL_PACKS.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(70).Value = Global.System.DBNull.Value
            End If
            If (Original_FOB_PRICE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(Original_FOB_PRICE.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(72).Value = Global.System.DBNull.Value
            End If
            If (Original_PO_TYPE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(74).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(Original_PO_TYPE,String)
            End If
            If (Original_DESTINATION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(76).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(Original_DESTINATION,String)
            End If
            If (Original_ADDRESS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(78).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(Original_ADDRESS,String)
            End If
            If (Original_TABTEST Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(80).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(Original_TABTEST,String)
            End If
            If (Original_COMMENTS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(82).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(Original_COMMENTS,String)
            End If
            If (Original_ACKNOWLEDGEMENTDATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(Original_ACKNOWLEDGEMENTDATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(84).Value = Global.System.DBNull.Value
            End If
            If (Original_OIM_DATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(Original_OIM_DATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(86).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(87).Value = CType(Original_IS_ACKNOWLEDGEMENT,Boolean)
            Me.Adapter.UpdateCommand.Parameters(88).Value = CType(Original_IS_OIMRECEIVED,Boolean)
            If (Original_SLNO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(Original_SLNO.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(90).Value = Global.System.DBNull.Value
            End If
            If (Original_BARCODE_RECEIVED.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(Original_BARCODE_RECEIVED.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(92).Value = Global.System.DBNull.Value
            End If
            If (Original_BARCODE_DELIVERED.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(94).Value = CType(Original_BARCODE_DELIVERED.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(94).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(95).Value = CType(Original_PRINT_LINE,Boolean)
            If (Original_DepartmentId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(96).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(97).Value = CType(Original_DepartmentId.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(96).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(97).Value = Global.System.DBNull.Value
            End If
            If (Original_DeliveredBy Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(98).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(99).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(98).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(99).Value = CType(Original_DeliveredBy,String)
            End If
            If (Original_ProgramNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(100).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(101).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(100).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(101).Value = CType(Original_ProgramNo,String)
            End If
            If (Original_BARCHODE_PRICE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(102).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(103).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(102).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(103).Value = CType(Original_BARCHODE_PRICE,String)
            End If
            If (Original_IS_BARCHODERECEIVED.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(104).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(105).Value = CType(Original_IS_BARCHODERECEIVED.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(104).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(105).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(106).Value = CType(OIM_ID,Long)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal OIM_NO As String,  _
                    ByVal PO_DATE As Global.System.Nullable(Of Date),  _
                    ByVal ESL_REF As String,  _
                    ByVal STYLE_NO As String,  _
                    ByVal DESCRIPTION As String,  _
                    ByVal FABRIC_DESCRIPTION As String,  _
                    ByVal PO_NO As String,  _
                    ByVal COLOR As String,  _
                    ByVal COLOR_CODE As String,  _
                    ByVal LAB_DIP_REF As String,  _
                    ByVal ORDER_QUANTITY As Global.System.Nullable(Of Decimal),  _
                    ByVal SEAL_BY_DATE As Global.System.Nullable(Of Date),  _
                    ByVal EX_FACTORY_DATE As Global.System.Nullable(Of Date),  _
                    ByVal MUST_EX_BD As Global.System.Nullable(Of Date),  _
                    ByVal MODE As String,  _
                    ByVal PACK As String,  _
                    ByVal TTL_PACKS As Global.System.Nullable(Of Integer),  _
                    ByVal FOB_PRICE As Global.System.Nullable(Of Decimal),  _
                    ByVal PO_TYPE As String,  _
                    ByVal DESTINATION As String,  _
                    ByVal ADDRESS As String,  _
                    ByVal TABTEST As String,  _
                    ByVal COMMENTS As String,  _
                    ByVal ACKNOWLEDGEMENTDATE As Global.System.Nullable(Of Date),  _
                    ByVal OIM_DATE As Global.System.Nullable(Of Date),  _
                    ByVal IS_ACKNOWLEDGEMENT As Boolean,  _
                    ByVal IS_OIMRECEIVED As Boolean,  _
                    ByVal SLNO As Global.System.Nullable(Of Integer),  _
                    ByVal BARCODE_RECEIVED As Global.System.Nullable(Of Date),  _
                    ByVal BARCODE_DELIVERED As Global.System.Nullable(Of Date),  _
                    ByVal PRINT_LINE As Boolean,  _
                    ByVal DepartmentId As Global.System.Nullable(Of Long),  _
                    ByVal DeliveredBy As String,  _
                    ByVal ProgramNo As String,  _
                    ByVal BARCHODE_PRICE As String,  _
                    ByVal IS_BARCHODERECEIVED As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_OIM_ID As Long,  _
                    ByVal Original_OIM_NO As String,  _
                    ByVal Original_PO_DATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_ESL_REF As String,  _
                    ByVal Original_STYLE_NO As String,  _
                    ByVal Original_DESCRIPTION As String,  _
                    ByVal Original_FABRIC_DESCRIPTION As String,  _
                    ByVal Original_PO_NO As String,  _
                    ByVal Original_COLOR As String,  _
                    ByVal Original_COLOR_CODE As String,  _
                    ByVal Original_LAB_DIP_REF As String,  _
                    ByVal Original_ORDER_QUANTITY As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_SEAL_BY_DATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_EX_FACTORY_DATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_MUST_EX_BD As Global.System.Nullable(Of Date),  _
                    ByVal Original_MODE As String,  _
                    ByVal Original_PACK As String,  _
                    ByVal Original_TTL_PACKS As Global.System.Nullable(Of Integer),  _
                    ByVal Original_FOB_PRICE As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PO_TYPE As String,  _
                    ByVal Original_DESTINATION As String,  _
                    ByVal Original_ADDRESS As String,  _
                    ByVal Original_TABTEST As String,  _
                    ByVal Original_COMMENTS As String,  _
                    ByVal Original_ACKNOWLEDGEMENTDATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_OIM_DATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_IS_ACKNOWLEDGEMENT As Boolean,  _
                    ByVal Original_IS_OIMRECEIVED As Boolean,  _
                    ByVal Original_SLNO As Global.System.Nullable(Of Integer),  _
                    ByVal Original_BARCODE_RECEIVED As Global.System.Nullable(Of Date),  _
                    ByVal Original_BARCODE_DELIVERED As Global.System.Nullable(Of Date),  _
                    ByVal Original_PRINT_LINE As Boolean,  _
                    ByVal Original_DepartmentId As Global.System.Nullable(Of Long),  _
                    ByVal Original_DeliveredBy As String,  _
                    ByVal Original_ProgramNo As String,  _
                    ByVal Original_BARCHODE_PRICE As String,  _
                    ByVal Original_IS_BARCHODERECEIVED As Global.System.Nullable(Of Boolean)) As Integer
            Return Me.Update(OIM_NO, PO_DATE, ESL_REF, STYLE_NO, DESCRIPTION, FABRIC_DESCRIPTION, PO_NO, COLOR, COLOR_CODE, LAB_DIP_REF, ORDER_QUANTITY, SEAL_BY_DATE, EX_FACTORY_DATE, MUST_EX_BD, MODE, PACK, TTL_PACKS, FOB_PRICE, PO_TYPE, DESTINATION, ADDRESS, TABTEST, COMMENTS, ACKNOWLEDGEMENTDATE, OIM_DATE, IS_ACKNOWLEDGEMENT, IS_OIMRECEIVED, SLNO, BARCODE_RECEIVED, BARCODE_DELIVERED, PRINT_LINE, DepartmentId, DeliveredBy, ProgramNo, BARCHODE_PRICE, IS_BARCHODERECEIVED, Original_OIM_ID, Original_OIM_NO, Original_PO_DATE, Original_ESL_REF, Original_STYLE_NO, Original_DESCRIPTION, Original_FABRIC_DESCRIPTION, Original_PO_NO, Original_COLOR, Original_COLOR_CODE, Original_LAB_DIP_REF, Original_ORDER_QUANTITY, Original_SEAL_BY_DATE, Original_EX_FACTORY_DATE, Original_MUST_EX_BD, Original_MODE, Original_PACK, Original_TTL_PACKS, Original_FOB_PRICE, Original_PO_TYPE, Original_DESTINATION, Original_ADDRESS, Original_TABTEST, Original_COMMENTS, Original_ACKNOWLEDGEMENTDATE, Original_OIM_DATE, Original_IS_ACKNOWLEDGEMENT, Original_IS_OIMRECEIVED, Original_SLNO, Original_BARCODE_RECEIVED, Original_BARCODE_DELIVERED, Original_PRINT_LINE, Original_DepartmentId, Original_DeliveredBy, Original_ProgramNo, Original_BARCHODE_PRICE, Original_IS_BARCHODERECEIVED, Original_OIM_ID)
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _oIM_SHEETTableAdapter As OIM_SHEETTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property OIM_SHEETTableAdapter() As OIM_SHEETTableAdapter
            Get
                Return Me._oIM_SHEETTableAdapter
            End Get
            Set
                Me._oIM_SHEETTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._oIM_SHEETTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._oIM_SHEETTableAdapter.Connection) Is Nothing)) Then
                    Return Me._oIM_SHEETTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._oIM_SHEETTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As OIM_SheetDataSet, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._oIM_SHEETTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.OIM_SHEET.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._oIM_SHEETTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As OIM_SheetDataSet, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._oIM_SHEETTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.OIM_SHEET.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._oIM_SHEETTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As OIM_SheetDataSet, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._oIM_SHEETTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.OIM_SHEET.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._oIM_SHEETTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As OIM_SheetDataSet) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._oIM_SHEETTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._oIM_SHEETTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._oIM_SHEETTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._oIM_SHEETTableAdapter, Me._oIM_SHEETTableAdapter.Connection)
                    Me._oIM_SHEETTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._oIM_SHEETTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._oIM_SHEETTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._oIM_SHEETTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._oIM_SHEETTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._oIM_SHEETTableAdapter) Is Nothing) Then
                    Me._oIM_SHEETTableAdapter.Connection = CType(revertConnections(Me._oIM_SHEETTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._oIM_SHEETTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
